;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 9/11/2012 4:24:26 AM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2EBA      	GOTO       1722
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00E8      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00E7      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
0x000B	0x0870      	MOVF       R0, 0
0x000C	0x00A0      	MOVWF      32
;final_code_1.c,729 :: 		void interrupt(){                              //Timer0 interrupts are handled at here. Here is the main driving section of the cube
;final_code_1.c,730 :: 		if(INTCON.TMR0IF){
0x000D	0x1D0B      	BTFSS      INTCON, 2
0x000E	0x2811      	GOTO       L_interrupt245
;final_code_1.c,731 :: 		encoder();
0x000F	0x2675      	CALL       _encoder
;final_code_1.c,732 :: 		INTCON.TMR0IF = 0; // clear TMR1IF
0x0010	0x110B      	BCF        INTCON, 2
;final_code_1.c,733 :: 		}
L_interrupt245:
;final_code_1.c,736 :: 		}
L__interrupt675:
0x0011	0x0820      	MOVF       32, 0
0x0012	0x00F0      	MOVWF      R0
0x0013	0x0867      	MOVF       ___savePCLATH, 0
0x0014	0x008A      	MOVWF      PCLATH
0x0015	0x0E68      	SWAPF      ___saveSTATUS, 0
0x0016	0x0083      	MOVWF      STATUS
0x0017	0x0EFF      	SWAPF      R15, 1
0x0018	0x0E7F      	SWAPF      R15, 0
0x0019	0x0009      	RETFIE
; end of _interrupt
_Mul_16x16_U:
;__Lib_Math.c,136 :: 		
;__Lib_Math.c,143 :: 		
0x001A	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,144 :: 		
0x001B	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,145 :: 		
0x001C	0x01FB      	CLRF       R11
;__Lib_Math.c,146 :: 		
0x001D	0x01FA      	CLRF       R10
;__Lib_Math.c,147 :: 		
0x001E	0x01F9      	CLRF       R9
;__Lib_Math.c,148 :: 		
0x001F	0x3080      	MOVLW      128
;__Lib_Math.c,149 :: 		
0x0020	0x00F8      	MOVWF      R8
;__Lib_Math.c,150 :: 		
0x0021	0x0CF1      	RRF        R1, 1
;__Lib_Math.c,151 :: 		
0x0022	0x0CF0      	RRF        R0, 1
;__Lib_Math.c,152 :: 		
0x0023	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,153 :: 		
0x0024	0x282E      	GOTO       $+10
;__Lib_Math.c,154 :: 		
0x0025	0x0874      	MOVF       R4, 0
;__Lib_Math.c,155 :: 		
0x0026	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,156 :: 		
0x0027	0x0875      	MOVF       R5, 0
;__Lib_Math.c,157 :: 		
0x0028	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,158 :: 		
0x0029	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,159 :: 		
0x002A	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,160 :: 		
0x002B	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,161 :: 		
0x002C	0x0AFB      	INCF       R11, 1
;__Lib_Math.c,162 :: 		
0x002D	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,163 :: 		
0x002E	0x1FF0      	BTFSS      R0, 7
;__Lib_Math.c,164 :: 		
0x002F	0x2836      	GOTO       $+7
;__Lib_Math.c,165 :: 		
0x0030	0x0874      	MOVF       R4, 0
;__Lib_Math.c,166 :: 		
0x0031	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,167 :: 		
0x0032	0x0875      	MOVF       R5, 0
;__Lib_Math.c,168 :: 		
0x0033	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,169 :: 		
0x0034	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,170 :: 		
0x0035	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,171 :: 		
0x0036	0x0CFB      	RRF        R11, 1
;__Lib_Math.c,172 :: 		
0x0037	0x0CFA      	RRF        R10, 1
;__Lib_Math.c,173 :: 		
0x0038	0x0CF9      	RRF        R9, 1
;__Lib_Math.c,174 :: 		
0x0039	0x0CF8      	RRF        R8, 1
;__Lib_Math.c,175 :: 		
0x003A	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,176 :: 		
0x003B	0x2821      	GOTO       $-26
;__Lib_Math.c,177 :: 		
0x003C	0x087B      	MOVF       R11, 0
;__Lib_Math.c,178 :: 		
0x003D	0x00F3      	MOVWF      R3
;__Lib_Math.c,179 :: 		
0x003E	0x087A      	MOVF       R10, 0
;__Lib_Math.c,180 :: 		
0x003F	0x00F2      	MOVWF      R2
;__Lib_Math.c,181 :: 		
0x0040	0x0879      	MOVF       R9, 0
;__Lib_Math.c,182 :: 		
0x0041	0x00F1      	MOVWF      R1
;__Lib_Math.c,183 :: 		
0x0042	0x0878      	MOVF       R8, 0
;__Lib_Math.c,184 :: 		
0x0043	0x00F0      	MOVWF      R0
;__Lib_Math.c,187 :: 		
0x0044	0x0008      	RETURN
; end of _Mul_16x16_U
_PWM1_Set_Duty:
;__Lib_PWM_c21.c,40 :: 		
;__Lib_PWM_c21.c,44 :: 		
0x0045	0x1683      	BSF        STATUS, 5
0x0046	0x1303      	BCF        STATUS, 6
0x0047	0x0812      	MOVF       PR2, 0
0x0048	0x3E01      	ADDLW      1
0x0049	0x00F0      	MOVWF      R0
0x004A	0x01F1      	CLRF       R0+1
0x004B	0x1803      	BTFSC      STATUS, 0
0x004C	0x0AF1      	INCF       R0+1, 1
0x004D	0x0830      	MOVF       FARG_PWM1_Set_Duty_new_duty, 0
0x004E	0x00F4      	MOVWF      R4
0x004F	0x01F5      	CLRF       R4+1
0x0050	0x201A      	CALL       _Mul_16x16_U
0x0051	0x3006      	MOVLW      6
0x0052	0x00F2      	MOVWF      R2
0x0053	0x0870      	MOVF       R0, 0
0x0054	0x00F4      	MOVWF      R4
0x0055	0x0871      	MOVF       R0+1, 0
0x0056	0x00F5      	MOVWF      R4+1
0x0057	0x0872      	MOVF       R2, 0
L__PWM1_Set_Duty4:
0x0058	0x1903      	BTFSC      STATUS, 2
0x0059	0x285F      	GOTO       L__PWM1_Set_Duty5
0x005A	0x0CF5      	RRF        R4+1, 1
0x005B	0x0CF4      	RRF        R4, 1
0x005C	0x13F5      	BCF        R4+1, 7
0x005D	0x3EFF      	ADDLW      255
0x005E	0x2858      	GOTO       L__PWM1_Set_Duty4
L__PWM1_Set_Duty5:
;__Lib_PWM_c21.c,45 :: 		
0x005F	0x3004      	MOVLW      4
0x0060	0x00F1      	MOVWF      R1
0x0061	0x0874      	MOVF       R4, 0
0x0062	0x00F0      	MOVWF      R0
0x0063	0x0871      	MOVF       R1, 0
L__PWM1_Set_Duty6:
0x0064	0x1903      	BTFSC      STATUS, 2
0x0065	0x286A      	GOTO       L__PWM1_Set_Duty7
0x0066	0x0DF0      	RLF        R0, 1
0x0067	0x1070      	BCF        R0, 0
0x0068	0x3EFF      	ADDLW      255
0x0069	0x2864      	GOTO       L__PWM1_Set_Duty6
L__PWM1_Set_Duty7:
0x006A	0x1283      	BCF        STATUS, 5
0x006B	0x1303      	BCF        STATUS, 6
0x006C	0x3030      	MOVLW      48
0x006D	0x0570      	ANDWF      R0, 0
0x006E	0x00F3      	MOVWF      R3
;__Lib_PWM_c21.c,46 :: 		
0x006F	0x0874      	MOVF       R4, 0
0x0070	0x00F0      	MOVWF      R0
0x0071	0x0875      	MOVF       R4+1, 0
0x0072	0x00F1      	MOVWF      R0+1
0x0073	0x0CF1      	RRF        R0+1, 1
0x0074	0x0CF0      	RRF        R0, 1
0x0075	0x13F1      	BCF        R0+1, 7
0x0076	0x0CF1      	RRF        R0+1, 1
0x0077	0x0CF0      	RRF        R0, 1
0x0078	0x13F1      	BCF        R0+1, 7
0x0079	0x0870      	MOVF       R0, 0
0x007A	0x0095      	MOVWF      CCPR1L
;__Lib_PWM_c21.c,47 :: 		
0x007B	0x300F      	MOVLW      15
0x007C	0x0597      	ANDWF      CCP1CON, 1
;__Lib_PWM_c21.c,48 :: 		
0x007D	0x0873      	MOVF       R3, 0
0x007E	0x0497      	IORWF      CCP1CON, 1
;__Lib_PWM_c21.c,49 :: 		
0x007F	0x0008      	RETURN
; end of _PWM1_Set_Duty
_Delay_22us:
;__Lib_Delays.c,15 :: 		void Delay_22us() {
;__Lib_Delays.c,16 :: 		Delay_us(22);
0x0080	0x3024      	MOVLW      36
0x0081	0x1283      	BCF        STATUS, 5
0x0082	0x1303      	BCF        STATUS, 6
0x0083	0x00FD      	MOVWF      R13
L_Delay_22us1:
0x0084	0x0BFD      	DECFSZ     R13, 1
0x0085	0x2884      	GOTO       L_Delay_22us1
0x0086	0x0000      	NOP
;__Lib_Delays.c,17 :: 		}
0x0087	0x0008      	RETURN
; end of _Delay_22us
_PWM2_Set_Duty:
;__Lib_PWM_c21.c,8 :: 		
;__Lib_PWM_c21.c,12 :: 		
0x0088	0x1683      	BSF        STATUS, 5
0x0089	0x1303      	BCF        STATUS, 6
0x008A	0x0812      	MOVF       PR2, 0
0x008B	0x3E01      	ADDLW      1
0x008C	0x00F0      	MOVWF      R0
0x008D	0x01F1      	CLRF       R0+1
0x008E	0x1803      	BTFSC      STATUS, 0
0x008F	0x0AF1      	INCF       R0+1, 1
0x0090	0x0830      	MOVF       FARG_PWM2_Set_Duty_new_duty, 0
0x0091	0x00F4      	MOVWF      R4
0x0092	0x01F5      	CLRF       R4+1
0x0093	0x201A      	CALL       _Mul_16x16_U
0x0094	0x3006      	MOVLW      6
0x0095	0x00F2      	MOVWF      R2
0x0096	0x0870      	MOVF       R0, 0
0x0097	0x00F4      	MOVWF      R4
0x0098	0x0871      	MOVF       R0+1, 0
0x0099	0x00F5      	MOVWF      R4+1
0x009A	0x0872      	MOVF       R2, 0
L__PWM2_Set_Duty0:
0x009B	0x1903      	BTFSC      STATUS, 2
0x009C	0x28A2      	GOTO       L__PWM2_Set_Duty1
0x009D	0x0CF5      	RRF        R4+1, 1
0x009E	0x0CF4      	RRF        R4, 1
0x009F	0x13F5      	BCF        R4+1, 7
0x00A0	0x3EFF      	ADDLW      255
0x00A1	0x289B      	GOTO       L__PWM2_Set_Duty0
L__PWM2_Set_Duty1:
;__Lib_PWM_c21.c,13 :: 		
0x00A2	0x3004      	MOVLW      4
0x00A3	0x00F1      	MOVWF      R1
0x00A4	0x0874      	MOVF       R4, 0
0x00A5	0x00F0      	MOVWF      R0
0x00A6	0x0871      	MOVF       R1, 0
L__PWM2_Set_Duty2:
0x00A7	0x1903      	BTFSC      STATUS, 2
0x00A8	0x28AD      	GOTO       L__PWM2_Set_Duty3
0x00A9	0x0DF0      	RLF        R0, 1
0x00AA	0x1070      	BCF        R0, 0
0x00AB	0x3EFF      	ADDLW      255
0x00AC	0x28A7      	GOTO       L__PWM2_Set_Duty2
L__PWM2_Set_Duty3:
0x00AD	0x1283      	BCF        STATUS, 5
0x00AE	0x1303      	BCF        STATUS, 6
0x00AF	0x3030      	MOVLW      48
0x00B0	0x0570      	ANDWF      R0, 0
0x00B1	0x00F3      	MOVWF      R3
;__Lib_PWM_c21.c,14 :: 		
0x00B2	0x0874      	MOVF       R4, 0
0x00B3	0x00F0      	MOVWF      R0
0x00B4	0x0875      	MOVF       R4+1, 0
0x00B5	0x00F1      	MOVWF      R0+1
0x00B6	0x0CF1      	RRF        R0+1, 1
0x00B7	0x0CF0      	RRF        R0, 1
0x00B8	0x13F1      	BCF        R0+1, 7
0x00B9	0x0CF1      	RRF        R0+1, 1
0x00BA	0x0CF0      	RRF        R0, 1
0x00BB	0x13F1      	BCF        R0+1, 7
0x00BC	0x0870      	MOVF       R0, 0
0x00BD	0x009B      	MOVWF      CCPR2L
;__Lib_PWM_c21.c,15 :: 		
0x00BE	0x300F      	MOVLW      15
0x00BF	0x059D      	ANDWF      CCP2CON, 1
;__Lib_PWM_c21.c,16 :: 		
0x00C0	0x0873      	MOVF       R3, 0
0x00C1	0x049D      	IORWF      CCP2CON, 1
;__Lib_PWM_c21.c,17 :: 		
0x00C2	0x0008      	RETURN
; end of _PWM2_Set_Duty
_rightT:
;final_code_1.c,147 :: 		rightT(){
;final_code_1.c,149 :: 		PORTC.F3=1;    //left motor forward
0x00C3	0x1283      	BCF        STATUS, 5
0x00C4	0x1303      	BCF        STATUS, 6
0x00C5	0x1587      	BSF        PORTC, 3
;final_code_1.c,150 :: 		PORTC.F6=1;
0x00C6	0x1707      	BSF        PORTC, 6
;final_code_1.c,151 :: 		PORTC.F4=0;    //Right motor stopped
0x00C7	0x1207      	BCF        PORTC, 4
;final_code_1.c,152 :: 		PORTC.F5=1;
0x00C8	0x1687      	BSF        PORTC, 5
;final_code_1.c,153 :: 		PWM1_Set_Duty(190);
0x00C9	0x30BE      	MOVLW      190
0x00CA	0x1683      	BSF        STATUS, 5
0x00CB	0x00B0      	MOVWF      FARG_PWM1_Set_Duty_new_duty
0x00CC	0x2045      	CALL       _PWM1_Set_Duty
;final_code_1.c,154 :: 		PWM2_Set_Duty(190);
0x00CD	0x30BE      	MOVLW      190
0x00CE	0x1683      	BSF        STATUS, 5
0x00CF	0x00B0      	MOVWF      FARG_PWM2_Set_Duty_new_duty
0x00D0	0x2088      	CALL       _PWM2_Set_Duty
;final_code_1.c,156 :: 		}
0x00D1	0x0008      	RETURN
; end of _rightT
_leftT:
;final_code_1.c,137 :: 		leftT(){
;final_code_1.c,138 :: 		PORTC.F3=1;    //left motor backward
0x00D2	0x1283      	BCF        STATUS, 5
0x00D3	0x1303      	BCF        STATUS, 6
0x00D4	0x1587      	BSF        PORTC, 3
;final_code_1.c,139 :: 		PORTC.F6=1;
0x00D5	0x1707      	BSF        PORTC, 6
;final_code_1.c,140 :: 		PORTC.F4=1;    //Right motor forward
0x00D6	0x1607      	BSF        PORTC, 4
;final_code_1.c,141 :: 		PORTC.F5=0;
0x00D7	0x1287      	BCF        PORTC, 5
;final_code_1.c,142 :: 		PWM1_Set_Duty(190);
0x00D8	0x30BE      	MOVLW      190
0x00D9	0x1683      	BSF        STATUS, 5
0x00DA	0x00B0      	MOVWF      FARG_PWM1_Set_Duty_new_duty
0x00DB	0x2045      	CALL       _PWM1_Set_Duty
;final_code_1.c,143 :: 		PWM2_Set_Duty(190);
0x00DC	0x30BE      	MOVLW      190
0x00DD	0x1683      	BSF        STATUS, 5
0x00DE	0x00B0      	MOVWF      FARG_PWM2_Set_Duty_new_duty
0x00DF	0x2088      	CALL       _PWM2_Set_Duty
;final_code_1.c,145 :: 		}
0x00E0	0x0008      	RETURN
; end of _leftT
_ADC_Read:
;__Lib_ADC_88X.c,6 :: 		
;__Lib_ADC_88X.c,8 :: 		
0x00E1	0x303C      	MOVLW      60
0x00E2	0x1283      	BCF        STATUS, 5
0x00E3	0x1303      	BCF        STATUS, 6
0x00E4	0x059F      	ANDWF      ADCON0, 1
;__Lib_ADC_88X.c,12 :: 		
0x00E5	0x30C0      	MOVLW      192
0x00E6	0x009F      	MOVWF      ADCON0
;__Lib_ADC_88X.c,13 :: 		
0x00E7	0x086F      	MOVF       FARG_ADC_Read_channel, 0
0x00E8	0x00F0      	MOVWF      R0
0x00E9	0x0DF0      	RLF        R0, 1
0x00EA	0x1070      	BCF        R0, 0
0x00EB	0x0DF0      	RLF        R0, 1
0x00EC	0x1070      	BCF        R0, 0
0x00ED	0x0870      	MOVF       R0, 0
0x00EE	0x049F      	IORWF      ADCON0, 1
;__Lib_ADC_88X.c,14 :: 		
0x00EF	0x1683      	BSF        STATUS, 5
0x00F0	0x179F      	BSF        ADCON1, 7
;__Lib_ADC_88X.c,17 :: 		
0x00F1	0x1283      	BCF        STATUS, 5
0x00F2	0x141F      	BSF        ADCON0, 0
;__Lib_ADC_88X.c,20 :: 		
0x00F3	0x2080      	CALL       _Delay_22us
;__Lib_ADC_88X.c,23 :: 		
0x00F4	0x149F      	BSF        ADCON0, 1
;__Lib_ADC_88X.c,26 :: 		
L_ADC_Read0:
0x00F5	0x1C9F      	BTFSS      ADCON0, 1
0x00F6	0x28F9      	GOTO       L_ADC_Read1
;__Lib_ADC_88X.c,27 :: 		
0x00F7	0x0000      	NOP
0x00F8	0x28F5      	GOTO       L_ADC_Read0
L_ADC_Read1:
;__Lib_ADC_88X.c,30 :: 		
0x00F9	0x101F      	BCF        ADCON0, 0
;__Lib_ADC_88X.c,33 :: 		
0x00FA	0x081E      	MOVF       ADRESH, 0
0x00FB	0x00F1      	MOVWF      R0+1
0x00FC	0x01F0      	CLRF       R0
0x00FD	0x1683      	BSF        STATUS, 5
0x00FE	0x081E      	MOVF       ADRESL, 0
0x00FF	0x04F0      	IORWF      R0, 1
0x0100	0x3000      	MOVLW      0
0x0101	0x04F1      	IORWF      R0+1, 1
;__Lib_ADC_88X.c,34 :: 		
0x0102	0x0008      	RETURN
; end of _ADC_Read
_moveF:
;final_code_1.c,41 :: 		void moveF(){
;final_code_1.c,42 :: 		PORTC.F3=1;
0x0103	0x1283      	BCF        STATUS, 5
0x0104	0x1303      	BCF        STATUS, 6
0x0105	0x1587      	BSF        PORTC, 3
;final_code_1.c,43 :: 		PORTC.F4=0;
0x0106	0x1207      	BCF        PORTC, 4
;final_code_1.c,44 :: 		PORTC.F5=0;
0x0107	0x1287      	BCF        PORTC, 5
;final_code_1.c,45 :: 		PORTC.F6=1;
0x0108	0x1707      	BSF        PORTC, 6
;final_code_1.c,46 :: 		rotationMode=3;
0x0109	0x3003      	MOVLW      3
0x010A	0x00A5      	MOVWF      _rotationMode
0x010B	0x3000      	MOVLW      0
0x010C	0x00A6      	MOVWF      _rotationMode+1
;final_code_1.c,47 :: 		}
0x010D	0x0008      	RETURN
; end of _moveF
_initEncoder:
;final_code_1.c,519 :: 		void initEncoder(){
;final_code_1.c,520 :: 		TMR1_value=0;
0x010E	0x1283      	BCF        STATUS, 5
0x010F	0x1303      	BCF        STATUS, 6
0x0110	0x01B5      	CLRF       _TMR1_value
0x0111	0x01B6      	CLRF       _TMR1_value+1
;final_code_1.c,521 :: 		TMR0_value=0;
0x0112	0x01AF      	CLRF       _TMR0_value
0x0113	0x01B0      	CLRF       _TMR0_value+1
;final_code_1.c,522 :: 		}
0x0114	0x0008      	RETURN
; end of _initEncoder
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0115	0x1283      	BCF        STATUS, 5
0x0116	0x1303      	BCF        STATUS, 6
0x0117	0x0842      	MOVF       ___DoICPAddr+1, 0
0x0118	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0119	0x0841      	MOVF       ___DoICPAddr, 0
0x011A	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
0x011B	0x0008      	RETURN
; end of _____DoICP
_sensorRead:
;final_code_1.c,158 :: 		sensorRead(){
;final_code_1.c,160 :: 		totFront=0;
0x011C	0x1283      	BCF        STATUS, 5
0x011D	0x1303      	BCF        STATUS, 6
0x011E	0x01B1      	CLRF       _totFront
0x011F	0x01B2      	CLRF       _totFront+1
;final_code_1.c,161 :: 		totBack=0;
0x0120	0x01BF      	CLRF       _totBack
0x0121	0x01C0      	CLRF       _totBack+1
;final_code_1.c,162 :: 		if(ADC_Read(0)>adcVal){
0x0122	0x01EF      	CLRF       FARG_ADC_Read_channel
0x0123	0x20E1      	CALL       _ADC_Read
0x0124	0x0871      	MOVF       R0+1, 0
0x0125	0x1283      	BCF        STATUS, 5
0x0126	0x023E      	SUBWF      _adcVal+1, 0
0x0127	0x1D03      	BTFSS      STATUS, 2
0x0128	0x292B      	GOTO       L__sensorRead480
0x0129	0x0870      	MOVF       R0, 0
0x012A	0x023D      	SUBWF      _adcVal, 0
L__sensorRead480:
0x012B	0x1803      	BTFSC      STATUS, 0
0x012C	0x2939      	GOTO       L_sensorRead0
;final_code_1.c,163 :: 		text[0]='1';
0x012D	0x3031      	MOVLW      49
0x012E	0x1683      	BSF        STATUS, 5
0x012F	0x00A0      	MOVWF      _text
;final_code_1.c,164 :: 		sw[1][0]=1;
0x0130	0x3001      	MOVLW      1
0x0131	0x1283      	BCF        STATUS, 5
0x0132	0x00D5      	MOVWF      _sw+18
0x0133	0x3000      	MOVLW      0
0x0134	0x00D6      	MOVWF      _sw+19
;final_code_1.c,165 :: 		totBack++;
0x0135	0x0ABF      	INCF       _totBack, 1
0x0136	0x1903      	BTFSC      STATUS, 2
0x0137	0x0AC0      	INCF       _totBack+1, 1
;final_code_1.c,166 :: 		}else{
0x0138	0x293F      	GOTO       L_sensorRead1
L_sensorRead0:
;final_code_1.c,167 :: 		text[0]='0';
0x0139	0x3030      	MOVLW      48
0x013A	0x1683      	BSF        STATUS, 5
0x013B	0x00A0      	MOVWF      _text
;final_code_1.c,168 :: 		sw[1][0]=0;
0x013C	0x1283      	BCF        STATUS, 5
0x013D	0x01D5      	CLRF       _sw+18
0x013E	0x01D6      	CLRF       _sw+19
;final_code_1.c,169 :: 		}
L_sensorRead1:
;final_code_1.c,170 :: 		if(ADC_Read(1)>adcVal){
0x013F	0x3001      	MOVLW      1
0x0140	0x00EF      	MOVWF      FARG_ADC_Read_channel
0x0141	0x20E1      	CALL       _ADC_Read
0x0142	0x0871      	MOVF       R0+1, 0
0x0143	0x1283      	BCF        STATUS, 5
0x0144	0x023E      	SUBWF      _adcVal+1, 0
0x0145	0x1D03      	BTFSS      STATUS, 2
0x0146	0x2949      	GOTO       L__sensorRead481
0x0147	0x0870      	MOVF       R0, 0
0x0148	0x023D      	SUBWF      _adcVal, 0
L__sensorRead481:
0x0149	0x1803      	BTFSC      STATUS, 0
0x014A	0x2957      	GOTO       L_sensorRead2
;final_code_1.c,171 :: 		text[1]='1';
0x014B	0x3031      	MOVLW      49
0x014C	0x1683      	BSF        STATUS, 5
0x014D	0x00A1      	MOVWF      _text+1
;final_code_1.c,172 :: 		sw[1][1]=1;
0x014E	0x3001      	MOVLW      1
0x014F	0x1283      	BCF        STATUS, 5
0x0150	0x00D7      	MOVWF      _sw+20
0x0151	0x3000      	MOVLW      0
0x0152	0x00D8      	MOVWF      _sw+21
;final_code_1.c,173 :: 		totBack++;
0x0153	0x0ABF      	INCF       _totBack, 1
0x0154	0x1903      	BTFSC      STATUS, 2
0x0155	0x0AC0      	INCF       _totBack+1, 1
;final_code_1.c,174 :: 		}else{
0x0156	0x295D      	GOTO       L_sensorRead3
L_sensorRead2:
;final_code_1.c,175 :: 		text[1]='0';
0x0157	0x3030      	MOVLW      48
0x0158	0x1683      	BSF        STATUS, 5
0x0159	0x00A1      	MOVWF      _text+1
;final_code_1.c,176 :: 		sw[1][1]=0;
0x015A	0x1283      	BCF        STATUS, 5
0x015B	0x01D7      	CLRF       _sw+20
0x015C	0x01D8      	CLRF       _sw+21
;final_code_1.c,177 :: 		}
L_sensorRead3:
;final_code_1.c,178 :: 		if(ADC_Read(2)> adcVal){
0x015D	0x3002      	MOVLW      2
0x015E	0x00EF      	MOVWF      FARG_ADC_Read_channel
0x015F	0x20E1      	CALL       _ADC_Read
0x0160	0x0871      	MOVF       R0+1, 0
0x0161	0x1283      	BCF        STATUS, 5
0x0162	0x023E      	SUBWF      _adcVal+1, 0
0x0163	0x1D03      	BTFSS      STATUS, 2
0x0164	0x2967      	GOTO       L__sensorRead482
0x0165	0x0870      	MOVF       R0, 0
0x0166	0x023D      	SUBWF      _adcVal, 0
L__sensorRead482:
0x0167	0x1803      	BTFSC      STATUS, 0
0x0168	0x2975      	GOTO       L_sensorRead4
;final_code_1.c,179 :: 		text[2]='1';
0x0169	0x3031      	MOVLW      49
0x016A	0x1683      	BSF        STATUS, 5
0x016B	0x00A2      	MOVWF      _text+2
;final_code_1.c,180 :: 		sw[1][2]=1;
0x016C	0x3001      	MOVLW      1
0x016D	0x1283      	BCF        STATUS, 5
0x016E	0x00D9      	MOVWF      _sw+22
0x016F	0x3000      	MOVLW      0
0x0170	0x00DA      	MOVWF      _sw+23
;final_code_1.c,181 :: 		totBack++;
0x0171	0x0ABF      	INCF       _totBack, 1
0x0172	0x1903      	BTFSC      STATUS, 2
0x0173	0x0AC0      	INCF       _totBack+1, 1
;final_code_1.c,182 :: 		}else{
0x0174	0x297B      	GOTO       L_sensorRead5
L_sensorRead4:
;final_code_1.c,183 :: 		text[2]='0';
0x0175	0x3030      	MOVLW      48
0x0176	0x1683      	BSF        STATUS, 5
0x0177	0x00A2      	MOVWF      _text+2
;final_code_1.c,184 :: 		sw[1][2]=0;
0x0178	0x1283      	BCF        STATUS, 5
0x0179	0x01D9      	CLRF       _sw+22
0x017A	0x01DA      	CLRF       _sw+23
;final_code_1.c,185 :: 		}
L_sensorRead5:
;final_code_1.c,186 :: 		if(ADC_Read(3)> adcVal){
0x017B	0x3003      	MOVLW      3
0x017C	0x00EF      	MOVWF      FARG_ADC_Read_channel
0x017D	0x20E1      	CALL       _ADC_Read
0x017E	0x0871      	MOVF       R0+1, 0
0x017F	0x1283      	BCF        STATUS, 5
0x0180	0x023E      	SUBWF      _adcVal+1, 0
0x0181	0x1D03      	BTFSS      STATUS, 2
0x0182	0x2985      	GOTO       L__sensorRead483
0x0183	0x0870      	MOVF       R0, 0
0x0184	0x023D      	SUBWF      _adcVal, 0
L__sensorRead483:
0x0185	0x1803      	BTFSC      STATUS, 0
0x0186	0x2993      	GOTO       L_sensorRead6
;final_code_1.c,187 :: 		text[3]='1';
0x0187	0x3031      	MOVLW      49
0x0188	0x1683      	BSF        STATUS, 5
0x0189	0x00A3      	MOVWF      _text+3
;final_code_1.c,188 :: 		sw[1][3]=1;
0x018A	0x3001      	MOVLW      1
0x018B	0x1283      	BCF        STATUS, 5
0x018C	0x00DB      	MOVWF      _sw+24
0x018D	0x3000      	MOVLW      0
0x018E	0x00DC      	MOVWF      _sw+25
;final_code_1.c,189 :: 		totBack++;
0x018F	0x0ABF      	INCF       _totBack, 1
0x0190	0x1903      	BTFSC      STATUS, 2
0x0191	0x0AC0      	INCF       _totBack+1, 1
;final_code_1.c,190 :: 		}else{
0x0192	0x2999      	GOTO       L_sensorRead7
L_sensorRead6:
;final_code_1.c,191 :: 		text[3]='0';
0x0193	0x3030      	MOVLW      48
0x0194	0x1683      	BSF        STATUS, 5
0x0195	0x00A3      	MOVWF      _text+3
;final_code_1.c,192 :: 		sw[1][3]=0;
0x0196	0x1283      	BCF        STATUS, 5
0x0197	0x01DB      	CLRF       _sw+24
0x0198	0x01DC      	CLRF       _sw+25
;final_code_1.c,193 :: 		}
L_sensorRead7:
;final_code_1.c,195 :: 		if(ADC_Read(4)>adcVal){
0x0199	0x3004      	MOVLW      4
0x019A	0x00EF      	MOVWF      FARG_ADC_Read_channel
0x019B	0x20E1      	CALL       _ADC_Read
0x019C	0x0871      	MOVF       R0+1, 0
0x019D	0x1283      	BCF        STATUS, 5
0x019E	0x023E      	SUBWF      _adcVal+1, 0
0x019F	0x1D03      	BTFSS      STATUS, 2
0x01A0	0x29A3      	GOTO       L__sensorRead484
0x01A1	0x0870      	MOVF       R0, 0
0x01A2	0x023D      	SUBWF      _adcVal, 0
L__sensorRead484:
0x01A3	0x1803      	BTFSC      STATUS, 0
0x01A4	0x29B1      	GOTO       L_sensorRead8
;final_code_1.c,196 :: 		text[4]='1';
0x01A5	0x3031      	MOVLW      49
0x01A6	0x1683      	BSF        STATUS, 5
0x01A7	0x00A4      	MOVWF      _text+4
;final_code_1.c,197 :: 		sw[1][4]=1;
0x01A8	0x3001      	MOVLW      1
0x01A9	0x1283      	BCF        STATUS, 5
0x01AA	0x00DD      	MOVWF      _sw+26
0x01AB	0x3000      	MOVLW      0
0x01AC	0x00DE      	MOVWF      _sw+27
;final_code_1.c,198 :: 		totBack++;
0x01AD	0x0ABF      	INCF       _totBack, 1
0x01AE	0x1903      	BTFSC      STATUS, 2
0x01AF	0x0AC0      	INCF       _totBack+1, 1
;final_code_1.c,199 :: 		}else{
0x01B0	0x29B7      	GOTO       L_sensorRead9
L_sensorRead8:
;final_code_1.c,200 :: 		text[4]='0';
0x01B1	0x3030      	MOVLW      48
0x01B2	0x1683      	BSF        STATUS, 5
0x01B3	0x00A4      	MOVWF      _text+4
;final_code_1.c,201 :: 		sw[1][4]=0;
0x01B4	0x1283      	BCF        STATUS, 5
0x01B5	0x01DD      	CLRF       _sw+26
0x01B6	0x01DE      	CLRF       _sw+27
;final_code_1.c,202 :: 		}
L_sensorRead9:
;final_code_1.c,203 :: 		if(ADC_Read(5)>adcVal1){
0x01B7	0x3005      	MOVLW      5
0x01B8	0x00EF      	MOVWF      FARG_ADC_Read_channel
0x01B9	0x20E1      	CALL       _ADC_Read
0x01BA	0x0871      	MOVF       R0+1, 0
0x01BB	0x1283      	BCF        STATUS, 5
0x01BC	0x023C      	SUBWF      _adcVal1+1, 0
0x01BD	0x1D03      	BTFSS      STATUS, 2
0x01BE	0x29C1      	GOTO       L__sensorRead485
0x01BF	0x0870      	MOVF       R0, 0
0x01C0	0x023B      	SUBWF      _adcVal1, 0
L__sensorRead485:
0x01C1	0x1803      	BTFSC      STATUS, 0
0x01C2	0x29CF      	GOTO       L_sensorRead10
;final_code_1.c,204 :: 		text[5]='1';
0x01C3	0x3031      	MOVLW      49
0x01C4	0x1683      	BSF        STATUS, 5
0x01C5	0x00A5      	MOVWF      _text+5
;final_code_1.c,205 :: 		sw[0][0]=1;
0x01C6	0x3001      	MOVLW      1
0x01C7	0x1283      	BCF        STATUS, 5
0x01C8	0x00C3      	MOVWF      _sw
0x01C9	0x3000      	MOVLW      0
0x01CA	0x00C4      	MOVWF      _sw+1
;final_code_1.c,206 :: 		totFront++;
0x01CB	0x0AB1      	INCF       _totFront, 1
0x01CC	0x1903      	BTFSC      STATUS, 2
0x01CD	0x0AB2      	INCF       _totFront+1, 1
;final_code_1.c,207 :: 		}else{
0x01CE	0x29D5      	GOTO       L_sensorRead11
L_sensorRead10:
;final_code_1.c,208 :: 		text[5]='0';
0x01CF	0x3030      	MOVLW      48
0x01D0	0x1683      	BSF        STATUS, 5
0x01D1	0x00A5      	MOVWF      _text+5
;final_code_1.c,209 :: 		sw[0][0]=0;
0x01D2	0x1283      	BCF        STATUS, 5
0x01D3	0x01C3      	CLRF       _sw
0x01D4	0x01C4      	CLRF       _sw+1
;final_code_1.c,210 :: 		}
L_sensorRead11:
;final_code_1.c,212 :: 		if(ADC_Read(6)>adcVal1){
0x01D5	0x3006      	MOVLW      6
0x01D6	0x00EF      	MOVWF      FARG_ADC_Read_channel
0x01D7	0x20E1      	CALL       _ADC_Read
0x01D8	0x0871      	MOVF       R0+1, 0
0x01D9	0x1283      	BCF        STATUS, 5
0x01DA	0x023C      	SUBWF      _adcVal1+1, 0
0x01DB	0x1D03      	BTFSS      STATUS, 2
0x01DC	0x29DF      	GOTO       L__sensorRead486
0x01DD	0x0870      	MOVF       R0, 0
0x01DE	0x023B      	SUBWF      _adcVal1, 0
L__sensorRead486:
0x01DF	0x1803      	BTFSC      STATUS, 0
0x01E0	0x29ED      	GOTO       L_sensorRead12
;final_code_1.c,213 :: 		text[6]='1';
0x01E1	0x3031      	MOVLW      49
0x01E2	0x1683      	BSF        STATUS, 5
0x01E3	0x00A6      	MOVWF      _text+6
;final_code_1.c,214 :: 		sw[0][1]=1;
0x01E4	0x3001      	MOVLW      1
0x01E5	0x1283      	BCF        STATUS, 5
0x01E6	0x00C5      	MOVWF      _sw+2
0x01E7	0x3000      	MOVLW      0
0x01E8	0x00C6      	MOVWF      _sw+3
;final_code_1.c,215 :: 		totFront++;
0x01E9	0x0AB1      	INCF       _totFront, 1
0x01EA	0x1903      	BTFSC      STATUS, 2
0x01EB	0x0AB2      	INCF       _totFront+1, 1
;final_code_1.c,216 :: 		}else{
0x01EC	0x29F3      	GOTO       L_sensorRead13
L_sensorRead12:
;final_code_1.c,217 :: 		text[6]='0';
0x01ED	0x3030      	MOVLW      48
0x01EE	0x1683      	BSF        STATUS, 5
0x01EF	0x00A6      	MOVWF      _text+6
;final_code_1.c,218 :: 		sw[0][1]=0;
0x01F0	0x1283      	BCF        STATUS, 5
0x01F1	0x01C5      	CLRF       _sw+2
0x01F2	0x01C6      	CLRF       _sw+3
;final_code_1.c,219 :: 		}
L_sensorRead13:
;final_code_1.c,220 :: 		if(ADC_Read(7)>adcVal1){
0x01F3	0x3007      	MOVLW      7
0x01F4	0x00EF      	MOVWF      FARG_ADC_Read_channel
0x01F5	0x20E1      	CALL       _ADC_Read
0x01F6	0x0871      	MOVF       R0+1, 0
0x01F7	0x1283      	BCF        STATUS, 5
0x01F8	0x023C      	SUBWF      _adcVal1+1, 0
0x01F9	0x1D03      	BTFSS      STATUS, 2
0x01FA	0x29FD      	GOTO       L__sensorRead487
0x01FB	0x0870      	MOVF       R0, 0
0x01FC	0x023B      	SUBWF      _adcVal1, 0
L__sensorRead487:
0x01FD	0x1803      	BTFSC      STATUS, 0
0x01FE	0x2A0B      	GOTO       L_sensorRead14
;final_code_1.c,221 :: 		text[7]='1';
0x01FF	0x3031      	MOVLW      49
0x0200	0x1683      	BSF        STATUS, 5
0x0201	0x00A7      	MOVWF      _text+7
;final_code_1.c,222 :: 		sw[0][2]=1;
0x0202	0x3001      	MOVLW      1
0x0203	0x1283      	BCF        STATUS, 5
0x0204	0x00C7      	MOVWF      _sw+4
0x0205	0x3000      	MOVLW      0
0x0206	0x00C8      	MOVWF      _sw+5
;final_code_1.c,223 :: 		totFront++;
0x0207	0x0AB1      	INCF       _totFront, 1
0x0208	0x1903      	BTFSC      STATUS, 2
0x0209	0x0AB2      	INCF       _totFront+1, 1
;final_code_1.c,224 :: 		}else{
0x020A	0x2A11      	GOTO       L_sensorRead15
L_sensorRead14:
;final_code_1.c,225 :: 		text[7]='0';
0x020B	0x3030      	MOVLW      48
0x020C	0x1683      	BSF        STATUS, 5
0x020D	0x00A7      	MOVWF      _text+7
;final_code_1.c,226 :: 		sw[0][2]=0;
0x020E	0x1283      	BCF        STATUS, 5
0x020F	0x01C7      	CLRF       _sw+4
0x0210	0x01C8      	CLRF       _sw+5
;final_code_1.c,227 :: 		}
L_sensorRead15:
;final_code_1.c,228 :: 		if(ADC_Read(8)>adcVal1){
0x0211	0x3008      	MOVLW      8
0x0212	0x00EF      	MOVWF      FARG_ADC_Read_channel
0x0213	0x20E1      	CALL       _ADC_Read
0x0214	0x0871      	MOVF       R0+1, 0
0x0215	0x1283      	BCF        STATUS, 5
0x0216	0x023C      	SUBWF      _adcVal1+1, 0
0x0217	0x1D03      	BTFSS      STATUS, 2
0x0218	0x2A1B      	GOTO       L__sensorRead488
0x0219	0x0870      	MOVF       R0, 0
0x021A	0x023B      	SUBWF      _adcVal1, 0
L__sensorRead488:
0x021B	0x1803      	BTFSC      STATUS, 0
0x021C	0x2A29      	GOTO       L_sensorRead16
;final_code_1.c,229 :: 		text[8]='1';
0x021D	0x3031      	MOVLW      49
0x021E	0x1683      	BSF        STATUS, 5
0x021F	0x00A8      	MOVWF      _text+8
;final_code_1.c,230 :: 		sw[0][3]=1;
0x0220	0x3001      	MOVLW      1
0x0221	0x1283      	BCF        STATUS, 5
0x0222	0x00C9      	MOVWF      _sw+6
0x0223	0x3000      	MOVLW      0
0x0224	0x00CA      	MOVWF      _sw+7
;final_code_1.c,231 :: 		totFront++;
0x0225	0x0AB1      	INCF       _totFront, 1
0x0226	0x1903      	BTFSC      STATUS, 2
0x0227	0x0AB2      	INCF       _totFront+1, 1
;final_code_1.c,232 :: 		}else{
0x0228	0x2A2F      	GOTO       L_sensorRead17
L_sensorRead16:
;final_code_1.c,233 :: 		text[8]='0';
0x0229	0x3030      	MOVLW      48
0x022A	0x1683      	BSF        STATUS, 5
0x022B	0x00A8      	MOVWF      _text+8
;final_code_1.c,234 :: 		sw[0][3]=0;
0x022C	0x1283      	BCF        STATUS, 5
0x022D	0x01C9      	CLRF       _sw+6
0x022E	0x01CA      	CLRF       _sw+7
;final_code_1.c,235 :: 		}
L_sensorRead17:
;final_code_1.c,236 :: 		if(ADC_Read(9)>adcVal1){
0x022F	0x3009      	MOVLW      9
0x0230	0x00EF      	MOVWF      FARG_ADC_Read_channel
0x0231	0x20E1      	CALL       _ADC_Read
0x0232	0x0871      	MOVF       R0+1, 0
0x0233	0x1283      	BCF        STATUS, 5
0x0234	0x023C      	SUBWF      _adcVal1+1, 0
0x0235	0x1D03      	BTFSS      STATUS, 2
0x0236	0x2A39      	GOTO       L__sensorRead489
0x0237	0x0870      	MOVF       R0, 0
0x0238	0x023B      	SUBWF      _adcVal1, 0
L__sensorRead489:
0x0239	0x1803      	BTFSC      STATUS, 0
0x023A	0x2A47      	GOTO       L_sensorRead18
;final_code_1.c,237 :: 		text[9]='1';
0x023B	0x3031      	MOVLW      49
0x023C	0x1683      	BSF        STATUS, 5
0x023D	0x00A9      	MOVWF      _text+9
;final_code_1.c,238 :: 		sw[0][4]=1;
0x023E	0x3001      	MOVLW      1
0x023F	0x1283      	BCF        STATUS, 5
0x0240	0x00CB      	MOVWF      _sw+8
0x0241	0x3000      	MOVLW      0
0x0242	0x00CC      	MOVWF      _sw+9
;final_code_1.c,239 :: 		totFront++;
0x0243	0x0AB1      	INCF       _totFront, 1
0x0244	0x1903      	BTFSC      STATUS, 2
0x0245	0x0AB2      	INCF       _totFront+1, 1
;final_code_1.c,240 :: 		}else{
0x0246	0x2A4D      	GOTO       L_sensorRead19
L_sensorRead18:
;final_code_1.c,241 :: 		text[9]='0';
0x0247	0x3030      	MOVLW      48
0x0248	0x1683      	BSF        STATUS, 5
0x0249	0x00A9      	MOVWF      _text+9
;final_code_1.c,242 :: 		sw[0][4]=0;
0x024A	0x1283      	BCF        STATUS, 5
0x024B	0x01CB      	CLRF       _sw+8
0x024C	0x01CC      	CLRF       _sw+9
;final_code_1.c,243 :: 		}
L_sensorRead19:
;final_code_1.c,244 :: 		if(ADC_Read(10)>adcVal1){
0x024D	0x300A      	MOVLW      10
0x024E	0x00EF      	MOVWF      FARG_ADC_Read_channel
0x024F	0x20E1      	CALL       _ADC_Read
0x0250	0x0871      	MOVF       R0+1, 0
0x0251	0x1283      	BCF        STATUS, 5
0x0252	0x023C      	SUBWF      _adcVal1+1, 0
0x0253	0x1D03      	BTFSS      STATUS, 2
0x0254	0x2A57      	GOTO       L__sensorRead490
0x0255	0x0870      	MOVF       R0, 0
0x0256	0x023B      	SUBWF      _adcVal1, 0
L__sensorRead490:
0x0257	0x1803      	BTFSC      STATUS, 0
0x0258	0x2A65      	GOTO       L_sensorRead20
;final_code_1.c,245 :: 		text[10]='1';
0x0259	0x3031      	MOVLW      49
0x025A	0x1683      	BSF        STATUS, 5
0x025B	0x00AA      	MOVWF      _text+10
;final_code_1.c,246 :: 		sw[0][5]=1;
0x025C	0x3001      	MOVLW      1
0x025D	0x1283      	BCF        STATUS, 5
0x025E	0x00CD      	MOVWF      _sw+10
0x025F	0x3000      	MOVLW      0
0x0260	0x00CE      	MOVWF      _sw+11
;final_code_1.c,247 :: 		totFront++;
0x0261	0x0AB1      	INCF       _totFront, 1
0x0262	0x1903      	BTFSC      STATUS, 2
0x0263	0x0AB2      	INCF       _totFront+1, 1
;final_code_1.c,248 :: 		}else{
0x0264	0x2A6B      	GOTO       L_sensorRead21
L_sensorRead20:
;final_code_1.c,249 :: 		text[10]='0';
0x0265	0x3030      	MOVLW      48
0x0266	0x1683      	BSF        STATUS, 5
0x0267	0x00AA      	MOVWF      _text+10
;final_code_1.c,250 :: 		sw[0][5]=0;
0x0268	0x1283      	BCF        STATUS, 5
0x0269	0x01CD      	CLRF       _sw+10
0x026A	0x01CE      	CLRF       _sw+11
;final_code_1.c,251 :: 		}
L_sensorRead21:
;final_code_1.c,252 :: 		if(ADC_Read(11)>adcVal1){
0x026B	0x300B      	MOVLW      11
0x026C	0x00EF      	MOVWF      FARG_ADC_Read_channel
0x026D	0x20E1      	CALL       _ADC_Read
0x026E	0x0871      	MOVF       R0+1, 0
0x026F	0x1283      	BCF        STATUS, 5
0x0270	0x023C      	SUBWF      _adcVal1+1, 0
0x0271	0x1D03      	BTFSS      STATUS, 2
0x0272	0x2A75      	GOTO       L__sensorRead491
0x0273	0x0870      	MOVF       R0, 0
0x0274	0x023B      	SUBWF      _adcVal1, 0
L__sensorRead491:
0x0275	0x1803      	BTFSC      STATUS, 0
0x0276	0x2A83      	GOTO       L_sensorRead22
;final_code_1.c,253 :: 		text[11]='1';
0x0277	0x3031      	MOVLW      49
0x0278	0x1683      	BSF        STATUS, 5
0x0279	0x00AB      	MOVWF      _text+11
;final_code_1.c,254 :: 		sw[0][6]=1;
0x027A	0x3001      	MOVLW      1
0x027B	0x1283      	BCF        STATUS, 5
0x027C	0x00CF      	MOVWF      _sw+12
0x027D	0x3000      	MOVLW      0
0x027E	0x00D0      	MOVWF      _sw+13
;final_code_1.c,255 :: 		totFront++;
0x027F	0x0AB1      	INCF       _totFront, 1
0x0280	0x1903      	BTFSC      STATUS, 2
0x0281	0x0AB2      	INCF       _totFront+1, 1
;final_code_1.c,256 :: 		}else{
0x0282	0x2A89      	GOTO       L_sensorRead23
L_sensorRead22:
;final_code_1.c,257 :: 		text[11]='0';
0x0283	0x3030      	MOVLW      48
0x0284	0x1683      	BSF        STATUS, 5
0x0285	0x00AB      	MOVWF      _text+11
;final_code_1.c,258 :: 		sw[0][6]=0;
0x0286	0x1283      	BCF        STATUS, 5
0x0287	0x01CF      	CLRF       _sw+12
0x0288	0x01D0      	CLRF       _sw+13
;final_code_1.c,259 :: 		}
L_sensorRead23:
;final_code_1.c,260 :: 		if(ADC_Read(12)>adcVal1){
0x0289	0x300C      	MOVLW      12
0x028A	0x00EF      	MOVWF      FARG_ADC_Read_channel
0x028B	0x20E1      	CALL       _ADC_Read
0x028C	0x0871      	MOVF       R0+1, 0
0x028D	0x1283      	BCF        STATUS, 5
0x028E	0x023C      	SUBWF      _adcVal1+1, 0
0x028F	0x1D03      	BTFSS      STATUS, 2
0x0290	0x2A93      	GOTO       L__sensorRead492
0x0291	0x0870      	MOVF       R0, 0
0x0292	0x023B      	SUBWF      _adcVal1, 0
L__sensorRead492:
0x0293	0x1803      	BTFSC      STATUS, 0
0x0294	0x2AA1      	GOTO       L_sensorRead24
;final_code_1.c,261 :: 		text[12]='1';
0x0295	0x3031      	MOVLW      49
0x0296	0x1683      	BSF        STATUS, 5
0x0297	0x00AC      	MOVWF      _text+12
;final_code_1.c,262 :: 		sw[0][7]=1;
0x0298	0x3001      	MOVLW      1
0x0299	0x1283      	BCF        STATUS, 5
0x029A	0x00D1      	MOVWF      _sw+14
0x029B	0x3000      	MOVLW      0
0x029C	0x00D2      	MOVWF      _sw+15
;final_code_1.c,263 :: 		totFront++;
0x029D	0x0AB1      	INCF       _totFront, 1
0x029E	0x1903      	BTFSC      STATUS, 2
0x029F	0x0AB2      	INCF       _totFront+1, 1
;final_code_1.c,264 :: 		}else{
0x02A0	0x2AA7      	GOTO       L_sensorRead25
L_sensorRead24:
;final_code_1.c,265 :: 		text[12]='0';
0x02A1	0x3030      	MOVLW      48
0x02A2	0x1683      	BSF        STATUS, 5
0x02A3	0x00AC      	MOVWF      _text+12
;final_code_1.c,266 :: 		sw[0][7]=0;
0x02A4	0x1283      	BCF        STATUS, 5
0x02A5	0x01D1      	CLRF       _sw+14
0x02A6	0x01D2      	CLRF       _sw+15
;final_code_1.c,267 :: 		}
L_sensorRead25:
;final_code_1.c,268 :: 		if(ADC_Read(13)>adcVal1){
0x02A7	0x300D      	MOVLW      13
0x02A8	0x00EF      	MOVWF      FARG_ADC_Read_channel
0x02A9	0x20E1      	CALL       _ADC_Read
0x02AA	0x0871      	MOVF       R0+1, 0
0x02AB	0x1283      	BCF        STATUS, 5
0x02AC	0x023C      	SUBWF      _adcVal1+1, 0
0x02AD	0x1D03      	BTFSS      STATUS, 2
0x02AE	0x2AB1      	GOTO       L__sensorRead493
0x02AF	0x0870      	MOVF       R0, 0
0x02B0	0x023B      	SUBWF      _adcVal1, 0
L__sensorRead493:
0x02B1	0x1803      	BTFSC      STATUS, 0
0x02B2	0x2ABF      	GOTO       L_sensorRead26
;final_code_1.c,269 :: 		text[13]='1';
0x02B3	0x3031      	MOVLW      49
0x02B4	0x1683      	BSF        STATUS, 5
0x02B5	0x00AD      	MOVWF      _text+13
;final_code_1.c,270 :: 		sw[0][8]=1;
0x02B6	0x3001      	MOVLW      1
0x02B7	0x1283      	BCF        STATUS, 5
0x02B8	0x00D3      	MOVWF      _sw+16
0x02B9	0x3000      	MOVLW      0
0x02BA	0x00D4      	MOVWF      _sw+17
;final_code_1.c,271 :: 		totFront++;
0x02BB	0x0AB1      	INCF       _totFront, 1
0x02BC	0x1903      	BTFSC      STATUS, 2
0x02BD	0x0AB2      	INCF       _totFront+1, 1
;final_code_1.c,272 :: 		}else{
0x02BE	0x2AC5      	GOTO       L_sensorRead27
L_sensorRead26:
;final_code_1.c,273 :: 		text[13]='0';
0x02BF	0x3030      	MOVLW      48
0x02C0	0x1683      	BSF        STATUS, 5
0x02C1	0x00AD      	MOVWF      _text+13
;final_code_1.c,274 :: 		sw[0][8]=0;
0x02C2	0x1283      	BCF        STATUS, 5
0x02C3	0x01D3      	CLRF       _sw+16
0x02C4	0x01D4      	CLRF       _sw+17
;final_code_1.c,275 :: 		}
L_sensorRead27:
;final_code_1.c,277 :: 		}
0x02C5	0x0008      	RETURN
; end of _sensorRead
_RightHardTurn:
;final_code_1.c,84 :: 		RightHardTurn(){
;final_code_1.c,85 :: 		PORTC.F3=1;    //left motor backward
0x02C6	0x1283      	BCF        STATUS, 5
0x02C7	0x1303      	BCF        STATUS, 6
0x02C8	0x1587      	BSF        PORTC, 3
;final_code_1.c,86 :: 		PORTC.F6=0;
0x02C9	0x1307      	BCF        PORTC, 6
;final_code_1.c,87 :: 		PORTC.F4=0;    //Right motor forward
0x02CA	0x1207      	BCF        PORTC, 4
;final_code_1.c,88 :: 		PORTC.F5=1;
0x02CB	0x1687      	BSF        PORTC, 5
;final_code_1.c,89 :: 		PWM1_Set_Duty(speed1);
0x02CC	0x0823      	MOVF       _speed1, 0
0x02CD	0x1683      	BSF        STATUS, 5
0x02CE	0x00B0      	MOVWF      FARG_PWM1_Set_Duty_new_duty
0x02CF	0x2045      	CALL       _PWM1_Set_Duty
;final_code_1.c,90 :: 		PWM2_Set_Duty(speed1);
0x02D0	0x0823      	MOVF       _speed1, 0
0x02D1	0x1683      	BSF        STATUS, 5
0x02D2	0x00B0      	MOVWF      FARG_PWM2_Set_Duty_new_duty
0x02D3	0x2088      	CALL       _PWM2_Set_Duty
;final_code_1.c,91 :: 		}
0x02D4	0x0008      	RETURN
; end of _RightHardTurn
_stopAll:
;final_code_1.c,130 :: 		stopAll(){
;final_code_1.c,131 :: 		PORTC.F3=1;    //left motor backward
0x02D5	0x1283      	BCF        STATUS, 5
0x02D6	0x1303      	BCF        STATUS, 6
0x02D7	0x1587      	BSF        PORTC, 3
;final_code_1.c,132 :: 		PORTC.F6=1;
0x02D8	0x1707      	BSF        PORTC, 6
;final_code_1.c,133 :: 		PORTC.F4=1;    //Right motor forward
0x02D9	0x1607      	BSF        PORTC, 4
;final_code_1.c,134 :: 		PORTC.F5=1;
0x02DA	0x1687      	BSF        PORTC, 5
;final_code_1.c,135 :: 		}
0x02DB	0x0008      	RETURN
; end of _stopAll
_goStraight:
;final_code_1.c,524 :: 		void goStraight(){
;final_code_1.c,526 :: 		int left=0;
0x02DC	0x1283      	BCF        STATUS, 5
0x02DD	0x1303      	BCF        STATUS, 6
0x02DE	0x01ED      	CLRF       goStraight_left_L0
0x02DF	0x01EE      	CLRF       goStraight_left_L0+1
;final_code_1.c,527 :: 		int right=0;
0x02E0	0x1683      	BSF        STATUS, 5
0x02E1	0x01AE      	CLRF       goStraight_right_L0
0x02E2	0x01AF      	CLRF       goStraight_right_L0+1
;final_code_1.c,528 :: 		PWM1_Set_Duty(190);
0x02E3	0x30BE      	MOVLW      190
0x02E4	0x00B0      	MOVWF      FARG_PWM1_Set_Duty_new_duty
0x02E5	0x2045      	CALL       _PWM1_Set_Duty
;final_code_1.c,529 :: 		PWM2_Set_Duty(190);
0x02E6	0x30BE      	MOVLW      190
0x02E7	0x1683      	BSF        STATUS, 5
0x02E8	0x00B0      	MOVWF      FARG_PWM2_Set_Duty_new_duty
0x02E9	0x2088      	CALL       _PWM2_Set_Duty
;final_code_1.c,530 :: 		if(TMR0_value>150||TMR1_value>150){
0x02EA	0x3080      	MOVLW      128
0x02EB	0x00F0      	MOVWF      R0
0x02EC	0x3080      	MOVLW      128
0x02ED	0x0630      	XORWF      _TMR0_value+1, 0
0x02EE	0x0270      	SUBWF      R0, 0
0x02EF	0x1D03      	BTFSS      STATUS, 2
0x02F0	0x2AF3      	GOTO       L__goStraight619
0x02F1	0x082F      	MOVF       _TMR0_value, 0
0x02F2	0x3C96      	SUBLW      150
L__goStraight619:
0x02F3	0x1C03      	BTFSS      STATUS, 0
0x02F4	0x2B01      	GOTO       L__goStraight461
0x02F5	0x3080      	MOVLW      128
0x02F6	0x00F0      	MOVWF      R0
0x02F7	0x3080      	MOVLW      128
0x02F8	0x0636      	XORWF      _TMR1_value+1, 0
0x02F9	0x0270      	SUBWF      R0, 0
0x02FA	0x1D03      	BTFSS      STATUS, 2
0x02FB	0x2AFE      	GOTO       L__goStraight620
0x02FC	0x0835      	MOVF       _TMR1_value, 0
0x02FD	0x3C96      	SUBLW      150
L__goStraight620:
0x02FE	0x1C03      	BTFSS      STATUS, 0
0x02FF	0x2B01      	GOTO       L__goStraight461
0x0300	0x2B02      	GOTO       L_goStraight173
L__goStraight461:
;final_code_1.c,531 :: 		initEncoder();
0x0301	0x210E      	CALL       _initEncoder
;final_code_1.c,532 :: 		}
L_goStraight173:
;final_code_1.c,533 :: 		moveF();
0x0302	0x2103      	CALL       _moveF
;final_code_1.c,535 :: 		if(TMR0_value>=TMR1_value){
0x0303	0x3080      	MOVLW      128
0x0304	0x0630      	XORWF      _TMR0_value+1, 0
0x0305	0x00F0      	MOVWF      R0
0x0306	0x3080      	MOVLW      128
0x0307	0x0636      	XORWF      _TMR1_value+1, 0
0x0308	0x0270      	SUBWF      R0, 0
0x0309	0x1D03      	BTFSS      STATUS, 2
0x030A	0x2B0D      	GOTO       L__goStraight621
0x030B	0x0835      	MOVF       _TMR1_value, 0
0x030C	0x022F      	SUBWF      _TMR0_value, 0
L__goStraight621:
0x030D	0x1C03      	BTFSS      STATUS, 0
0x030E	0x2B30      	GOTO       L_goStraight174
;final_code_1.c,537 :: 		if(TMR0_value-TMR1_value>=5){
0x030F	0x0835      	MOVF       _TMR1_value, 0
0x0310	0x022F      	SUBWF      _TMR0_value, 0
0x0311	0x00F1      	MOVWF      R1
0x0312	0x0836      	MOVF       _TMR1_value+1, 0
0x0313	0x1C03      	BTFSS      STATUS, 0
0x0314	0x3E01      	ADDLW      1
0x0315	0x0230      	SUBWF      _TMR0_value+1, 0
0x0316	0x00F2      	MOVWF      R1+1
0x0317	0x3080      	MOVLW      128
0x0318	0x0672      	XORWF      R1+1, 0
0x0319	0x00F0      	MOVWF      R0
0x031A	0x3080      	MOVLW      128
0x031B	0x0270      	SUBWF      R0, 0
0x031C	0x1D03      	BTFSS      STATUS, 2
0x031D	0x2B20      	GOTO       L__goStraight622
0x031E	0x3005      	MOVLW      5
0x031F	0x0271      	SUBWF      R1, 0
L__goStraight622:
0x0320	0x1C03      	BTFSS      STATUS, 0
0x0321	0x2B2F      	GOTO       L_goStraight175
;final_code_1.c,538 :: 		do{
L_goStraight176:
;final_code_1.c,539 :: 		rightT();
0x0322	0x20C3      	CALL       _rightT
;final_code_1.c,540 :: 		}while(TMR0_value>=TMR1_value);
0x0323	0x3080      	MOVLW      128
0x0324	0x0630      	XORWF      _TMR0_value+1, 0
0x0325	0x00F0      	MOVWF      R0
0x0326	0x3080      	MOVLW      128
0x0327	0x0636      	XORWF      _TMR1_value+1, 0
0x0328	0x0270      	SUBWF      R0, 0
0x0329	0x1D03      	BTFSS      STATUS, 2
0x032A	0x2B2D      	GOTO       L__goStraight623
0x032B	0x0835      	MOVF       _TMR1_value, 0
0x032C	0x022F      	SUBWF      _TMR0_value, 0
L__goStraight623:
0x032D	0x1803      	BTFSC      STATUS, 0
0x032E	0x2B22      	GOTO       L_goStraight176
;final_code_1.c,541 :: 		}
L_goStraight175:
;final_code_1.c,544 :: 		}else{
0x032F	0x2B50      	GOTO       L_goStraight179
L_goStraight174:
;final_code_1.c,546 :: 		if(TMR1_value-TMR0_value>=5){
0x0330	0x082F      	MOVF       _TMR0_value, 0
0x0331	0x0235      	SUBWF      _TMR1_value, 0
0x0332	0x00F1      	MOVWF      R1
0x0333	0x0830      	MOVF       _TMR0_value+1, 0
0x0334	0x1C03      	BTFSS      STATUS, 0
0x0335	0x3E01      	ADDLW      1
0x0336	0x0236      	SUBWF      _TMR1_value+1, 0
0x0337	0x00F2      	MOVWF      R1+1
0x0338	0x3080      	MOVLW      128
0x0339	0x0672      	XORWF      R1+1, 0
0x033A	0x00F0      	MOVWF      R0
0x033B	0x3080      	MOVLW      128
0x033C	0x0270      	SUBWF      R0, 0
0x033D	0x1D03      	BTFSS      STATUS, 2
0x033E	0x2B41      	GOTO       L__goStraight624
0x033F	0x3005      	MOVLW      5
0x0340	0x0271      	SUBWF      R1, 0
L__goStraight624:
0x0341	0x1C03      	BTFSS      STATUS, 0
0x0342	0x2B50      	GOTO       L_goStraight180
;final_code_1.c,547 :: 		do{
L_goStraight181:
;final_code_1.c,548 :: 		leftT();
0x0343	0x20D2      	CALL       _leftT
;final_code_1.c,549 :: 		}while(TMR0_value<=TMR1_value);
0x0344	0x3080      	MOVLW      128
0x0345	0x0636      	XORWF      _TMR1_value+1, 0
0x0346	0x00F0      	MOVWF      R0
0x0347	0x3080      	MOVLW      128
0x0348	0x0630      	XORWF      _TMR0_value+1, 0
0x0349	0x0270      	SUBWF      R0, 0
0x034A	0x1D03      	BTFSS      STATUS, 2
0x034B	0x2B4E      	GOTO       L__goStraight625
0x034C	0x082F      	MOVF       _TMR0_value, 0
0x034D	0x0235      	SUBWF      _TMR1_value, 0
L__goStraight625:
0x034E	0x1803      	BTFSC      STATUS, 0
0x034F	0x2B43      	GOTO       L_goStraight181
;final_code_1.c,550 :: 		}
L_goStraight180:
;final_code_1.c,551 :: 		}
L_goStraight179:
;final_code_1.c,552 :: 		}
0x0350	0x0008      	RETURN
; end of _goStraight
_bin_deci:
;final_code_1.c,290 :: 		int  bin_deci(){
;final_code_1.c,292 :: 		int decimal_value=0;
;final_code_1.c,293 :: 		decimal_value=sw[0][0]+2*sw[0][1]+4*sw[0][2]+8*sw[0][3]+16*sw[0][4]+32*sw[0][5]+64*sw[0][6]+128*sw[0][7]+256*sw[0][8];
0x0351	0x1283      	BCF        STATUS, 5
0x0352	0x1303      	BCF        STATUS, 6
0x0353	0x0845      	MOVF       _sw+2, 0
0x0354	0x00F0      	MOVWF      R0
0x0355	0x0846      	MOVF       _sw+3, 0
0x0356	0x00F1      	MOVWF      R0+1
0x0357	0x0DF0      	RLF        R0, 1
0x0358	0x0DF1      	RLF        R0+1, 1
0x0359	0x1070      	BCF        R0, 0
0x035A	0x0870      	MOVF       R0, 0
0x035B	0x0743      	ADDWF      _sw, 0
0x035C	0x00F3      	MOVWF      R3
0x035D	0x0844      	MOVF       _sw+1, 0
0x035E	0x1803      	BTFSC      STATUS, 0
0x035F	0x3E01      	ADDLW      1
0x0360	0x0771      	ADDWF      R0+1, 0
0x0361	0x00F4      	MOVWF      R3+1
0x0362	0x0847      	MOVF       _sw+4, 0
0x0363	0x00F0      	MOVWF      R0
0x0364	0x0848      	MOVF       _sw+5, 0
0x0365	0x00F1      	MOVWF      R0+1
0x0366	0x0DF0      	RLF        R0, 1
0x0367	0x0DF1      	RLF        R0+1, 1
0x0368	0x1070      	BCF        R0, 0
0x0369	0x0DF0      	RLF        R0, 1
0x036A	0x0DF1      	RLF        R0+1, 1
0x036B	0x1070      	BCF        R0, 0
0x036C	0x0870      	MOVF       R0, 0
0x036D	0x07F3      	ADDWF      R3, 1
0x036E	0x0871      	MOVF       R0+1, 0
0x036F	0x1803      	BTFSC      STATUS, 0
0x0370	0x3E01      	ADDLW      1
0x0371	0x07F4      	ADDWF      R3+1, 1
0x0372	0x3003      	MOVLW      3
0x0373	0x00F2      	MOVWF      R2
0x0374	0x0849      	MOVF       _sw+6, 0
0x0375	0x00F0      	MOVWF      R0
0x0376	0x084A      	MOVF       _sw+7, 0
0x0377	0x00F1      	MOVWF      R0+1
0x0378	0x0872      	MOVF       R2, 0
L__bin_deci495:
0x0379	0x1903      	BTFSC      STATUS, 2
0x037A	0x2B80      	GOTO       L__bin_deci496
0x037B	0x0DF0      	RLF        R0, 1
0x037C	0x0DF1      	RLF        R0+1, 1
0x037D	0x1070      	BCF        R0, 0
0x037E	0x3EFF      	ADDLW      255
0x037F	0x2B79      	GOTO       L__bin_deci495
L__bin_deci496:
0x0380	0x0870      	MOVF       R0, 0
0x0381	0x07F3      	ADDWF      R3, 1
0x0382	0x0871      	MOVF       R0+1, 0
0x0383	0x1803      	BTFSC      STATUS, 0
0x0384	0x3E01      	ADDLW      1
0x0385	0x07F4      	ADDWF      R3+1, 1
0x0386	0x3004      	MOVLW      4
0x0387	0x00F2      	MOVWF      R2
0x0388	0x084B      	MOVF       _sw+8, 0
0x0389	0x00F0      	MOVWF      R0
0x038A	0x084C      	MOVF       _sw+9, 0
0x038B	0x00F1      	MOVWF      R0+1
0x038C	0x0872      	MOVF       R2, 0
L__bin_deci497:
0x038D	0x1903      	BTFSC      STATUS, 2
0x038E	0x2B94      	GOTO       L__bin_deci498
0x038F	0x0DF0      	RLF        R0, 1
0x0390	0x0DF1      	RLF        R0+1, 1
0x0391	0x1070      	BCF        R0, 0
0x0392	0x3EFF      	ADDLW      255
0x0393	0x2B8D      	GOTO       L__bin_deci497
L__bin_deci498:
0x0394	0x0870      	MOVF       R0, 0
0x0395	0x07F3      	ADDWF      R3, 1
0x0396	0x0871      	MOVF       R0+1, 0
0x0397	0x1803      	BTFSC      STATUS, 0
0x0398	0x3E01      	ADDLW      1
0x0399	0x07F4      	ADDWF      R3+1, 1
0x039A	0x3005      	MOVLW      5
0x039B	0x00F2      	MOVWF      R2
0x039C	0x084D      	MOVF       _sw+10, 0
0x039D	0x00F0      	MOVWF      R0
0x039E	0x084E      	MOVF       _sw+11, 0
0x039F	0x00F1      	MOVWF      R0+1
0x03A0	0x0872      	MOVF       R2, 0
L__bin_deci499:
0x03A1	0x1903      	BTFSC      STATUS, 2
0x03A2	0x2BA8      	GOTO       L__bin_deci500
0x03A3	0x0DF0      	RLF        R0, 1
0x03A4	0x0DF1      	RLF        R0+1, 1
0x03A5	0x1070      	BCF        R0, 0
0x03A6	0x3EFF      	ADDLW      255
0x03A7	0x2BA1      	GOTO       L__bin_deci499
L__bin_deci500:
0x03A8	0x0870      	MOVF       R0, 0
0x03A9	0x07F3      	ADDWF      R3, 1
0x03AA	0x0871      	MOVF       R0+1, 0
0x03AB	0x1803      	BTFSC      STATUS, 0
0x03AC	0x3E01      	ADDLW      1
0x03AD	0x07F4      	ADDWF      R3+1, 1
0x03AE	0x3006      	MOVLW      6
0x03AF	0x00F2      	MOVWF      R2
0x03B0	0x084F      	MOVF       _sw+12, 0
0x03B1	0x00F0      	MOVWF      R0
0x03B2	0x0850      	MOVF       _sw+13, 0
0x03B3	0x00F1      	MOVWF      R0+1
0x03B4	0x0872      	MOVF       R2, 0
L__bin_deci501:
0x03B5	0x1903      	BTFSC      STATUS, 2
0x03B6	0x2BBC      	GOTO       L__bin_deci502
0x03B7	0x0DF0      	RLF        R0, 1
0x03B8	0x0DF1      	RLF        R0+1, 1
0x03B9	0x1070      	BCF        R0, 0
0x03BA	0x3EFF      	ADDLW      255
0x03BB	0x2BB5      	GOTO       L__bin_deci501
L__bin_deci502:
0x03BC	0x0870      	MOVF       R0, 0
0x03BD	0x07F3      	ADDWF      R3, 1
0x03BE	0x0871      	MOVF       R0+1, 0
0x03BF	0x1803      	BTFSC      STATUS, 0
0x03C0	0x3E01      	ADDLW      1
0x03C1	0x07F4      	ADDWF      R3+1, 1
0x03C2	0x3007      	MOVLW      7
0x03C3	0x00F2      	MOVWF      R2
0x03C4	0x0851      	MOVF       _sw+14, 0
0x03C5	0x00F0      	MOVWF      R0
0x03C6	0x0852      	MOVF       _sw+15, 0
0x03C7	0x00F1      	MOVWF      R0+1
0x03C8	0x0872      	MOVF       R2, 0
L__bin_deci503:
0x03C9	0x1903      	BTFSC      STATUS, 2
0x03CA	0x2BD0      	GOTO       L__bin_deci504
0x03CB	0x0DF0      	RLF        R0, 1
0x03CC	0x0DF1      	RLF        R0+1, 1
0x03CD	0x1070      	BCF        R0, 0
0x03CE	0x3EFF      	ADDLW      255
0x03CF	0x2BC9      	GOTO       L__bin_deci503
L__bin_deci504:
0x03D0	0x0870      	MOVF       R0, 0
0x03D1	0x07F3      	ADDWF      R3, 1
0x03D2	0x0871      	MOVF       R0+1, 0
0x03D3	0x1803      	BTFSC      STATUS, 0
0x03D4	0x3E01      	ADDLW      1
0x03D5	0x07F4      	ADDWF      R3+1, 1
0x03D6	0x0853      	MOVF       _sw+16, 0
0x03D7	0x00F1      	MOVWF      R0+1
0x03D8	0x01F0      	CLRF       R0
0x03D9	0x0873      	MOVF       R3, 0
0x03DA	0x07F0      	ADDWF      R0, 1
0x03DB	0x0874      	MOVF       R3+1, 0
0x03DC	0x1803      	BTFSC      STATUS, 0
0x03DD	0x3E01      	ADDLW      1
0x03DE	0x07F1      	ADDWF      R0+1, 1
;final_code_1.c,296 :: 		return decimal_value;
;final_code_1.c,298 :: 		}
0x03DF	0x0008      	RETURN
; end of _bin_deci
_leftHardTurn:
;final_code_1.c,75 :: 		leftHardTurn(){
;final_code_1.c,76 :: 		PORTC.F3=0;    //left motor backward
0x03E0	0x1283      	BCF        STATUS, 5
0x03E1	0x1303      	BCF        STATUS, 6
0x03E2	0x1187      	BCF        PORTC, 3
;final_code_1.c,77 :: 		PORTC.F6=1;
0x03E3	0x1707      	BSF        PORTC, 6
;final_code_1.c,78 :: 		PORTC.F4=1;    //Right motor forward
0x03E4	0x1607      	BSF        PORTC, 4
;final_code_1.c,79 :: 		PORTC.F5=0;
0x03E5	0x1287      	BCF        PORTC, 5
;final_code_1.c,80 :: 		PWM1_Set_Duty(speed1);
0x03E6	0x0823      	MOVF       _speed1, 0
0x03E7	0x1683      	BSF        STATUS, 5
0x03E8	0x00B0      	MOVWF      FARG_PWM1_Set_Duty_new_duty
0x03E9	0x2045      	CALL       _PWM1_Set_Duty
;final_code_1.c,81 :: 		PWM2_Set_Duty(speed1);
0x03EA	0x0823      	MOVF       _speed1, 0
0x03EB	0x1683      	BSF        STATUS, 5
0x03EC	0x00B0      	MOVWF      FARG_PWM2_Set_Duty_new_duty
0x03ED	0x2088      	CALL       _PWM2_Set_Duty
;final_code_1.c,82 :: 		}
0x03EE	0x0008      	RETURN
; end of _leftHardTurn
_search_arrow:
;final_code_1.c,1089 :: 		int search_arrow(){
;final_code_1.c,1090 :: 		int state=0;
0x03EF	0x1283      	BCF        STATUS, 5
0x03F0	0x1303      	BCF        STATUS, 6
0x03F1	0x01E9      	CLRF       search_arrow_state_L0
0x03F2	0x01EA      	CLRF       search_arrow_state_L0+1
;final_code_1.c,1091 :: 		PWM1_Set_Duty(190);
0x03F3	0x30BE      	MOVLW      190
0x03F4	0x1683      	BSF        STATUS, 5
0x03F5	0x00B0      	MOVWF      FARG_PWM1_Set_Duty_new_duty
0x03F6	0x2045      	CALL       _PWM1_Set_Duty
;final_code_1.c,1092 :: 		PWM2_Set_Duty(190);
0x03F7	0x30BE      	MOVLW      190
0x03F8	0x1683      	BSF        STATUS, 5
0x03F9	0x00B0      	MOVWF      FARG_PWM2_Set_Duty_new_duty
0x03FA	0x2088      	CALL       _PWM2_Set_Duty
;final_code_1.c,1094 :: 		do{
L_search_arrow360:
;final_code_1.c,1095 :: 		sensorRead();
0x03FB	0x211C      	CALL       _sensorRead
;final_code_1.c,1096 :: 		value=bin_deci();
0x03FC	0x2351      	CALL       _bin_deci
0x03FD	0x0870      	MOVF       R0, 0
0x03FE	0x00AB      	MOVWF      _value
0x03FF	0x0871      	MOVF       R0+1, 0
0x0400	0x00AC      	MOVWF      _value+1
;final_code_1.c,1097 :: 		goStraight();
0x0401	0x22DC      	CALL       _goStraight
;final_code_1.c,1098 :: 		}while(value!=0);
0x0402	0x3000      	MOVLW      0
0x0403	0x062C      	XORWF      _value+1, 0
0x0404	0x1D03      	BTFSS      STATUS, 2
0x0405	0x2C08      	GOTO       L__search_arrow722
0x0406	0x3000      	MOVLW      0
0x0407	0x062B      	XORWF      _value, 0
L__search_arrow722:
0x0408	0x1D03      	BTFSS      STATUS, 2
0x0409	0x2BFB      	GOTO       L_search_arrow360
;final_code_1.c,1100 :: 		while(value==0){
L_search_arrow363:
0x040A	0x3000      	MOVLW      0
0x040B	0x062C      	XORWF      _value+1, 0
0x040C	0x1D03      	BTFSS      STATUS, 2
0x040D	0x2C10      	GOTO       L__search_arrow723
0x040E	0x3000      	MOVLW      0
0x040F	0x062B      	XORWF      _value, 0
L__search_arrow723:
0x0410	0x1D03      	BTFSS      STATUS, 2
0x0411	0x2E36      	GOTO       L_search_arrow364
;final_code_1.c,1102 :: 		sensorRead();
0x0412	0x211C      	CALL       _sensorRead
;final_code_1.c,1103 :: 		value=bin_deci();
0x0413	0x2351      	CALL       _bin_deci
0x0414	0x0870      	MOVF       R0, 0
0x0415	0x00AB      	MOVWF      _value
0x0416	0x0871      	MOVF       R0+1, 0
0x0417	0x00AC      	MOVWF      _value+1
;final_code_1.c,1104 :: 		initEncoder();
0x0418	0x210E      	CALL       _initEncoder
;final_code_1.c,1105 :: 		while(TMR0_value<=20 && state==0){
L_search_arrow365:
0x0419	0x3080      	MOVLW      128
0x041A	0x00F0      	MOVWF      R0
0x041B	0x3080      	MOVLW      128
0x041C	0x0630      	XORWF      _TMR0_value+1, 0
0x041D	0x0270      	SUBWF      R0, 0
0x041E	0x1D03      	BTFSS      STATUS, 2
0x041F	0x2C22      	GOTO       L__search_arrow724
0x0420	0x082F      	MOVF       _TMR0_value, 0
0x0421	0x3C14      	SUBLW      20
L__search_arrow724:
0x0422	0x1C03      	BTFSS      STATUS, 0
0x0423	0x2C41      	GOTO       L_search_arrow366
0x0424	0x3000      	MOVLW      0
0x0425	0x066A      	XORWF      search_arrow_state_L0+1, 0
0x0426	0x1D03      	BTFSS      STATUS, 2
0x0427	0x2C2A      	GOTO       L__search_arrow725
0x0428	0x3000      	MOVLW      0
0x0429	0x0669      	XORWF      search_arrow_state_L0, 0
L__search_arrow725:
0x042A	0x1D03      	BTFSS      STATUS, 2
0x042B	0x2C41      	GOTO       L_search_arrow366
L__search_arrow479:
;final_code_1.c,1106 :: 		sensorRead();
0x042C	0x211C      	CALL       _sensorRead
;final_code_1.c,1107 :: 		value=bin_deci();
0x042D	0x2351      	CALL       _bin_deci
0x042E	0x0870      	MOVF       R0, 0
0x042F	0x00AB      	MOVWF      _value
0x0430	0x0871      	MOVF       R0+1, 0
0x0431	0x00AC      	MOVWF      _value+1
;final_code_1.c,1108 :: 		lefthardTurn();
0x0432	0x23E0      	CALL       _leftHardTurn
;final_code_1.c,1109 :: 		if(value!=0){
0x0433	0x3000      	MOVLW      0
0x0434	0x062C      	XORWF      _value+1, 0
0x0435	0x1D03      	BTFSS      STATUS, 2
0x0436	0x2C39      	GOTO       L__search_arrow726
0x0437	0x3000      	MOVLW      0
0x0438	0x062B      	XORWF      _value, 0
L__search_arrow726:
0x0439	0x1903      	BTFSC      STATUS, 2
0x043A	0x2C40      	GOTO       L_search_arrow369
;final_code_1.c,1110 :: 		state=1;
0x043B	0x3001      	MOVLW      1
0x043C	0x00E9      	MOVWF      search_arrow_state_L0
0x043D	0x3000      	MOVLW      0
0x043E	0x00EA      	MOVWF      search_arrow_state_L0+1
;final_code_1.c,1111 :: 		break;
0x043F	0x2C41      	GOTO       L_search_arrow366
;final_code_1.c,1112 :: 		}
L_search_arrow369:
;final_code_1.c,1113 :: 		}
0x0440	0x2C19      	GOTO       L_search_arrow365
L_search_arrow366:
;final_code_1.c,1114 :: 		if(state==0){
0x0441	0x3000      	MOVLW      0
0x0442	0x066A      	XORWF      search_arrow_state_L0+1, 0
0x0443	0x1D03      	BTFSS      STATUS, 2
0x0444	0x2C47      	GOTO       L__search_arrow727
0x0445	0x3000      	MOVLW      0
0x0446	0x0669      	XORWF      search_arrow_state_L0, 0
L__search_arrow727:
0x0447	0x1D03      	BTFSS      STATUS, 2
0x0448	0x2C58      	GOTO       L_search_arrow370
;final_code_1.c,1115 :: 		stopAll();
0x0449	0x22D5      	CALL       _stopAll
;final_code_1.c,1116 :: 		delay_ms(2000);
0x044A	0x3033      	MOVLW      51
0x044B	0x00FB      	MOVWF      R11
0x044C	0x30BB      	MOVLW      187
0x044D	0x00FC      	MOVWF      R12
0x044E	0x30DF      	MOVLW      223
0x044F	0x00FD      	MOVWF      R13
L_search_arrow371:
0x0450	0x0BFD      	DECFSZ     R13, 1
0x0451	0x2C50      	GOTO       L_search_arrow371
0x0452	0x0BFC      	DECFSZ     R12, 1
0x0453	0x2C50      	GOTO       L_search_arrow371
0x0454	0x0BFB      	DECFSZ     R11, 1
0x0455	0x2C50      	GOTO       L_search_arrow371
0x0456	0x0000      	NOP
0x0457	0x0000      	NOP
;final_code_1.c,1117 :: 		}
L_search_arrow370:
;final_code_1.c,1118 :: 		initEncoder();
0x0458	0x210E      	CALL       _initEncoder
;final_code_1.c,1119 :: 		while(TMR0_value<=60 && state==0){
L_search_arrow372:
0x0459	0x3080      	MOVLW      128
0x045A	0x00F0      	MOVWF      R0
0x045B	0x3080      	MOVLW      128
0x045C	0x0630      	XORWF      _TMR0_value+1, 0
0x045D	0x0270      	SUBWF      R0, 0
0x045E	0x1D03      	BTFSS      STATUS, 2
0x045F	0x2C62      	GOTO       L__search_arrow728
0x0460	0x082F      	MOVF       _TMR0_value, 0
0x0461	0x3C3C      	SUBLW      60
L__search_arrow728:
0x0462	0x1C03      	BTFSS      STATUS, 0
0x0463	0x2C81      	GOTO       L_search_arrow373
0x0464	0x3000      	MOVLW      0
0x0465	0x066A      	XORWF      search_arrow_state_L0+1, 0
0x0466	0x1D03      	BTFSS      STATUS, 2
0x0467	0x2C6A      	GOTO       L__search_arrow729
0x0468	0x3000      	MOVLW      0
0x0469	0x0669      	XORWF      search_arrow_state_L0, 0
L__search_arrow729:
0x046A	0x1D03      	BTFSS      STATUS, 2
0x046B	0x2C81      	GOTO       L_search_arrow373
L__search_arrow478:
;final_code_1.c,1120 :: 		sensorRead();
0x046C	0x211C      	CALL       _sensorRead
;final_code_1.c,1121 :: 		value=bin_deci();
0x046D	0x2351      	CALL       _bin_deci
0x046E	0x0870      	MOVF       R0, 0
0x046F	0x00AB      	MOVWF      _value
0x0470	0x0871      	MOVF       R0+1, 0
0x0471	0x00AC      	MOVWF      _value+1
;final_code_1.c,1122 :: 		goStraight();
0x0472	0x22DC      	CALL       _goStraight
;final_code_1.c,1123 :: 		if(value!=0){
0x0473	0x3000      	MOVLW      0
0x0474	0x062C      	XORWF      _value+1, 0
0x0475	0x1D03      	BTFSS      STATUS, 2
0x0476	0x2C79      	GOTO       L__search_arrow730
0x0477	0x3000      	MOVLW      0
0x0478	0x062B      	XORWF      _value, 0
L__search_arrow730:
0x0479	0x1903      	BTFSC      STATUS, 2
0x047A	0x2C80      	GOTO       L_search_arrow376
;final_code_1.c,1124 :: 		state=1;
0x047B	0x3001      	MOVLW      1
0x047C	0x00E9      	MOVWF      search_arrow_state_L0
0x047D	0x3000      	MOVLW      0
0x047E	0x00EA      	MOVWF      search_arrow_state_L0+1
;final_code_1.c,1125 :: 		break;
0x047F	0x2C81      	GOTO       L_search_arrow373
;final_code_1.c,1126 :: 		}
L_search_arrow376:
;final_code_1.c,1127 :: 		}
0x0480	0x2C59      	GOTO       L_search_arrow372
L_search_arrow373:
;final_code_1.c,1128 :: 		if(state==0){
0x0481	0x3000      	MOVLW      0
0x0482	0x066A      	XORWF      search_arrow_state_L0+1, 0
0x0483	0x1D03      	BTFSS      STATUS, 2
0x0484	0x2C87      	GOTO       L__search_arrow731
0x0485	0x3000      	MOVLW      0
0x0486	0x0669      	XORWF      search_arrow_state_L0, 0
L__search_arrow731:
0x0487	0x1D03      	BTFSS      STATUS, 2
0x0488	0x2C98      	GOTO       L_search_arrow377
;final_code_1.c,1129 :: 		stopAll();
0x0489	0x22D5      	CALL       _stopAll
;final_code_1.c,1130 :: 		delay_ms(2000);
0x048A	0x3033      	MOVLW      51
0x048B	0x00FB      	MOVWF      R11
0x048C	0x30BB      	MOVLW      187
0x048D	0x00FC      	MOVWF      R12
0x048E	0x30DF      	MOVLW      223
0x048F	0x00FD      	MOVWF      R13
L_search_arrow378:
0x0490	0x0BFD      	DECFSZ     R13, 1
0x0491	0x2C90      	GOTO       L_search_arrow378
0x0492	0x0BFC      	DECFSZ     R12, 1
0x0493	0x2C90      	GOTO       L_search_arrow378
0x0494	0x0BFB      	DECFSZ     R11, 1
0x0495	0x2C90      	GOTO       L_search_arrow378
0x0496	0x0000      	NOP
0x0497	0x0000      	NOP
;final_code_1.c,1131 :: 		}
L_search_arrow377:
;final_code_1.c,1133 :: 		initEncoder();
0x0498	0x210E      	CALL       _initEncoder
;final_code_1.c,1134 :: 		while(TMR0_value<=15 && state==0){
L_search_arrow379:
0x0499	0x3080      	MOVLW      128
0x049A	0x00F0      	MOVWF      R0
0x049B	0x3080      	MOVLW      128
0x049C	0x0630      	XORWF      _TMR0_value+1, 0
0x049D	0x0270      	SUBWF      R0, 0
0x049E	0x1D03      	BTFSS      STATUS, 2
0x049F	0x2CA2      	GOTO       L__search_arrow732
0x04A0	0x082F      	MOVF       _TMR0_value, 0
0x04A1	0x3C0F      	SUBLW      15
L__search_arrow732:
0x04A2	0x1C03      	BTFSS      STATUS, 0
0x04A3	0x2CC1      	GOTO       L_search_arrow380
0x04A4	0x3000      	MOVLW      0
0x04A5	0x066A      	XORWF      search_arrow_state_L0+1, 0
0x04A6	0x1D03      	BTFSS      STATUS, 2
0x04A7	0x2CAA      	GOTO       L__search_arrow733
0x04A8	0x3000      	MOVLW      0
0x04A9	0x0669      	XORWF      search_arrow_state_L0, 0
L__search_arrow733:
0x04AA	0x1D03      	BTFSS      STATUS, 2
0x04AB	0x2CC1      	GOTO       L_search_arrow380
L__search_arrow477:
;final_code_1.c,1135 :: 		sensorRead();
0x04AC	0x211C      	CALL       _sensorRead
;final_code_1.c,1136 :: 		value=bin_deci();
0x04AD	0x2351      	CALL       _bin_deci
0x04AE	0x0870      	MOVF       R0, 0
0x04AF	0x00AB      	MOVWF      _value
0x04B0	0x0871      	MOVF       R0+1, 0
0x04B1	0x00AC      	MOVWF      _value+1
;final_code_1.c,1137 :: 		RightHardTurn();
0x04B2	0x22C6      	CALL       _RightHardTurn
;final_code_1.c,1138 :: 		if(value!=0){
0x04B3	0x3000      	MOVLW      0
0x04B4	0x062C      	XORWF      _value+1, 0
0x04B5	0x1D03      	BTFSS      STATUS, 2
0x04B6	0x2CB9      	GOTO       L__search_arrow734
0x04B7	0x3000      	MOVLW      0
0x04B8	0x062B      	XORWF      _value, 0
L__search_arrow734:
0x04B9	0x1903      	BTFSC      STATUS, 2
0x04BA	0x2CC0      	GOTO       L_search_arrow383
;final_code_1.c,1139 :: 		state=1;
0x04BB	0x3001      	MOVLW      1
0x04BC	0x00E9      	MOVWF      search_arrow_state_L0
0x04BD	0x3000      	MOVLW      0
0x04BE	0x00EA      	MOVWF      search_arrow_state_L0+1
;final_code_1.c,1140 :: 		break;
0x04BF	0x2CC1      	GOTO       L_search_arrow380
;final_code_1.c,1141 :: 		}
L_search_arrow383:
;final_code_1.c,1142 :: 		}
0x04C0	0x2C99      	GOTO       L_search_arrow379
L_search_arrow380:
;final_code_1.c,1143 :: 		if(state==0){
0x04C1	0x3000      	MOVLW      0
0x04C2	0x066A      	XORWF      search_arrow_state_L0+1, 0
0x04C3	0x1D03      	BTFSS      STATUS, 2
0x04C4	0x2CC7      	GOTO       L__search_arrow735
0x04C5	0x3000      	MOVLW      0
0x04C6	0x0669      	XORWF      search_arrow_state_L0, 0
L__search_arrow735:
0x04C7	0x1D03      	BTFSS      STATUS, 2
0x04C8	0x2CD8      	GOTO       L_search_arrow384
;final_code_1.c,1144 :: 		stopAll();
0x04C9	0x22D5      	CALL       _stopAll
;final_code_1.c,1145 :: 		delay_ms(2000);
0x04CA	0x3033      	MOVLW      51
0x04CB	0x00FB      	MOVWF      R11
0x04CC	0x30BB      	MOVLW      187
0x04CD	0x00FC      	MOVWF      R12
0x04CE	0x30DF      	MOVLW      223
0x04CF	0x00FD      	MOVWF      R13
L_search_arrow385:
0x04D0	0x0BFD      	DECFSZ     R13, 1
0x04D1	0x2CD0      	GOTO       L_search_arrow385
0x04D2	0x0BFC      	DECFSZ     R12, 1
0x04D3	0x2CD0      	GOTO       L_search_arrow385
0x04D4	0x0BFB      	DECFSZ     R11, 1
0x04D5	0x2CD0      	GOTO       L_search_arrow385
0x04D6	0x0000      	NOP
0x04D7	0x0000      	NOP
;final_code_1.c,1146 :: 		}
L_search_arrow384:
;final_code_1.c,1148 :: 		initEncoder();
0x04D8	0x210E      	CALL       _initEncoder
;final_code_1.c,1149 :: 		while(TMR0_value<=16 && state==0){
L_search_arrow386:
0x04D9	0x3080      	MOVLW      128
0x04DA	0x00F0      	MOVWF      R0
0x04DB	0x3080      	MOVLW      128
0x04DC	0x0630      	XORWF      _TMR0_value+1, 0
0x04DD	0x0270      	SUBWF      R0, 0
0x04DE	0x1D03      	BTFSS      STATUS, 2
0x04DF	0x2CE2      	GOTO       L__search_arrow736
0x04E0	0x082F      	MOVF       _TMR0_value, 0
0x04E1	0x3C10      	SUBLW      16
L__search_arrow736:
0x04E2	0x1C03      	BTFSS      STATUS, 0
0x04E3	0x2D01      	GOTO       L_search_arrow387
0x04E4	0x3000      	MOVLW      0
0x04E5	0x066A      	XORWF      search_arrow_state_L0+1, 0
0x04E6	0x1D03      	BTFSS      STATUS, 2
0x04E7	0x2CEA      	GOTO       L__search_arrow737
0x04E8	0x3000      	MOVLW      0
0x04E9	0x0669      	XORWF      search_arrow_state_L0, 0
L__search_arrow737:
0x04EA	0x1D03      	BTFSS      STATUS, 2
0x04EB	0x2D01      	GOTO       L_search_arrow387
L__search_arrow476:
;final_code_1.c,1150 :: 		sensorRead();
0x04EC	0x211C      	CALL       _sensorRead
;final_code_1.c,1151 :: 		value=bin_deci();
0x04ED	0x2351      	CALL       _bin_deci
0x04EE	0x0870      	MOVF       R0, 0
0x04EF	0x00AB      	MOVWF      _value
0x04F0	0x0871      	MOVF       R0+1, 0
0x04F1	0x00AC      	MOVWF      _value+1
;final_code_1.c,1152 :: 		goStraight();
0x04F2	0x22DC      	CALL       _goStraight
;final_code_1.c,1153 :: 		if(value!=0){
0x04F3	0x3000      	MOVLW      0
0x04F4	0x062C      	XORWF      _value+1, 0
0x04F5	0x1D03      	BTFSS      STATUS, 2
0x04F6	0x2CF9      	GOTO       L__search_arrow738
0x04F7	0x3000      	MOVLW      0
0x04F8	0x062B      	XORWF      _value, 0
L__search_arrow738:
0x04F9	0x1903      	BTFSC      STATUS, 2
0x04FA	0x2D00      	GOTO       L_search_arrow390
;final_code_1.c,1154 :: 		state=1;
0x04FB	0x3001      	MOVLW      1
0x04FC	0x00E9      	MOVWF      search_arrow_state_L0
0x04FD	0x3000      	MOVLW      0
0x04FE	0x00EA      	MOVWF      search_arrow_state_L0+1
;final_code_1.c,1155 :: 		break;
0x04FF	0x2D01      	GOTO       L_search_arrow387
;final_code_1.c,1156 :: 		}
L_search_arrow390:
;final_code_1.c,1157 :: 		}
0x0500	0x2CD9      	GOTO       L_search_arrow386
L_search_arrow387:
;final_code_1.c,1158 :: 		if(state==0){
0x0501	0x3000      	MOVLW      0
0x0502	0x066A      	XORWF      search_arrow_state_L0+1, 0
0x0503	0x1D03      	BTFSS      STATUS, 2
0x0504	0x2D07      	GOTO       L__search_arrow739
0x0505	0x3000      	MOVLW      0
0x0506	0x0669      	XORWF      search_arrow_state_L0, 0
L__search_arrow739:
0x0507	0x1D03      	BTFSS      STATUS, 2
0x0508	0x2D18      	GOTO       L_search_arrow391
;final_code_1.c,1159 :: 		stopAll();
0x0509	0x22D5      	CALL       _stopAll
;final_code_1.c,1160 :: 		delay_ms(2000);
0x050A	0x3033      	MOVLW      51
0x050B	0x00FB      	MOVWF      R11
0x050C	0x30BB      	MOVLW      187
0x050D	0x00FC      	MOVWF      R12
0x050E	0x30DF      	MOVLW      223
0x050F	0x00FD      	MOVWF      R13
L_search_arrow392:
0x0510	0x0BFD      	DECFSZ     R13, 1
0x0511	0x2D10      	GOTO       L_search_arrow392
0x0512	0x0BFC      	DECFSZ     R12, 1
0x0513	0x2D10      	GOTO       L_search_arrow392
0x0514	0x0BFB      	DECFSZ     R11, 1
0x0515	0x2D10      	GOTO       L_search_arrow392
0x0516	0x0000      	NOP
0x0517	0x0000      	NOP
;final_code_1.c,1161 :: 		}
L_search_arrow391:
;final_code_1.c,1163 :: 		initEncoder();
0x0518	0x210E      	CALL       _initEncoder
;final_code_1.c,1164 :: 		while(TMR0_value<=15 && state==0){
L_search_arrow393:
0x0519	0x3080      	MOVLW      128
0x051A	0x00F0      	MOVWF      R0
0x051B	0x3080      	MOVLW      128
0x051C	0x0630      	XORWF      _TMR0_value+1, 0
0x051D	0x0270      	SUBWF      R0, 0
0x051E	0x1D03      	BTFSS      STATUS, 2
0x051F	0x2D22      	GOTO       L__search_arrow740
0x0520	0x082F      	MOVF       _TMR0_value, 0
0x0521	0x3C0F      	SUBLW      15
L__search_arrow740:
0x0522	0x1C03      	BTFSS      STATUS, 0
0x0523	0x2D41      	GOTO       L_search_arrow394
0x0524	0x3000      	MOVLW      0
0x0525	0x066A      	XORWF      search_arrow_state_L0+1, 0
0x0526	0x1D03      	BTFSS      STATUS, 2
0x0527	0x2D2A      	GOTO       L__search_arrow741
0x0528	0x3000      	MOVLW      0
0x0529	0x0669      	XORWF      search_arrow_state_L0, 0
L__search_arrow741:
0x052A	0x1D03      	BTFSS      STATUS, 2
0x052B	0x2D41      	GOTO       L_search_arrow394
L__search_arrow475:
;final_code_1.c,1165 :: 		sensorRead();
0x052C	0x211C      	CALL       _sensorRead
;final_code_1.c,1166 :: 		value=bin_deci();
0x052D	0x2351      	CALL       _bin_deci
0x052E	0x0870      	MOVF       R0, 0
0x052F	0x00AB      	MOVWF      _value
0x0530	0x0871      	MOVF       R0+1, 0
0x0531	0x00AC      	MOVWF      _value+1
;final_code_1.c,1167 :: 		RightHardTurn();
0x0532	0x22C6      	CALL       _RightHardTurn
;final_code_1.c,1168 :: 		if(value!=0){
0x0533	0x3000      	MOVLW      0
0x0534	0x062C      	XORWF      _value+1, 0
0x0535	0x1D03      	BTFSS      STATUS, 2
0x0536	0x2D39      	GOTO       L__search_arrow742
0x0537	0x3000      	MOVLW      0
0x0538	0x062B      	XORWF      _value, 0
L__search_arrow742:
0x0539	0x1903      	BTFSC      STATUS, 2
0x053A	0x2D40      	GOTO       L_search_arrow397
;final_code_1.c,1169 :: 		state=1;
0x053B	0x3001      	MOVLW      1
0x053C	0x00E9      	MOVWF      search_arrow_state_L0
0x053D	0x3000      	MOVLW      0
0x053E	0x00EA      	MOVWF      search_arrow_state_L0+1
;final_code_1.c,1170 :: 		break;
0x053F	0x2D41      	GOTO       L_search_arrow394
;final_code_1.c,1171 :: 		}
L_search_arrow397:
;final_code_1.c,1172 :: 		}
0x0540	0x2D19      	GOTO       L_search_arrow393
L_search_arrow394:
;final_code_1.c,1173 :: 		if(state==0){
0x0541	0x3000      	MOVLW      0
0x0542	0x066A      	XORWF      search_arrow_state_L0+1, 0
0x0543	0x1D03      	BTFSS      STATUS, 2
0x0544	0x2D47      	GOTO       L__search_arrow743
0x0545	0x3000      	MOVLW      0
0x0546	0x0669      	XORWF      search_arrow_state_L0, 0
L__search_arrow743:
0x0547	0x1D03      	BTFSS      STATUS, 2
0x0548	0x2D58      	GOTO       L_search_arrow398
;final_code_1.c,1174 :: 		stopAll();
0x0549	0x22D5      	CALL       _stopAll
;final_code_1.c,1175 :: 		delay_ms(2000);
0x054A	0x3033      	MOVLW      51
0x054B	0x00FB      	MOVWF      R11
0x054C	0x30BB      	MOVLW      187
0x054D	0x00FC      	MOVWF      R12
0x054E	0x30DF      	MOVLW      223
0x054F	0x00FD      	MOVWF      R13
L_search_arrow399:
0x0550	0x0BFD      	DECFSZ     R13, 1
0x0551	0x2D50      	GOTO       L_search_arrow399
0x0552	0x0BFC      	DECFSZ     R12, 1
0x0553	0x2D50      	GOTO       L_search_arrow399
0x0554	0x0BFB      	DECFSZ     R11, 1
0x0555	0x2D50      	GOTO       L_search_arrow399
0x0556	0x0000      	NOP
0x0557	0x0000      	NOP
;final_code_1.c,1176 :: 		}
L_search_arrow398:
;final_code_1.c,1178 :: 		initEncoder();
0x0558	0x210E      	CALL       _initEncoder
;final_code_1.c,1179 :: 		while(TMR0_value<=60 && state==0){
L_search_arrow400:
0x0559	0x3080      	MOVLW      128
0x055A	0x00F0      	MOVWF      R0
0x055B	0x3080      	MOVLW      128
0x055C	0x0630      	XORWF      _TMR0_value+1, 0
0x055D	0x0270      	SUBWF      R0, 0
0x055E	0x1D03      	BTFSS      STATUS, 2
0x055F	0x2D62      	GOTO       L__search_arrow744
0x0560	0x082F      	MOVF       _TMR0_value, 0
0x0561	0x3C3C      	SUBLW      60
L__search_arrow744:
0x0562	0x1C03      	BTFSS      STATUS, 0
0x0563	0x2D81      	GOTO       L_search_arrow401
0x0564	0x3000      	MOVLW      0
0x0565	0x066A      	XORWF      search_arrow_state_L0+1, 0
0x0566	0x1D03      	BTFSS      STATUS, 2
0x0567	0x2D6A      	GOTO       L__search_arrow745
0x0568	0x3000      	MOVLW      0
0x0569	0x0669      	XORWF      search_arrow_state_L0, 0
L__search_arrow745:
0x056A	0x1D03      	BTFSS      STATUS, 2
0x056B	0x2D81      	GOTO       L_search_arrow401
L__search_arrow474:
;final_code_1.c,1180 :: 		sensorRead();
0x056C	0x211C      	CALL       _sensorRead
;final_code_1.c,1181 :: 		value=bin_deci();
0x056D	0x2351      	CALL       _bin_deci
0x056E	0x0870      	MOVF       R0, 0
0x056F	0x00AB      	MOVWF      _value
0x0570	0x0871      	MOVF       R0+1, 0
0x0571	0x00AC      	MOVWF      _value+1
;final_code_1.c,1182 :: 		goStraight();
0x0572	0x22DC      	CALL       _goStraight
;final_code_1.c,1183 :: 		if(value!=0){
0x0573	0x3000      	MOVLW      0
0x0574	0x062C      	XORWF      _value+1, 0
0x0575	0x1D03      	BTFSS      STATUS, 2
0x0576	0x2D79      	GOTO       L__search_arrow746
0x0577	0x3000      	MOVLW      0
0x0578	0x062B      	XORWF      _value, 0
L__search_arrow746:
0x0579	0x1903      	BTFSC      STATUS, 2
0x057A	0x2D80      	GOTO       L_search_arrow404
;final_code_1.c,1184 :: 		state=1;
0x057B	0x3001      	MOVLW      1
0x057C	0x00E9      	MOVWF      search_arrow_state_L0
0x057D	0x3000      	MOVLW      0
0x057E	0x00EA      	MOVWF      search_arrow_state_L0+1
;final_code_1.c,1185 :: 		break;
0x057F	0x2D81      	GOTO       L_search_arrow401
;final_code_1.c,1186 :: 		}
L_search_arrow404:
;final_code_1.c,1187 :: 		}
0x0580	0x2D59      	GOTO       L_search_arrow400
L_search_arrow401:
;final_code_1.c,1188 :: 		if(state==0){
0x0581	0x3000      	MOVLW      0
0x0582	0x066A      	XORWF      search_arrow_state_L0+1, 0
0x0583	0x1D03      	BTFSS      STATUS, 2
0x0584	0x2D87      	GOTO       L__search_arrow747
0x0585	0x3000      	MOVLW      0
0x0586	0x0669      	XORWF      search_arrow_state_L0, 0
L__search_arrow747:
0x0587	0x1D03      	BTFSS      STATUS, 2
0x0588	0x2D98      	GOTO       L_search_arrow405
;final_code_1.c,1189 :: 		stopAll();
0x0589	0x22D5      	CALL       _stopAll
;final_code_1.c,1190 :: 		delay_ms(2000);
0x058A	0x3033      	MOVLW      51
0x058B	0x00FB      	MOVWF      R11
0x058C	0x30BB      	MOVLW      187
0x058D	0x00FC      	MOVWF      R12
0x058E	0x30DF      	MOVLW      223
0x058F	0x00FD      	MOVWF      R13
L_search_arrow406:
0x0590	0x0BFD      	DECFSZ     R13, 1
0x0591	0x2D90      	GOTO       L_search_arrow406
0x0592	0x0BFC      	DECFSZ     R12, 1
0x0593	0x2D90      	GOTO       L_search_arrow406
0x0594	0x0BFB      	DECFSZ     R11, 1
0x0595	0x2D90      	GOTO       L_search_arrow406
0x0596	0x0000      	NOP
0x0597	0x0000      	NOP
;final_code_1.c,1191 :: 		}
L_search_arrow405:
;final_code_1.c,1193 :: 		initEncoder();
0x0598	0x210E      	CALL       _initEncoder
;final_code_1.c,1194 :: 		while(TMR0_value<=20 && state==0){
L_search_arrow407:
0x0599	0x3080      	MOVLW      128
0x059A	0x00F0      	MOVWF      R0
0x059B	0x3080      	MOVLW      128
0x059C	0x0630      	XORWF      _TMR0_value+1, 0
0x059D	0x0270      	SUBWF      R0, 0
0x059E	0x1D03      	BTFSS      STATUS, 2
0x059F	0x2DA2      	GOTO       L__search_arrow748
0x05A0	0x082F      	MOVF       _TMR0_value, 0
0x05A1	0x3C14      	SUBLW      20
L__search_arrow748:
0x05A2	0x1C03      	BTFSS      STATUS, 0
0x05A3	0x2DC1      	GOTO       L_search_arrow408
0x05A4	0x3000      	MOVLW      0
0x05A5	0x066A      	XORWF      search_arrow_state_L0+1, 0
0x05A6	0x1D03      	BTFSS      STATUS, 2
0x05A7	0x2DAA      	GOTO       L__search_arrow749
0x05A8	0x3000      	MOVLW      0
0x05A9	0x0669      	XORWF      search_arrow_state_L0, 0
L__search_arrow749:
0x05AA	0x1D03      	BTFSS      STATUS, 2
0x05AB	0x2DC1      	GOTO       L_search_arrow408
L__search_arrow473:
;final_code_1.c,1195 :: 		sensorRead();
0x05AC	0x211C      	CALL       _sensorRead
;final_code_1.c,1196 :: 		value=bin_deci();
0x05AD	0x2351      	CALL       _bin_deci
0x05AE	0x0870      	MOVF       R0, 0
0x05AF	0x00AB      	MOVWF      _value
0x05B0	0x0871      	MOVF       R0+1, 0
0x05B1	0x00AC      	MOVWF      _value+1
;final_code_1.c,1197 :: 		lefthardTurn();
0x05B2	0x23E0      	CALL       _leftHardTurn
;final_code_1.c,1198 :: 		if(value!=0){
0x05B3	0x3000      	MOVLW      0
0x05B4	0x062C      	XORWF      _value+1, 0
0x05B5	0x1D03      	BTFSS      STATUS, 2
0x05B6	0x2DB9      	GOTO       L__search_arrow750
0x05B7	0x3000      	MOVLW      0
0x05B8	0x062B      	XORWF      _value, 0
L__search_arrow750:
0x05B9	0x1903      	BTFSC      STATUS, 2
0x05BA	0x2DC0      	GOTO       L_search_arrow411
;final_code_1.c,1199 :: 		state=1;
0x05BB	0x3001      	MOVLW      1
0x05BC	0x00E9      	MOVWF      search_arrow_state_L0
0x05BD	0x3000      	MOVLW      0
0x05BE	0x00EA      	MOVWF      search_arrow_state_L0+1
;final_code_1.c,1200 :: 		break;
0x05BF	0x2DC1      	GOTO       L_search_arrow408
;final_code_1.c,1201 :: 		}
L_search_arrow411:
;final_code_1.c,1202 :: 		}
0x05C0	0x2D99      	GOTO       L_search_arrow407
L_search_arrow408:
;final_code_1.c,1203 :: 		if(state==0){
0x05C1	0x3000      	MOVLW      0
0x05C2	0x066A      	XORWF      search_arrow_state_L0+1, 0
0x05C3	0x1D03      	BTFSS      STATUS, 2
0x05C4	0x2DC7      	GOTO       L__search_arrow751
0x05C5	0x3000      	MOVLW      0
0x05C6	0x0669      	XORWF      search_arrow_state_L0, 0
L__search_arrow751:
0x05C7	0x1D03      	BTFSS      STATUS, 2
0x05C8	0x2DD8      	GOTO       L_search_arrow412
;final_code_1.c,1204 :: 		stopAll();
0x05C9	0x22D5      	CALL       _stopAll
;final_code_1.c,1205 :: 		delay_ms(2000);
0x05CA	0x3033      	MOVLW      51
0x05CB	0x00FB      	MOVWF      R11
0x05CC	0x30BB      	MOVLW      187
0x05CD	0x00FC      	MOVWF      R12
0x05CE	0x30DF      	MOVLW      223
0x05CF	0x00FD      	MOVWF      R13
L_search_arrow413:
0x05D0	0x0BFD      	DECFSZ     R13, 1
0x05D1	0x2DD0      	GOTO       L_search_arrow413
0x05D2	0x0BFC      	DECFSZ     R12, 1
0x05D3	0x2DD0      	GOTO       L_search_arrow413
0x05D4	0x0BFB      	DECFSZ     R11, 1
0x05D5	0x2DD0      	GOTO       L_search_arrow413
0x05D6	0x0000      	NOP
0x05D7	0x0000      	NOP
;final_code_1.c,1206 :: 		}
L_search_arrow412:
;final_code_1.c,1208 :: 		initEncoder();
0x05D8	0x210E      	CALL       _initEncoder
;final_code_1.c,1209 :: 		while(TMR0_value<=16 && state==0){
L_search_arrow414:
0x05D9	0x3080      	MOVLW      128
0x05DA	0x00F0      	MOVWF      R0
0x05DB	0x3080      	MOVLW      128
0x05DC	0x0630      	XORWF      _TMR0_value+1, 0
0x05DD	0x0270      	SUBWF      R0, 0
0x05DE	0x1D03      	BTFSS      STATUS, 2
0x05DF	0x2DE2      	GOTO       L__search_arrow752
0x05E0	0x082F      	MOVF       _TMR0_value, 0
0x05E1	0x3C10      	SUBLW      16
L__search_arrow752:
0x05E2	0x1C03      	BTFSS      STATUS, 0
0x05E3	0x2E10      	GOTO       L_search_arrow415
0x05E4	0x3000      	MOVLW      0
0x05E5	0x066A      	XORWF      search_arrow_state_L0+1, 0
0x05E6	0x1D03      	BTFSS      STATUS, 2
0x05E7	0x2DEA      	GOTO       L__search_arrow753
0x05E8	0x3000      	MOVLW      0
0x05E9	0x0669      	XORWF      search_arrow_state_L0, 0
L__search_arrow753:
0x05EA	0x1D03      	BTFSS      STATUS, 2
0x05EB	0x2E10      	GOTO       L_search_arrow415
L__search_arrow472:
;final_code_1.c,1210 :: 		sensorRead();
0x05EC	0x211C      	CALL       _sensorRead
;final_code_1.c,1211 :: 		value=bin_deci();
0x05ED	0x2351      	CALL       _bin_deci
0x05EE	0x0870      	MOVF       R0, 0
0x05EF	0x00AB      	MOVWF      _value
0x05F0	0x0871      	MOVF       R0+1, 0
0x05F1	0x00AC      	MOVWF      _value+1
;final_code_1.c,1212 :: 		goStraight();
0x05F2	0x22DC      	CALL       _goStraight
;final_code_1.c,1213 :: 		if(value!=0){
0x05F3	0x3000      	MOVLW      0
0x05F4	0x062C      	XORWF      _value+1, 0
0x05F5	0x1D03      	BTFSS      STATUS, 2
0x05F6	0x2DF9      	GOTO       L__search_arrow754
0x05F7	0x3000      	MOVLW      0
0x05F8	0x062B      	XORWF      _value, 0
L__search_arrow754:
0x05F9	0x1903      	BTFSC      STATUS, 2
0x05FA	0x2E0F      	GOTO       L_search_arrow418
;final_code_1.c,1214 :: 		stopAll();
0x05FB	0x22D5      	CALL       _stopAll
;final_code_1.c,1215 :: 		delay_ms(2000);
0x05FC	0x3033      	MOVLW      51
0x05FD	0x00FB      	MOVWF      R11
0x05FE	0x30BB      	MOVLW      187
0x05FF	0x00FC      	MOVWF      R12
0x0600	0x30DF      	MOVLW      223
0x0601	0x00FD      	MOVWF      R13
L_search_arrow419:
0x0602	0x0BFD      	DECFSZ     R13, 1
0x0603	0x2E02      	GOTO       L_search_arrow419
0x0604	0x0BFC      	DECFSZ     R12, 1
0x0605	0x2E02      	GOTO       L_search_arrow419
0x0606	0x0BFB      	DECFSZ     R11, 1
0x0607	0x2E02      	GOTO       L_search_arrow419
0x0608	0x0000      	NOP
0x0609	0x0000      	NOP
;final_code_1.c,1216 :: 		state=1;
0x060A	0x3001      	MOVLW      1
0x060B	0x00E9      	MOVWF      search_arrow_state_L0
0x060C	0x3000      	MOVLW      0
0x060D	0x00EA      	MOVWF      search_arrow_state_L0+1
;final_code_1.c,1217 :: 		break;
0x060E	0x2E10      	GOTO       L_search_arrow415
;final_code_1.c,1218 :: 		}
L_search_arrow418:
;final_code_1.c,1219 :: 		}
0x060F	0x2DD9      	GOTO       L_search_arrow414
L_search_arrow415:
;final_code_1.c,1220 :: 		if(state==0){
0x0610	0x3000      	MOVLW      0
0x0611	0x066A      	XORWF      search_arrow_state_L0+1, 0
0x0612	0x1D03      	BTFSS      STATUS, 2
0x0613	0x2E16      	GOTO       L__search_arrow755
0x0614	0x3000      	MOVLW      0
0x0615	0x0669      	XORWF      search_arrow_state_L0, 0
L__search_arrow755:
0x0616	0x1D03      	BTFSS      STATUS, 2
0x0617	0x2E27      	GOTO       L_search_arrow420
;final_code_1.c,1221 :: 		stopAll();
0x0618	0x22D5      	CALL       _stopAll
;final_code_1.c,1222 :: 		delay_ms(2000);
0x0619	0x3033      	MOVLW      51
0x061A	0x00FB      	MOVWF      R11
0x061B	0x30BB      	MOVLW      187
0x061C	0x00FC      	MOVWF      R12
0x061D	0x30DF      	MOVLW      223
0x061E	0x00FD      	MOVWF      R13
L_search_arrow421:
0x061F	0x0BFD      	DECFSZ     R13, 1
0x0620	0x2E1F      	GOTO       L_search_arrow421
0x0621	0x0BFC      	DECFSZ     R12, 1
0x0622	0x2E1F      	GOTO       L_search_arrow421
0x0623	0x0BFB      	DECFSZ     R11, 1
0x0624	0x2E1F      	GOTO       L_search_arrow421
0x0625	0x0000      	NOP
0x0626	0x0000      	NOP
;final_code_1.c,1223 :: 		}
L_search_arrow420:
;final_code_1.c,1225 :: 		if(state==1){
0x0627	0x3000      	MOVLW      0
0x0628	0x066A      	XORWF      search_arrow_state_L0+1, 0
0x0629	0x1D03      	BTFSS      STATUS, 2
0x062A	0x2E2D      	GOTO       L__search_arrow756
0x062B	0x3001      	MOVLW      1
0x062C	0x0669      	XORWF      search_arrow_state_L0, 0
L__search_arrow756:
0x062D	0x1D03      	BTFSS      STATUS, 2
0x062E	0x2E35      	GOTO       L_search_arrow422
;final_code_1.c,1226 :: 		stopAll();
0x062F	0x22D5      	CALL       _stopAll
;final_code_1.c,1227 :: 		search_arr=1;
0x0630	0x3001      	MOVLW      1
0x0631	0x00AD      	MOVWF      _search_arr
0x0632	0x3000      	MOVLW      0
0x0633	0x00AE      	MOVWF      _search_arr+1
;final_code_1.c,1228 :: 		break;
0x0634	0x2E36      	GOTO       L_search_arrow364
;final_code_1.c,1229 :: 		}
L_search_arrow422:
;final_code_1.c,1232 :: 		}
0x0635	0x2C0A      	GOTO       L_search_arrow363
L_search_arrow364:
;final_code_1.c,1235 :: 		}
0x0636	0x0008      	RETURN
; end of _search_arrow
_speedChange_test:
;final_code_1.c,1080 :: 		void speedChange_test(){
;final_code_1.c,1081 :: 		speed=210;
0x0637	0x30D2      	MOVLW      210
0x0638	0x1283      	BCF        STATUS, 5
0x0639	0x1303      	BCF        STATUS, 6
0x063A	0x00A9      	MOVWF      _speed
0x063B	0x01AA      	CLRF       _speed+1
;final_code_1.c,1082 :: 		speed1= 190;
0x063C	0x30BE      	MOVLW      190
0x063D	0x00A3      	MOVWF      _speed1
0x063E	0x01A4      	CLRF       _speed1+1
;final_code_1.c,1083 :: 		speed2=205;
0x063F	0x30CD      	MOVLW      205
0x0640	0x00A1      	MOVWF      _speed2
0x0641	0x01A2      	CLRF       _speed2+1
;final_code_1.c,1084 :: 		speed3=195;
0x0642	0x30C3      	MOVLW      195
0x0643	0x00A7      	MOVWF      _speed3
0x0644	0x01A8      	CLRF       _speed3+1
;final_code_1.c,1087 :: 		}
0x0645	0x0008      	RETURN
; end of _speedChange_test
_PWM2_Start:
;__Lib_PWM_c21.c,19 :: 		
;__Lib_PWM_c21.c,20 :: 		
0x0646	0x1683      	BSF        STATUS, 5
0x0647	0x1303      	BCF        STATUS, 6
0x0648	0x1087      	BCF        TRISC1_bit, 1
;__Lib_PWM_c21.c,21 :: 		
0x0649	0x1283      	BCF        STATUS, 5
0x064A	0x1512      	BSF        T2CON, 2
;__Lib_PWM_c21.c,22 :: 		
0x064B	0x300C      	MOVLW      12
0x064C	0x049D      	IORWF      CCP2CON, 1
;__Lib_PWM_c21.c,23 :: 		
0x064D	0x0008      	RETURN
; end of _PWM2_Start
_PWM1_Start:
;__Lib_PWM_c21.c,51 :: 		
;__Lib_PWM_c21.c,52 :: 		
0x064E	0x1683      	BSF        STATUS, 5
0x064F	0x1303      	BCF        STATUS, 6
0x0650	0x1107      	BCF        TRISC2_bit, 2
;__Lib_PWM_c21.c,53 :: 		
0x0651	0x1283      	BCF        STATUS, 5
0x0652	0x1512      	BSF        T2CON, 2
;__Lib_PWM_c21.c,54 :: 		
0x0653	0x300C      	MOVLW      12
0x0654	0x0497      	IORWF      CCP1CON, 1
;__Lib_PWM_c21.c,55 :: 		
0x0655	0x0008      	RETURN
; end of _PWM1_Start
_init_timer:
;final_code_1.c,739 :: 		void init_timer(){
;final_code_1.c,740 :: 		OPTION_REG = 0b10000101; //Timer0 interrupts are configured
0x0656	0x3085      	MOVLW      133
0x0657	0x1683      	BSF        STATUS, 5
0x0658	0x1303      	BCF        STATUS, 6
0x0659	0x0081      	MOVWF      OPTION_REG
;final_code_1.c,741 :: 		INTCON = 0b10100000; //Interrupts are enabled.
0x065A	0x30A0      	MOVLW      160
0x065B	0x008B      	MOVWF      INTCON
;final_code_1.c,742 :: 		}
0x065C	0x0008      	RETURN
; end of _init_timer
_PWM1_Init:
;__Lib_PWM_c21.c,33 :: 		
;__Lib_PWM_c21.c,34 :: 		
;__Lib_PWM_c21.c,35 :: 		
0x065D	0x1283      	BCF        STATUS, 5
0x065E	0x1303      	BCF        STATUS, 6
0x065F	0x0195      	CLRF       CCPR1L
;__Lib_PWM_c21.c,36 :: 		
0x0660	0x1217      	BCF        CCP1CON, 4
;__Lib_PWM_c21.c,37 :: 		
0x0661	0x1297      	BCF        CCP1CON, 5
;__Lib_PWM_c21.c,38 :: 		
0x0662	0x0008      	RETURN
; end of _PWM1_Init
_PWM2_Init:
;__Lib_PWM_c21.c,1 :: 		
;__Lib_PWM_c21.c,2 :: 		
;__Lib_PWM_c21.c,3 :: 		
0x0663	0x1283      	BCF        STATUS, 5
0x0664	0x1303      	BCF        STATUS, 6
0x0665	0x019B      	CLRF       CCPR2L
;__Lib_PWM_c21.c,4 :: 		
0x0666	0x121D      	BCF        CCP2CON, 4
;__Lib_PWM_c21.c,5 :: 		
0x0667	0x129D      	BCF        CCP2CON, 5
;__Lib_PWM_c21.c,6 :: 		
0x0668	0x0008      	RETURN
; end of _PWM2_Init
___CC2DW:
;__Lib_System.c,24 :: 		
;__Lib_System.c,27 :: 		
_CC2D_Loop1:
;__Lib_System.c,29 :: 		
0x0669	0x2115      	CALL       _____DoICP
0x066A	0x118A      	BCF        PCLATH, 3
0x066B	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,31 :: 		
0x066C	0x0080      	MOVWF      INDF
;__Lib_System.c,32 :: 		
0x066D	0x0A84      	INCF       FSR, 1
;__Lib_System.c,33 :: 		
0x066E	0x0AC1      	INCF       ___DoICPAddr, 1
;__Lib_System.c,35 :: 		
0x066F	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,36 :: 		
0x0670	0x0AC2      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,37 :: 		
0x0671	0x03F0      	DECF       R0, 1
;__Lib_System.c,39 :: 		
0x0672	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,40 :: 		
0x0673	0x2E69      	GOTO       _CC2D_Loop1
;__Lib_System.c,42 :: 		
0x0674	0x0008      	RETURN
; end of ___CC2DW
_encoder:
;final_code_1.c,495 :: 		void encoder(){
;final_code_1.c,496 :: 		if(PORTC.F0==1){
0x0675	0x1283      	BCF        STATUS, 5
0x0676	0x1303      	BCF        STATUS, 6
0x0677	0x1C07      	BTFSS      PORTC, 0
0x0678	0x2E7B      	GOTO       L_encoder160
;final_code_1.c,497 :: 		tm1st= 0;
0x0679	0x01B3      	CLRF       _tm1st
0x067A	0x01B4      	CLRF       _tm1st+1
;final_code_1.c,499 :: 		}
L_encoder160:
;final_code_1.c,500 :: 		if(PORTC.F0==0&&tm1st==0){
0x067B	0x1807      	BTFSC      PORTC, 0
0x067C	0x2EA4      	GOTO       L_encoder163
0x067D	0x3000      	MOVLW      0
0x067E	0x0634      	XORWF      _tm1st+1, 0
0x067F	0x1D03      	BTFSS      STATUS, 2
0x0680	0x2E83      	GOTO       L__encoder615
0x0681	0x3000      	MOVLW      0
0x0682	0x0633      	XORWF      _tm1st, 0
L__encoder615:
0x0683	0x1D03      	BTFSS      STATUS, 2
0x0684	0x2EA4      	GOTO       L_encoder163
L__encoder460:
;final_code_1.c,501 :: 		tm1st= 1;
0x0685	0x3001      	MOVLW      1
0x0686	0x00B3      	MOVWF      _tm1st
0x0687	0x3000      	MOVLW      0
0x0688	0x00B4      	MOVWF      _tm1st+1
;final_code_1.c,502 :: 		TMR1_value= TMR1_value+1;
0x0689	0x0AB5      	INCF       _TMR1_value, 1
0x068A	0x1903      	BTFSC      STATUS, 2
0x068B	0x0AB6      	INCF       _TMR1_value+1, 1
;final_code_1.c,503 :: 		if(rotationMode==1){
0x068C	0x3000      	MOVLW      0
0x068D	0x0626      	XORWF      _rotationMode+1, 0
0x068E	0x1D03      	BTFSS      STATUS, 2
0x068F	0x2E92      	GOTO       L__encoder616
0x0690	0x3001      	MOVLW      1
0x0691	0x0625      	XORWF      _rotationMode, 0
L__encoder616:
0x0692	0x1D03      	BTFSS      STATUS, 2
0x0693	0x2E98      	GOTO       L_encoder164
;final_code_1.c,504 :: 		clockEncoder=clockEncoder+1;
0x0694	0x0AB9      	INCF       _clockEncoder, 1
0x0695	0x1903      	BTFSC      STATUS, 2
0x0696	0x0ABA      	INCF       _clockEncoder+1, 1
;final_code_1.c,505 :: 		}else if(rotationMode==2){
0x0697	0x2EA4      	GOTO       L_encoder165
L_encoder164:
0x0698	0x3000      	MOVLW      0
0x0699	0x0626      	XORWF      _rotationMode+1, 0
0x069A	0x1D03      	BTFSS      STATUS, 2
0x069B	0x2E9E      	GOTO       L__encoder617
0x069C	0x3002      	MOVLW      2
0x069D	0x0625      	XORWF      _rotationMode, 0
L__encoder617:
0x069E	0x1D03      	BTFSS      STATUS, 2
0x069F	0x2EA4      	GOTO       L_encoder166
;final_code_1.c,506 :: 		clockEncoder=clockEncoder-1;
0x06A0	0x3001      	MOVLW      1
0x06A1	0x02B9      	SUBWF      _clockEncoder, 1
0x06A2	0x1C03      	BTFSS      STATUS, 0
0x06A3	0x03BA      	DECF       _clockEncoder+1, 1
;final_code_1.c,507 :: 		}
L_encoder166:
L_encoder165:
;final_code_1.c,508 :: 		}
L_encoder163:
;final_code_1.c,510 :: 		if(PORTA.F4==1){
0x06A4	0x1E05      	BTFSS      PORTA, 4
0x06A5	0x2EA8      	GOTO       L_encoder167
;final_code_1.c,511 :: 		tm0st= 0;
0x06A6	0x01B7      	CLRF       _tm0st
0x06A7	0x01B8      	CLRF       _tm0st+1
;final_code_1.c,512 :: 		}
L_encoder167:
;final_code_1.c,513 :: 		if(PORTA.F4==0&&tm0st==0){
0x06A8	0x1A05      	BTFSC      PORTA, 4
0x06A9	0x2EB9      	GOTO       L_encoder170
0x06AA	0x3000      	MOVLW      0
0x06AB	0x0638      	XORWF      _tm0st+1, 0
0x06AC	0x1D03      	BTFSS      STATUS, 2
0x06AD	0x2EB0      	GOTO       L__encoder618
0x06AE	0x3000      	MOVLW      0
0x06AF	0x0637      	XORWF      _tm0st, 0
L__encoder618:
0x06B0	0x1D03      	BTFSS      STATUS, 2
0x06B1	0x2EB9      	GOTO       L_encoder170
L__encoder459:
;final_code_1.c,514 :: 		tm0st= 1;
0x06B2	0x3001      	MOVLW      1
0x06B3	0x00B7      	MOVWF      _tm0st
0x06B4	0x3000      	MOVLW      0
0x06B5	0x00B8      	MOVWF      _tm0st+1
;final_code_1.c,515 :: 		TMR0_value= TMR0_value+1;
0x06B6	0x0AAF      	INCF       _TMR0_value, 1
0x06B7	0x1903      	BTFSC      STATUS, 2
0x06B8	0x0AB0      	INCF       _TMR0_value+1, 1
;final_code_1.c,516 :: 		}
L_encoder170:
;final_code_1.c,517 :: 		}
0x06B9	0x0008      	RETURN
; end of _encoder
_main:
0x06BA	0x30FA      	MOVLW      250
0x06BB	0x1283      	BCF        STATUS, 5
0x06BC	0x1303      	BCF        STATUS, 6
0x06BD	0x00A1      	MOVWF      _speed2
0x06BE	0x01A2      	CLRF       34
0x06BF	0x30E1      	MOVLW      225
0x06C0	0x00A3      	MOVWF      _speed1
0x06C1	0x01A4      	CLRF       36
0x06C2	0x01A5      	CLRF       _rotationMode
0x06C3	0x01A6      	CLRF       38
0x06C4	0x30E6      	MOVLW      230
0x06C5	0x00A7      	MOVWF      _speed3
0x06C6	0x01A8      	CLRF       40
0x06C7	0x30FF      	MOVLW      255
0x06C8	0x00A9      	MOVWF      _speed
0x06C9	0x01AA      	CLRF       42
0x06CA	0x01AB      	CLRF       _value
0x06CB	0x01AC      	CLRF       44
0x06CC	0x01AD      	CLRF       _search_arr
0x06CD	0x01AE      	CLRF       46
0x06CE	0x01AF      	CLRF       _TMR0_value
0x06CF	0x01B0      	CLRF       48
0x06D0	0x01B1      	CLRF       _totFront
0x06D1	0x01B2      	CLRF       50
0x06D2	0x01B3      	CLRF       _tm1st
0x06D3	0x01B4      	CLRF       52
0x06D4	0x01B5      	CLRF       _TMR1_value
0x06D5	0x01B6      	CLRF       54
0x06D6	0x01B7      	CLRF       _tm0st
0x06D7	0x01B8      	CLRF       56
0x06D8	0x01B9      	CLRF       _clockEncoder
0x06D9	0x01BA      	CLRF       58
0x06DA	0x303C      	MOVLW      60
0x06DB	0x00BB      	MOVWF      _adcVal1
0x06DC	0x01BC      	CLRF       60
0x06DD	0x30C8      	MOVLW      200
0x06DE	0x00BD      	MOVWF      _adcVal
0x06DF	0x01BE      	CLRF       62
0x06E0	0x01BF      	CLRF       _totBack
0x06E1	0x01C0      	CLRF       64
;final_code_1.c,1238 :: 		void main() {
;final_code_1.c,1239 :: 		TRISD=0b11000000;
0x06E2	0x30C0      	MOVLW      192
0x06E3	0x1683      	BSF        STATUS, 5
0x06E4	0x0088      	MOVWF      TRISD
;final_code_1.c,1240 :: 		TRISC=0b10000001;
0x06E5	0x3081      	MOVLW      129
0x06E6	0x0087      	MOVWF      TRISC
;final_code_1.c,1241 :: 		ADCON1=0x06; // Configure all input and output in to digital
0x06E7	0x3006      	MOVLW      6
0x06E8	0x009F      	MOVWF      ADCON1
;final_code_1.c,1242 :: 		TRISA.F4=1;
0x06E9	0x1605      	BSF        TRISA, 4
;final_code_1.c,1246 :: 		init_timer();
0x06EA	0x2656      	CALL       _init_timer
;final_code_1.c,1247 :: 		TRISB.F6=0;
0x06EB	0x1306      	BCF        TRISB, 6
;final_code_1.c,1248 :: 		TRISB.F7=0;
0x06EC	0x1386      	BCF        TRISB, 7
;final_code_1.c,1250 :: 		PWM1_Init(5000);
0x06ED	0x1283      	BCF        STATUS, 5
0x06EE	0x1412      	BSF        T2CON, 0
0x06EF	0x1092      	BCF        T2CON, 1
0x06F0	0x30F9      	MOVLW      249
0x06F1	0x1683      	BSF        STATUS, 5
0x06F2	0x0092      	MOVWF      PR2
0x06F3	0x265D      	CALL       _PWM1_Init
;final_code_1.c,1251 :: 		PWM2_Init(5000);
0x06F4	0x1412      	BSF        T2CON, 0
0x06F5	0x1092      	BCF        T2CON, 1
0x06F6	0x30F9      	MOVLW      249
0x06F7	0x1683      	BSF        STATUS, 5
0x06F8	0x0092      	MOVWF      PR2
0x06F9	0x2663      	CALL       _PWM2_Init
;final_code_1.c,1252 :: 		PWM1_Set_Duty(200);
0x06FA	0x30C8      	MOVLW      200
0x06FB	0x1683      	BSF        STATUS, 5
0x06FC	0x00B0      	MOVWF      FARG_PWM1_Set_Duty_new_duty
0x06FD	0x2045      	CALL       _PWM1_Set_Duty
;final_code_1.c,1253 :: 		PWM2_Set_Duty(200);
0x06FE	0x30C8      	MOVLW      200
0x06FF	0x1683      	BSF        STATUS, 5
0x0700	0x00B0      	MOVWF      FARG_PWM2_Set_Duty_new_duty
0x0701	0x2088      	CALL       _PWM2_Set_Duty
;final_code_1.c,1254 :: 		PWM1_Start();
0x0702	0x264E      	CALL       _PWM1_Start
;final_code_1.c,1255 :: 		PWM2_Start();
0x0703	0x2646      	CALL       _PWM2_Start
;final_code_1.c,1256 :: 		TRISA.F4=1;
0x0704	0x1683      	BSF        STATUS, 5
0x0705	0x1605      	BSF        TRISA, 4
;final_code_1.c,1257 :: 		TRISC.F0=1;
0x0706	0x1407      	BSF        TRISC, 0
;final_code_1.c,1259 :: 		PORTD.F7=1;
0x0707	0x1283      	BCF        STATUS, 5
0x0708	0x1788      	BSF        PORTD, 7
;final_code_1.c,1260 :: 		TRISD.F7 = 1;
0x0709	0x1683      	BSF        STATUS, 5
0x070A	0x1788      	BSF        TRISD, 7
;final_code_1.c,1261 :: 		TRISD.F0=1;
0x070B	0x1408      	BSF        TRISD, 0
;final_code_1.c,1262 :: 		TRISD.F1=1;
0x070C	0x1488      	BSF        TRISD, 1
;final_code_1.c,1263 :: 		TRISD.F2=1;
0x070D	0x1508      	BSF        TRISD, 2
;final_code_1.c,1264 :: 		initEncoder();
0x070E	0x210E      	CALL       _initEncoder
;final_code_1.c,1265 :: 		speedChange_test();
0x070F	0x2637      	CALL       _speedChange_test
;final_code_1.c,1266 :: 		while(1){
L_main423:
;final_code_1.c,1269 :: 		search_arrow();
0x0710	0x23EF      	CALL       _search_arrow
;final_code_1.c,1273 :: 		}
0x0711	0x2F10      	GOTO       L_main423
;final_code_1.c,1276 :: 		}
0x0712	0x2F12      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [22]    _interrupt
0x001A      [43]    _Mul_16x16_U
0x0045      [59]    _PWM1_Set_Duty
0x0080       [8]    _Delay_22us
0x0088      [59]    _PWM2_Set_Duty
0x00C3      [15]    _rightT
0x00D2      [15]    _leftT
0x00E1      [34]    _ADC_Read
0x0103      [11]    _moveF
0x010E       [7]    _initEncoder
0x0115       [7]    _____DoICP
0x011C     [426]    _sensorRead
0x02C6      [15]    _RightHardTurn
0x02D5       [7]    _stopAll
0x02DC     [117]    _goStraight
0x0351     [143]    _bin_deci
0x03E0      [15]    _leftHardTurn
0x03EF     [584]    _search_arrow
0x0637      [15]    _speedChange_test
0x0646       [8]    _PWM2_Start
0x064E       [8]    _PWM1_Start
0x0656       [7]    _init_timer
0x065D       [6]    _PWM1_Init
0x0663       [6]    _PWM2_Init
0x0669      [12]    ___CC2DW
0x0675      [69]    _encoder
0x06BA      [89]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0002       [1]    PCL
0x0003       [0]    Z_bit
0x0003       [1]    STATUS
0x0003       [0]    C_bit
0x0003       [0]    DC_bit
0x0003       [0]    NOT_PD_bit
0x0003       [0]    RP1_bit
0x0003       [0]    IRP_bit
0x0003       [0]    NOT_TO_bit
0x0003       [0]    RP0_bit
0x0004       [1]    FSR
0x0004       [1]    FSRPTR
0x0005       [0]    RA5_bit
0x0005       [0]    RA4_bit
0x0005       [1]    PORTA
0x0005       [0]    RA2_bit
0x0005       [0]    RA3_bit
0x0005       [0]    RA0_bit
0x0005       [0]    RA7_bit
0x0005       [0]    RA1_bit
0x0005       [0]    RA6_bit
0x0006       [0]    RB6_bit
0x0006       [0]    RB7_bit
0x0006       [0]    RB5_bit
0x0006       [0]    RB4_bit
0x0006       [0]    RB0_bit
0x0006       [0]    RB1_bit
0x0006       [1]    PORTB
0x0006       [0]    RB2_bit
0x0006       [0]    RB3_bit
0x0007       [0]    RC7_bit
0x0007       [0]    RC5_bit
0x0007       [0]    RC6_bit
0x0007       [1]    PORTC
0x0007       [0]    RC1_bit
0x0007       [0]    RC0_bit
0x0007       [0]    RC3_bit
0x0007       [0]    RC2_bit
0x0007       [0]    RC4_bit
0x0008       [1]    PORTD
0x0008       [0]    RD3_bit
0x0008       [0]    RD4_bit
0x0008       [0]    RD6_bit
0x0008       [0]    RD0_bit
0x0008       [0]    RD1_bit
0x0008       [0]    RD2_bit
0x0008       [0]    RD7_bit
0x0008       [0]    RD5_bit
0x0009       [0]    RE3_bit
0x0009       [1]    PORTE
0x0009       [0]    RE1_bit
0x0009       [0]    RE2_bit
0x0009       [0]    RE0_bit
0x000A       [1]    PCLATH
0x000B       [0]    T0IE_bit
0x000B       [0]    TMR0IE_bit
0x000B       [0]    PEIE_bit
0x000B       [1]    INTCON
0x000B       [0]    GIE_bit
0x000B       [0]    INTE_bit
0x000B       [0]    INTF_bit
0x000B       [0]    RBIF_bit
0x000B       [0]    TMR0IF_bit
0x000B       [0]    RBIE_bit
0x000B       [0]    T0IF_bit
0x000C       [0]    CCP1IF_bit
0x000C       [0]    SSPIF_bit
0x000C       [0]    TMR1IF_bit
0x000C       [0]    TMR2IF_bit
0x000C       [0]    TXIF_bit
0x000C       [1]    PIR1
0x000C       [0]    ADIF_bit
0x000C       [0]    RCIF_bit
0x000D       [0]    C1IF_bit
0x000D       [0]    EEIF_bit
0x000D       [0]    C2IF_bit
0x000D       [1]    PIR2
0x000D       [0]    OSFIF_bit
0x000D       [0]    BCLIF_bit
0x000D       [0]    CCP2IF_bit
0x000D       [0]    ULPWUIF_bit
0x000E       [1]    TMR1L
0x000F       [1]    TMR1H
0x0010       [0]    T1INSYNC_bit
0x0010       [0]    NOT_T1SYNC_bit
0x0010       [0]    TMR1ON_bit
0x0010       [0]    T1SYNC_bit
0x0010       [0]    T1OSCEN_bit
0x0010       [0]    T1CKPS1_bit
0x0010       [0]    TMR1GE_bit
0x0010       [0]    T1GINV_bit
0x0010       [0]    TMR1CS_bit
0x0010       [0]    T1CKPS0_bit
0x0010       [1]    T1CON
0x0011       [1]    TMR2
0x0012       [0]    TMR2ON_bit
0x0012       [0]    TOUTPS0_bit
0x0012       [0]    T2CKPS0_bit
0x0012       [0]    T2CKPS1_bit
0x0012       [0]    TOUTPS3_bit
0x0012       [1]    T2CON
0x0012       [0]    TOUTPS1_bit
0x0012       [0]    TOUTPS2_bit
0x0013       [1]    SSPBUF
0x0014       [0]    WCOL_bit
0x0014       [0]    SSPOV_bit
0x0014       [0]    SSPM1_bit
0x0014       [0]    SSPM0_bit
0x0014       [1]    SSPCON
0x0014       [0]    SSPEN_bit
0x0014       [0]    CKP_bit
0x0014       [0]    SSPM3_bit
0x0014       [0]    SSPM2_bit
0x0015       [2]    CCPR1
0x0015       [1]    CCPR1L
0x0016       [1]    CCPR1H
0x0017       [0]    P1M1_bit
0x0017       [0]    CCP1M3_bit
0x0017       [0]    DC1B1_bit
0x0017       [0]    CCP1X_bit
0x0017       [0]    P1M0_bit
0x0017       [0]    DC1B0_bit
0x0017       [0]    CCP1Y_bit
0x0017       [1]    CCP1CON
0x0017       [0]    CCP1M0_bit
0x0017       [0]    CCP1M2_bit
0x0017       [0]    CCP1M1_bit
0x0018       [1]    RCSTA
0x0018       [0]    RCD8_bit
0x0018       [0]    NOT_RC8_bit
0x0018       [0]    RC8_9_bit
0x0018       [0]    SREN_bit
0x0018       [0]    SPEN_bit
0x0018       [0]    RX9_bit
0x0018       [0]    RC9_bit
0x0018       [0]    ADDEN_bit
0x0018       [0]    OERR_bit
0x0018       [0]    FERR_bit
0x0018       [0]    RX9D_bit
0x0018       [0]    CREN_bit
0x0019       [1]    TXREG
0x001A       [1]    RCREG
0x001B       [1]    CCPR2L
0x001B       [2]    CCPR2
0x001C       [1]    CCPR2H
0x001D       [1]    CCP2CON
0x001D       [0]    CCP2M0_bit
0x001D       [0]    CCP2M3_bit
0x001D       [0]    CCP2M2_bit
0x001D       [0]    CCP2M1_bit
0x001D       [0]    DC2B0_bit
0x001D       [0]    CCP2X_bit
0x001D       [0]    DC2B1_bit
0x001D       [0]    CCP2Y_bit
0x001E       [1]    ADRESH
0x001F       [0]    CHS3_bit
0x001F       [0]    CHS2_bit
0x001F       [0]    ADCS1_bit
0x001F       [1]    ADCON0
0x001F       [0]    ADCS0_bit
0x001F       [0]    CHS1_bit
0x001F       [0]    GO_bit
0x001F       [0]    CHS0_bit
0x001F       [0]    ADON_bit
0x001F       [0]    GO_DONE_bit
0x001F       [0]    NOT_DONE_bit
0x0021       [2]    _speed2
0x0023       [2]    _speed1
0x0025       [2]    _rotationMode
0x0027       [2]    _speed3
0x0029       [2]    _speed
0x002B       [2]    _value
0x002D       [2]    _search_arr
0x002F       [2]    _TMR0_value
0x0031       [2]    _totFront
0x0033       [2]    _tm1st
0x0035       [2]    _TMR1_value
0x0037       [2]    _tm0st
0x0039       [2]    _clockEncoder
0x003B       [2]    _adcVal1
0x003D       [2]    _adcVal
0x003F       [2]    _totBack
0x0041       [2]    ___DoICPAddr
0x0043      [36]    _sw
0x0067       [1]    ___savePCLATH
0x0068       [1]    ___saveSTATUS
0x0069       [4]    FARG_PWM1_Init_PWM_Freq
0x0069       [4]    FARG_PWM2_Init_PWM_Freq
0x0069       [2]    search_arrow_state_L0
0x006D       [2]    goStraight_left_L0
0x006F       [1]    FARG_ADC_Read_channel
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [0]    NOT_RBPU_bit
0x0081       [0]    INTEDG_bit
0x0081       [0]    T0CS_bit
0x0081       [0]    PS1_bit
0x0081       [0]    PS2_bit
0x0081       [1]    OPTION_REG
0x0081       [0]    PS0_bit
0x0081       [0]    PSA_bit
0x0081       [0]    T0SE_bit
0x0085       [0]    TRISA7_bit
0x0085       [0]    TRISA0_bit
0x0085       [0]    TRISA1_bit
0x0085       [0]    TRISA3_bit
0x0085       [0]    TRISA6_bit
0x0085       [1]    TRISA
0x0085       [0]    TRISA5_bit
0x0085       [0]    TRISA4_bit
0x0085       [0]    TRISA2_bit
0x0086       [0]    TRISB0_bit
0x0086       [1]    TRISB
0x0086       [0]    TRISB5_bit
0x0086       [0]    TRISB7_bit
0x0086       [0]    TRISB1_bit
0x0086       [0]    TRISB2_bit
0x0086       [0]    TRISB6_bit
0x0086       [0]    TRISB4_bit
0x0086       [0]    TRISB3_bit
0x0087       [0]    TRISC0_bit
0x0087       [0]    TRISC1_bit
0x0087       [0]    TRISC5_bit
0x0087       [0]    TRISC4_bit
0x0087       [0]    TRISC6_bit
0x0087       [0]    TRISC7_bit
0x0087       [0]    TRISC3_bit
0x0087       [0]    TRISC2_bit
0x0087       [1]    TRISC
0x0088       [0]    TRISD4_bit
0x0088       [0]    TRISD5_bit
0x0088       [0]    TRISD1_bit
0x0088       [0]    TRISD0_bit
0x0088       [0]    TRISD2_bit
0x0088       [0]    TRISD3_bit
0x0088       [1]    TRISD
0x0088       [0]    TRISD6_bit
0x0088       [0]    TRISD7_bit
0x0089       [0]    TRISE3_bit
0x0089       [1]    TRISE
0x0089       [0]    TRISE2_bit
0x0089       [0]    TRISE1_bit
0x0089       [0]    TRISE0_bit
0x008C       [0]    TMR2IE_bit
0x008C       [1]    PIE1
0x008C       [0]    ADIE_bit
0x008C       [0]    TMR1IE_bit
0x008C       [0]    RCIE_bit
0x008C       [0]    TXIE_bit
0x008C       [0]    CCP1IE_bit
0x008C       [0]    SSPIE_bit
0x008D       [0]    EEIE_bit
0x008D       [0]    C1IE_bit
0x008D       [0]    OSFIE_bit
0x008D       [0]    C2IE_bit
0x008D       [1]    PIE2
0x008D       [0]    CCP2IE_bit
0x008D       [0]    ULPWUIE_bit
0x008D       [0]    BCLIE_bit
0x008E       [0]    NOT_BOR_bit
0x008E       [1]    PCON
0x008E       [0]    NOT_POR_bit
0x008E       [0]    SBOREN_bit
0x008E       [0]    ULPWUE_bit
0x008E       [0]    NOT_BO_bit
0x008F       [0]    HTS_bit
0x008F       [0]    IRCF2_bit
0x008F       [0]    IRCF1_bit
0x008F       [0]    SCS_bit
0x008F       [0]    IRCF0_bit
0x008F       [1]    OSCCON
0x008F       [0]    LTS_bit
0x008F       [0]    OSTS_bit
0x0090       [0]    TUN2_bit
0x0090       [0]    TUN1_bit
0x0090       [0]    TUN0_bit
0x0090       [1]    OSCTUNE
0x0090       [0]    TUN4_bit
0x0090       [0]    TUN3_bit
0x0091       [1]    SSPCON2
0x0091       [0]    RSEN_bit
0x0091       [0]    SEN_bit
0x0091       [0]    ACKSTAT_bit
0x0091       [0]    GCEN_bit
0x0091       [0]    ACKDT_bit
0x0091       [0]    PEN_bit
0x0091       [0]    RCEN_bit
0x0091       [0]    ACKEN_bit
0x0092       [1]    PR2
0x0093       [1]    SSPADD
0x0093       [1]    SSPMSK
0x0093       [1]    MSK
0x0094       [0]    NOT_ADDRESS_bit
0x0094       [0]    NOT_A_bit
0x0094       [0]    D_A_bit
0x0094       [0]    P_bit
0x0094       [0]    DATA_ADDRESS_bit
0x0094       [0]    SMP_bit
0x0094       [1]    SSPSTAT
0x0094       [0]    CKE_bit
0x0094       [0]    I2C_DATA_bit
0x0094       [0]    D_bit
0x0094       [0]    I2C_STOP__bit
0x0094       [0]    R_W_bit
0x0094       [0]    NOT_WRITE_bit
0x0094       [0]    READ_WRITE_bit
0x0094       [0]    BF_bit
0x0094       [0]    UA_bit
0x0094       [0]    R_bit
0x0094       [0]    I2C_START__bit
0x0094       [0]    S_bit
0x0094       [0]    NOT_W_bit
0x0094       [0]    I2C_READ_bit
0x0095       [1]    WPUB
0x0095       [0]    WPUB6_bit
0x0095       [0]    WPUB7_bit
0x0095       [0]    WPUB1_bit
0x0095       [0]    WPUB2_bit
0x0095       [0]    WPUB5_bit
0x0095       [0]    WPUB4_bit
0x0095       [0]    WPUB3_bit
0x0095       [0]    WPUB0_bit
0x0096       [0]    IOCB7_bit
0x0096       [0]    IOCB0_bit
0x0096       [0]    IOCB3_bit
0x0096       [0]    IOCB4_bit
0x0096       [0]    IOCB6_bit
0x0096       [0]    IOCB2_bit
0x0096       [1]    IOCB
0x0096       [0]    IOCB1_bit
0x0096       [0]    IOCB5_bit
0x0097       [0]    VRSS_bit
0x0097       [0]    VR3_bit
0x0097       [0]    VR0_bit
0x0097       [0]    VR1_bit
0x0097       [0]    VR2_bit
0x0097       [1]    VRCON
0x0097       [0]    VROE_bit
0x0097       [0]    VREN_bit
0x0097       [0]    VRR_bit
0x0098       [0]    NOT_TX8_bit
0x0098       [0]    TX9_bit
0x0098       [0]    TRMT_bit
0x0098       [0]    BRGH_bit
0x0098       [0]    SENDB_bit
0x0098       [0]    SYNC_bit
0x0098       [0]    TXEN_bit
0x0098       [1]    TXSTA
0x0098       [0]    TX8_9_bit
0x0098       [0]    TX9D_bit
0x0098       [0]    TXD8_bit
0x0098       [0]    CSRC_bit
0x0099       [0]    BRG4_bit
0x0099       [0]    BRG5_bit
0x0099       [0]    BRG3_bit
0x0099       [0]    BRG2_bit
0x0099       [0]    BRG6_bit
0x0099       [1]    SPBRG
0x0099       [0]    BRG0_bit
0x0099       [0]    BRG7_bit
0x0099       [0]    BRG1_bit
0x009A       [0]    BRG13_bit
0x009A       [0]    BRG12_bit
0x009A       [0]    BRG15_bit
0x009A       [0]    BRG14_bit
0x009A       [0]    BRG11_bit
0x009A       [0]    BRG9_bit
0x009A       [0]    BRG8_bit
0x009A       [0]    BRG10_bit
0x009A       [1]    SPBRGH
0x009B       [0]    PDC4_bit
0x009B       [0]    PDC2_bit
0x009B       [0]    PDC1_bit
0x009B       [0]    PDC3_bit
0x009B       [1]    PWM1CON
0x009B       [0]    PDC5_bit
0x009B       [0]    PDC0_bit
0x009B       [0]    PDC6_bit
0x009B       [0]    PRSEN_bit
0x009C       [1]    ECCPAS
0x009C       [0]    PSSBD0_bit
0x009C       [0]    ECCPAS1_bit
0x009C       [0]    ECCPASE_bit
0x009C       [0]    PSSAC1_bit
0x009C       [0]    ECCPAS2_bit
0x009C       [0]    PSSBD1_bit
0x009C       [0]    ECCPAS0_bit
0x009C       [0]    PSSAC0_bit
0x009D       [0]    STRSYNC_bit
0x009D       [0]    STRD_bit
0x009D       [0]    STRB_bit
0x009D       [1]    PSTRCON
0x009D       [0]    STRC_bit
0x009D       [0]    STRA_bit
0x009E       [1]    ADRESL
0x009F       [1]    ADCON1
0x009F       [0]    VCFG0_bit
0x009F       [0]    ADFM_bit
0x009F       [0]    VCFG1_bit
0x00A0      [14]    _text
0x00AE       [2]    goStraight_right_L0
0x00B0       [1]    FARG_PWM1_Set_Duty_new_duty
0x00B0       [1]    FARG_PWM2_Set_Duty_new_duty
0x0105       [1]    WDTCON
0x0105       [0]    WDTPS1_bit
0x0105       [0]    SWDTEN_bit
0x0105       [0]    WDTPS3_bit
0x0105       [0]    WDTPS0_bit
0x0105       [0]    WDTPS2_bit
0x0107       [0]    C1CH0_bit
0x0107       [1]    CM1CON0
0x0107       [0]    C1POL_bit
0x0107       [0]    C1OUT_bit
0x0107       [0]    C1ON_bit
0x0107       [0]    C1R_bit
0x0107       [0]    C1OE_bit
0x0107       [0]    C1CH1_bit
0x0108       [0]    C2POL_bit
0x0108       [0]    C2ON_bit
0x0108       [0]    C2OE_bit
0x0108       [0]    C2CH0_bit
0x0108       [0]    C2CH1_bit
0x0108       [0]    C2OUT_bit
0x0108       [0]    C2R_bit
0x0108       [1]    CM2CON0
0x0109       [0]    MC1OUT_bit
0x0109       [0]    C1RSEL_bit
0x0109       [1]    CM2CON1
0x0109       [0]    T1GSS_bit
0x0109       [0]    MC2OUT_bit
0x0109       [0]    C2SYNC_bit
0x0109       [0]    C2RSEL_bit
0x010C       [1]    EEDATA
0x010C       [1]    EEDAT
0x010D       [1]    EEADR
0x010E       [1]    EEDATH
0x010F       [1]    EEADRH
0x0185       [0]    SR0_bit
0x0185       [0]    C2REN_bit
0x0185       [0]    C1SEN_bit
0x0185       [0]    PULSR_bit
0x0185       [0]    FVREN_bit
0x0185       [1]    SRCON
0x0185       [0]    PULSS_bit
0x0185       [0]    SR1_bit
0x0187       [0]    SCKP_bit
0x0187       [0]    RCIDL_bit
0x0187       [0]    BRG16_bit
0x0187       [0]    ABDEN_bit
0x0187       [0]    WUE_bit
0x0187       [0]    ABDOVF_bit
0x0187       [1]    BAUDCTL
0x0188       [0]    ANS4_bit
0x0188       [0]    ANS5_bit
0x0188       [0]    ANS3_bit
0x0188       [0]    ANS0_bit
0x0188       [0]    ANS1_bit
0x0188       [0]    ANS2_bit
0x0188       [1]    ANSEL
0x0188       [0]    ANS7_bit
0x0188       [0]    ANS6_bit
0x0189       [0]    ANS10_bit
0x0189       [0]    ANS11_bit
0x0189       [0]    ANS8_bit
0x0189       [0]    ANS9_bit
0x0189       [0]    ANS12_bit
0x0189       [1]    ANSELH
0x0189       [0]    ANS13_bit
0x018C       [0]    WREN_bit
0x018C       [0]    RD_bit
0x018C       [0]    WR_bit
0x018C       [0]    WRERR_bit
0x018C       [1]    EECON1
0x018C       [0]    EEPGD_bit
0x018D       [1]    EECON2
//** Label List: ** 
//----------------------------------------------
  L_sensorRead0
  L_sensorRead1
  L_sensorRead2
  L_sensorRead3
  L_sensorRead4
  L_sensorRead5
  L_sensorRead6
  L_sensorRead7
  L_sensorRead8
  L_sensorRead9
  L_sensorRead10
  L_sensorRead11
  L_sensorRead12
  L_sensorRead13
  L_sensorRead14
  L_sensorRead15
  L_sensorRead16
  L_sensorRead17
  L_sensorRead18
  L_sensorRead19
  L_sensorRead20
  L_sensorRead21
  L_sensorRead22
  L_sensorRead23
  L_sensorRead24
  L_sensorRead25
  L_sensorRead26
  L_sensorRead27
  L_printToLcd28
  L_printToLcd29
  L_printToLcd30
  L_lineFollow31
  L_lineFollow32
  L_lineFollow33
  L_lineFollow34
  L_lineFollow35
  L_lineFollow36
  L_lineFollow37
  L_lineFollow38
  L_lineFollow39
  L_lineFollow40
  L_lineFollow41
  L_lineFollow42
  L_lineFollow43
  L_lineFollow44
  L_lineFollow45
  L_lineFollow46
  L_lineFollow47
  L_lineFollow48
  L_lineFollow49
  L_lineFollow50
  L_lineFollow51
  L_lineFollow52
  L_lineFollow53
  L_lineFollow54
  L_lineFollow55
  L_lineFollow56
  L_lineFollow57
  L_lineFollow58
  L_lineFollow59
  L_lineFollow60
  L_lineFollow61
  L_lineFollow62
  L_lineFollow63
  L_lineFollow64
  L_lineFollow65
  L_lineFollow66
  L_lineFollow67
  L_lineFollow68
  L_lineFollow69
  L_lineFollow70
  L_lineFollow71
  L_lineFollow72
  L_lineFollow73
  L_lineFollow74
  L_lineFollow75
  L_lineFollow76
  L_lineFollow77
  L_lineFollow78
  L_lineFollow79
  L_lineFollow80
  L_lineFollow81
  L_lineFollow82
  L_lineFollow83
  L_lineFollow84
  L_lineFollow85
  L_lineFollow86
  L_lineFollow87
  L_lineFollow88
  L_lineFollow89
  L_lineFollow90
  L_lineFollow91
  L_lineFollow92
  L_lineFollow93
  L_lineFollow94
  L_lineFollow95
  L_lineFollow96
  L_lineFollow97
  L_lineFollow98
  L_lineFollow99
  L_lineFollow100
  L_lineFollow101
  L_lineFollow102
  L_lineFollow103
  L_lineFollow104
  L_lineFollow105
  L_lineFollow106
  L_lineFollow107
  L_lineFollow108
  L_lineFollow109
  L_lineFollow110
  L_lineFollow111
  L_SemSmallFollow112
  L_SemSmallFollow113
  L_SemSmallFollow114
  L_SemSmallFollow115
  L_SemSmallFollow116
  L_SemSmallFollow117
  L_SemSmallFollow118
  L_SemSmallFollow119
  L_SemSmallFollow120
  L_SemSmallFollow121
  L_SemSmallFollow122
  L_SemSmallFollow123
  L_SemSmallFollow124
  L_SemSmallFollow125
  L_SemSmallFollow126
  L_SemSmallFollow127
  L_SemSmallFollow128
  L_SemSmallFollow129
  L_SemSmallFollow130
  L_SemSmallFollow131
  L_SemSmallFollow132
  L_SemSmallFollow133
  L_SemSmallFollow134
  L_SemSmallFollow135
  L_SemSmallFollow136
  L_SemSmallFollow137
  L_SemSmallFollow138
  L_SemSmallFollow139
  L_SemSmallFollow140
  L_SemSmallFollow141
  L_SemSmallFollow142
  L_SemSmallFollow143
  L_SemSmallFollow144
  L_SemSmallFollow145
  L_SemSmallFollow146
  L_SemSmallFollow147
  L_SemSmallFollow148
  L_SemSmallFollow149
  L_SemSmallFollow150
  L_SemSmallFollow151
  L_SemSmallFollow152
  L_SemSmallFollow153
  L_SemSmallFollow154
  L_SemSmallFollow155
  L_SemSmallFollow156
  L_SemSmallFollow157
  L_SemSmallFollow158
  L_SemSmallFollow159
  L_encoder160
  L_encoder161
  L_encoder162
  L_encoder163
  L_encoder164
  L_encoder165
  L_encoder166
  L_encoder167
  L_encoder168
  L_encoder169
  L_encoder170
  L_goStraight171
  L_goStraight172
  L_goStraight173
  L_goStraight174
  L_goStraight175
  L_goStraight176
  L_goStraight177
  L_goStraight178
  L_goStraight179
  L_goStraight180
  L_goStraight181
  L_goStraight182
  L_goStraight183
  L_goStraight2184
  L_goStraight2185
  L_goStraight2186
  L_goStraight2187
  L_goStraight2188
  L_goStraight2189
  L_goStraight2190
  L_goStraight2191
  L_goStraight2192
  L_goStraight2193
  L_tuneToMiddle194
  L_tuneToMiddle195
  L_tuneToMiddle196
  L_tuneToMiddle197
  L_tuneToMiddle198
  L_tuneToMiddle199
  L_tuneToMiddle200
  L_tuneToMiddle201
  L_tuneToMiddle202
  L_tuneToMiddle203
  L_tuneToMiddle204
  L_tuneToMiddle205
  L_tuneToMiddle206
  L_tuneToMiddle207
  L_tuneToMiddle208
  L_tuneToMiddle209
  L_printClockEncoders210
  L_printClockEncoders211
  L_printClockEncoders212
  L_followArrow213
  L_followArrow214
  L_followArrow215
  L_followArrow216
  L_followArrow217
  L_followArrow218
  L_followArrow219
  L_followArrow220
  L_followArrow221
  L_followArrow222
  L_followArrow223
  L_followArrow224
  L_followArrow225
  L_followArrow226
  L_followArrow227
  L_followArrow228
  L_followArrow229
  L_followArrow230
  L_followArrow231
  L_followArrow232
  L_followArrow233
  L_followArrow234
  L_followArrow235
  L_followArrow236
  L_followArrow237
  L_followArrow238
  L_followArrow239
  L_followArrow240
  L_followArrow241
  L_followArrow242
  L_followArrow243
  L_followArrow244
  L_interrupt245
  L_pulseIn1246
  L_pulseIn1247
  L_pulseIn1248
  L_pulseIn1249
  L_pulseIn1250
  L_pulseIn1251
  L_pulseIn1252
  L_pulseIn1253
  L_pulseIn2254
  L_pulseIn2255
  L_pulseIn2256
  L_pulseIn2257
  L_pulseIn2258
  L_pulseIn2259
  L_pulseIn2260
  L_pulseIn2261
  L_pulseIn3262
  L_pulseIn3263
  L_pulseIn3264
  L_pulseIn3265
  L_pulseIn3266
  L_pulseIn3267
  L_pulseIn3268
  L_pulseIn3269
  L_getDis1270
  L_getDis1271
  L_getDis1272
  L_getDis2273
  L_getDis2274
  L_getDis2275
  L_getDis3276
  L_getDis3277
  L_getDis3278
  L_NidegL279
  L_NidegL280
  L_NidegL281
  L_NidegR282
  L_NidegR283
  L_NidegR284
  L_moFEnc285
  L_moFEnc286
  L_moFEnc287
  L_turnToPoint288
  L_turnToPoint289
  L_turnToPoint290
  L_turnToPoint291
  L_turnToPoint292
  L_turnToPoint293
  L_turnToPoint294
  L_turnToPoint295
  L_turnToPoint296
  L_turnToPoint297
  L_turnToPoint298
  L_turnToPoint299
  L_turnToPoint300
  L_turnToPoint301
  L_turnToPoint302
  L_turnToPoint303
  L_turnToPoint304
  L_turnToPoint305
  L_avoidObstacles306
  L_avoidObstacles307
  L_avoidObstacles308
  L_avoidObstacles309
  L_avoidObstacles310
  L_avoidObstacles311
  L_avoidObstacles312
  L_avoidObstacles313
  L_avoidObstacles314
  L_avoidObstacles315
  L_avoidObstacles316
  L_avoidObstacles317
  L_avoidObstacles318
  L_avoidObstacles319
  L_avoidObstacles320
  L_avoidObstacles321
  L_avoidObstacles322
  L_avoidObstacles323
  L_avoidObstacles324
  L_avoidObstacles325
  L_avoidObstacles326
  L_avoidObstacles327
  L_avoidObstacles328
  L_avoidObstacles329
  L_avoidObstacles330
  L_avoidObstacles331
  L_avoidObstacles332
  L_avoidObstacles333
  L_avoidObstacles334
  L_avoidObstacles335
  L_avoidObstacles336
  L_avoidObstacles337
  L_avoidObstacles338
  L_avoidObstacles339
  L_avoidObstacles340
  L_avoidObstacles341
  L_avoidObstacles342
  L_avoidObstacles343
  L_avoidObstacles344
  L_avoidObstacles345
  L_avoidObstacles346
  L_avoidObstacles347
  L_avoidObstacles348
  L_avoidObstacles349
  L_avoidObstacles350
  L_avoidObstacles351
  L_avoidObstacles352
  L_avoidObstacles353
  L_avoidObstacles354
  L_avoidObstacles355
  L_avoidObstacles356
  L_avoidObstacles357
  L_avoidObstacles358
  L_avoidObstacles359
  L_search_arrow360
  L_search_arrow361
  L_search_arrow362
  L_search_arrow363
  L_search_arrow364
  L_search_arrow365
  L_search_arrow366
  L_search_arrow367
  L_search_arrow368
  L_search_arrow369
  L_search_arrow370
  L_search_arrow371
  L_search_arrow372
  L_search_arrow373
  L_search_arrow374
  L_search_arrow375
  L_search_arrow376
  L_search_arrow377
  L_search_arrow378
  L_search_arrow379
  L_search_arrow380
  L_search_arrow381
  L_search_arrow382
  L_search_arrow383
  L_search_arrow384
  L_search_arrow385
  L_search_arrow386
  L_search_arrow387
  L_search_arrow388
  L_search_arrow389
  L_search_arrow390
  L_search_arrow391
  L_search_arrow392
  L_search_arrow393
  L_search_arrow394
  L_search_arrow395
  L_search_arrow396
  L_search_arrow397
  L_search_arrow398
  L_search_arrow399
  L_search_arrow400
  L_search_arrow401
  L_search_arrow402
  L_search_arrow403
  L_search_arrow404
  L_search_arrow405
  L_search_arrow406
  L_search_arrow407
  L_search_arrow408
  L_search_arrow409
  L_search_arrow410
  L_search_arrow411
  L_search_arrow412
  L_search_arrow413
  L_search_arrow414
  L_search_arrow415
  L_search_arrow416
  L_search_arrow417
  L_search_arrow418
  L_search_arrow419
  L_search_arrow420
  L_search_arrow421
  L_search_arrow422
  L_main423
  L_main424
  L__lineFollow425
  L__lineFollow426
  L__lineFollow427
  L__lineFollow428
  L__lineFollow429
  L__lineFollow430
  L__lineFollow431
  L__lineFollow432
  L__lineFollow433
  L__lineFollow434
  L__lineFollow435
  L__lineFollow436
  L__lineFollow437
  L__lineFollow438
  L__lineFollow439
  L__lineFollow440
  L__lineFollow441
  L__lineFollow442
  L__lineFollow443
  L__lineFollow444
  L__lineFollow445
  L__lineFollow446
  L__SemSmallFollow447
  L__SemSmallFollow448
  L__SemSmallFollow449
  L__SemSmallFollow450
  L__SemSmallFollow451
  L__SemSmallFollow452
  L__SemSmallFollow453
  L__SemSmallFollow454
  L__SemSmallFollow455
  L__SemSmallFollow456
  L__SemSmallFollow457
  L__SemSmallFollow458
  L__encoder459
  L__encoder460
  L__goStraight461
  L__goStraight2462
  L__goStraight2463
  L__tuneToMiddle464
  L__avoidObstacles465
  L__avoidObstacles466
  L__avoidObstacles467
  L__avoidObstacles468
  L__avoidObstacles469
  L__avoidObstacles470
  L__avoidObstacles471
  L__search_arrow472
  L__search_arrow473
  L__search_arrow474
  L__search_arrow475
  L__search_arrow476
  L__search_arrow477
  L__search_arrow478
  L__search_arrow479
  _rotateLeft
  _rotateRight
  _moveF
  _moveB
  _forward
  _backward
  _leftHardTurn
  _RightHardTurn
  _leftTurn
  _RightTurn
  _leftSoftTurn
  _rightSoftTurn
  _stopAll
  _leftT
  _rightT
  _sensorRead
  L__sensorRead480
  L__sensorRead481
  L__sensorRead482
  L__sensorRead483
  L__sensorRead484
  L__sensorRead485
  L__sensorRead486
  L__sensorRead487
  L__sensorRead488
  L__sensorRead489
  L__sensorRead490
  L__sensorRead491
  L__sensorRead492
  L__sensorRead493
  _printToLcd
  L__printToLcd494
  _bin_deci
  L__bin_deci495
  L__bin_deci496
  L__bin_deci497
  L__bin_deci498
  L__bin_deci499
  L__bin_deci500
  L__bin_deci501
  L__bin_deci502
  L__bin_deci503
  L__bin_deci504
  _lineFollow
  L__lineFollow505
  L__lineFollow506
  L__lineFollow507
  L__lineFollow508
  L__lineFollow509
  L__lineFollow510
  L__lineFollow511
  L__lineFollow512
  L__lineFollow513
  L__lineFollow514
  L__lineFollow515
  L__lineFollow516
  L__lineFollow517
  L__lineFollow518
  L__lineFollow519
  L__lineFollow520
  L__lineFollow521
  L__lineFollow522
  L__lineFollow523
  L__lineFollow524
  L__lineFollow525
  L__lineFollow526
  L__lineFollow527
  L__lineFollow528
  L__lineFollow529
  L__lineFollow530
  L__lineFollow531
  L__lineFollow532
  L__lineFollow533
  L__lineFollow534
  L__lineFollow535
  L__lineFollow536
  L__lineFollow537
  L__lineFollow538
  L__lineFollow539
  L__lineFollow540
  L__lineFollow541
  L__lineFollow542
  L__lineFollow543
  L__lineFollow544
  L__lineFollow545
  L__lineFollow546
  L__lineFollow547
  L__lineFollow548
  L__lineFollow549
  L__lineFollow550
  L__lineFollow551
  L__lineFollow552
  L__lineFollow553
  L__lineFollow554
  _SemSmallFollow
  L__SemSmallFollow555
  L__SemSmallFollow556
  L__SemSmallFollow557
  L__SemSmallFollow558
  L__SemSmallFollow559
  L__SemSmallFollow560
  L__SemSmallFollow561
  L__SemSmallFollow562
  L__SemSmallFollow563
  L__SemSmallFollow564
  L__SemSmallFollow565
  L__SemSmallFollow566
  L__SemSmallFollow567
  L__SemSmallFollow568
  L__SemSmallFollow569
  L__SemSmallFollow570
  L__SemSmallFollow571
  L__SemSmallFollow572
  L__SemSmallFollow573
  L__SemSmallFollow574
  L__SemSmallFollow575
  L__SemSmallFollow576
  L__SemSmallFollow577
  L__SemSmallFollow578
  L__SemSmallFollow579
  L__SemSmallFollow580
  L__SemSmallFollow581
  L__SemSmallFollow582
  L__SemSmallFollow583
  L__SemSmallFollow584
  L__SemSmallFollow585
  L__SemSmallFollow586
  L__SemSmallFollow587
  L__SemSmallFollow588
  L__SemSmallFollow589
  L__SemSmallFollow590
  L__SemSmallFollow591
  L__SemSmallFollow592
  L__SemSmallFollow593
  L__SemSmallFollow594
  L__SemSmallFollow595
  L__SemSmallFollow596
  L__SemSmallFollow597
  L__SemSmallFollow598
  L__SemSmallFollow599
  L__SemSmallFollow600
  L__SemSmallFollow601
  L__SemSmallFollow602
  L__SemSmallFollow603
  L__SemSmallFollow604
  L__SemSmallFollow605
  L__SemSmallFollow606
  L__SemSmallFollow607
  L__SemSmallFollow608
  L__SemSmallFollow609
  L__SemSmallFollow610
  L__SemSmallFollow611
  L__SemSmallFollow612
  L__SemSmallFollow613
  L__SemSmallFollow614
  _encoder
  L__encoder615
  L__encoder616
  L__encoder617
  L__encoder618
  _initEncoder
  _goStraight
  L__goStraight619
  L__goStraight620
  L__goStraight621
  L__goStraight622
  L__goStraight623
  L__goStraight624
  L__goStraight625
  _goStraight2
  L__goStraight2626
  L__goStraight2627
  L__goStraight2628
  L__goStraight2629
  L__goStraight2630
  L__goStraight2631
  _tuneToMiddle
  L__tuneToMiddle632
  L__tuneToMiddle633
  L__tuneToMiddle634
  L__tuneToMiddle635
  L__tuneToMiddle636
  L__tuneToMiddle637
  L__tuneToMiddle638
  L__tuneToMiddle639
  L__tuneToMiddle640
  L__tuneToMiddle641
  _printClockEncoders
  L__printClockEncoders642
  L__printClockEncoders643
  _getFrontDecimal
  L__getFrontDecimal644
  L__getFrontDecimal645
  L__getFrontDecimal646
  L__getFrontDecimal647
  L__getFrontDecimal648
  L__getFrontDecimal649
  L__getFrontDecimal650
  L__getFrontDecimal651
  L__getFrontDecimal652
  L__getFrontDecimal653
  _getBackDecimal
  L__getBackDecimal654
  L__getBackDecimal655
  L__getBackDecimal656
  L__getBackDecimal657
  _followArrow
  L__followArrow658
  L__followArrow659
  L__followArrow660
  L__followArrow661
  L__followArrow662
  L__followArrow663
  L__followArrow664
  L__followArrow665
  L__followArrow666
  L__followArrow667
  L__followArrow668
  L__followArrow669
  L__followArrow670
  L__followArrow671
  L__followArrow672
  L__followArrow673
  L__followArrow674
  _interrupt
  L__interrupt675
  _init_timer
  _pulseIn1
  L__pulseIn1676
  L__pulseIn1677
  _pulseIn2
  L__pulseIn2678
  L__pulseIn2679
  _pulseIn3
  L__pulseIn3680
  L__pulseIn3681
  _getDis1
  _getDis2
  _getDis3
  _NidegL
  L__NidegL682
  _NidegR
  L__NidegR683
  _moFEnc
  L__moFEnc684
  _getCompass
  _turnToPoint
  L__turnToPoint685
  L__turnToPoint686
  L__turnToPoint687
  L__turnToPoint688
  L__turnToPoint689
  L__turnToPoint690
  L__turnToPoint691
  _avoidObstacles
  L__avoidObstacles692
  L__avoidObstacles693
  L__avoidObstacles694
  L__avoidObstacles695
  L__avoidObstacles696
  L__avoidObstacles697
  L__avoidObstacles698
  L__avoidObstacles699
  L__avoidObstacles700
  L__avoidObstacles701
  L__avoidObstacles702
  L__avoidObstacles703
  L__avoidObstacles704
  L__avoidObstacles705
  L__avoidObstacles706
  L__avoidObstacles707
  L__avoidObstacles708
  L__avoidObstacles709
  L__avoidObstacles710
  L__avoidObstacles711
  L__avoidObstacles712
  L__avoidObstacles713
  L__avoidObstacles714
  L__avoidObstacles715
  L__avoidObstacles716
  L__avoidObstacles717
  L__avoidObstacles718
  L__avoidObstacles719
  L__avoidObstacles720
  L__avoidObstacles721
  _speedChange_test
  _search_arrow
  L__search_arrow722
  L__search_arrow723
  L__search_arrow724
  L__search_arrow725
  L__search_arrow726
  L__search_arrow727
  L__search_arrow728
  L__search_arrow729
  L__search_arrow730
  L__search_arrow731
  L__search_arrow732
  L__search_arrow733
  L__search_arrow734
  L__search_arrow735
  L__search_arrow736
  L__search_arrow737
  L__search_arrow738
  L__search_arrow739
  L__search_arrow740
  L__search_arrow741
  L__search_arrow742
  L__search_arrow743
  L__search_arrow744
  L__search_arrow745
  L__search_arrow746
  L__search_arrow747
  L__search_arrow748
  L__search_arrow749
  L__search_arrow750
  L__search_arrow751
  L__search_arrow752
  L__search_arrow753
  L__search_arrow754
  L__search_arrow755
  L__search_arrow756
  _main
  L_ADC_Read0
  L_ADC_Read1
  _ADC_Read
  L_Delay_10us0
  L_Delay_22us1
  L_Delay_50us2
  L_Delay_80us3
  L_Delay_500us4
  L_Delay_5500us5
  L_Delay_8ms6
  L_Delay_5ms7
  L_Delay_100ms8
  L_Delay_1sec9
  L_boot16_Delay_5ms10
  L_Delay_Cyc11
  L_Delay_Cyc12
  L_VDelay_ms13
  L_VDelay_ms14
  L_VDelay_ms15
  L_VDelay_Advanced_ms16
  L_VDelay_Advanced_ms17
  L_VDelay_Advanced_ms18
  _Get_Fosc_kHz
  _Delay_1us
  _Delay_10us
  _Delay_22us
  _Delay_50us
  _Delay_80us
  _Delay_500us
  _Delay_5500us
  _Delay_8ms
  _Delay_5ms
  _Delay_100ms
  _Delay_1sec
  _boot16_Delay_5ms
  _Delay_Cyc
  _VDelay_ms
  L__VDelay_ms19
  L__VDelay_ms20
  L__VDelay_ms21
  _VDelay_Advanced_ms
  L__VDelay_Advanced_ms22
  L__VDelay_Advanced_ms23
  L__VDelay_Advanced_ms24
  L_Div_16x16_S0
  L_Div_16x16_S1
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  L_Div_32x32_S6
  L_Div_32x32_S7
  L_Div_32x32_S8
  L_Div_32x32_S9
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  _Mul_8x8_U
  _Mul_16x16_U
  _Div_8x8_U
  _Div_16x16_U
  _Mul_8x8_S
  _Mul_16x16_S
  _Div_16x16_S_L
  _Div_16x16_S
  _Div_8x8_S
  _SDIV3232L
  _COMFREM
  _Div_32x32_S
  _Div_32x32_U
  _Mul_32x32_U
  _Mul_32x32_S
  _PWM2_Init
  _PWM2_Set_Duty
  L__PWM2_Set_Duty0
  L__PWM2_Set_Duty1
  L__PWM2_Set_Duty2
  L__PWM2_Set_Duty3
  _PWM2_Start
  _PWM2_Stop
  _PWM1_Init
  _PWM1_Set_Duty
  L__PWM1_Set_Duty4
  L__PWM1_Set_Duty5
  L__PWM1_Set_Duty6
  L__PWM1_Set_Duty7
  _PWM1_Start
  _PWM1_Stop
  _CC2D_Loop1
  _____DoICP
  _____DoIFC
  ___CC2DW
  _Swap
  L_sensorRead0
  L_sensorRead1
  L_sensorRead2
  L_sensorRead3
  L_sensorRead4
  L_sensorRead5
  L_sensorRead6
  L_sensorRead7
  L_sensorRead8
  L_sensorRead9
  L_sensorRead10
  L_sensorRead11
  L_sensorRead12
  L_sensorRead13
  L_sensorRead14
  L_sensorRead15
  L_sensorRead16
  L_sensorRead17
  L_sensorRead18
  L_sensorRead19
  L_sensorRead20
  L_sensorRead21
  L_sensorRead22
  L_sensorRead23
  L_sensorRead24
  L_sensorRead25
  L_sensorRead26
  L_sensorRead27
  L_printToLcd28
  L_printToLcd29
  L_printToLcd30
  L_lineFollow31
  L_lineFollow32
  L_lineFollow33
  L_lineFollow34
  L_lineFollow35
  L_lineFollow36
  L_lineFollow37
  L_lineFollow38
  L_lineFollow39
  L_lineFollow40
  L_lineFollow41
  L_lineFollow42
  L_lineFollow43
  L_lineFollow44
  L_lineFollow45
  L_lineFollow46
  L_lineFollow47
  L_lineFollow48
  L_lineFollow49
  L_lineFollow50
  L_lineFollow51
  L_lineFollow52
  L_lineFollow53
  L_lineFollow54
  L_lineFollow55
  L_lineFollow56
  L_lineFollow57
  L_lineFollow58
  L_lineFollow59
  L_lineFollow60
  L_lineFollow61
  L_lineFollow62
  L_lineFollow63
  L_lineFollow64
  L_lineFollow65
  L_lineFollow66
  L_lineFollow67
  L_lineFollow68
  L_lineFollow69
  L_lineFollow70
  L_lineFollow71
  L_lineFollow72
  L_lineFollow73
  L_lineFollow74
  L_lineFollow75
  L_lineFollow76
  L_lineFollow77
  L_lineFollow78
  L_lineFollow79
  L_lineFollow80
  L_lineFollow81
  L_lineFollow82
  L_lineFollow83
  L_lineFollow84
  L_lineFollow85
  L_lineFollow86
  L_lineFollow87
  L_lineFollow88
  L_lineFollow89
  L_lineFollow90
  L_lineFollow91
  L_lineFollow92
  L_lineFollow93
  L_lineFollow94
  L_lineFollow95
  L_lineFollow96
  L_lineFollow97
  L_lineFollow98
  L_lineFollow99
  L_lineFollow100
  L_lineFollow101
  L_lineFollow102
  L_lineFollow103
  L_lineFollow104
  L_lineFollow105
  L_lineFollow106
  L_lineFollow107
  L_lineFollow108
  L_lineFollow109
  L_lineFollow110
  L_lineFollow111
  L_SemSmallFollow112
  L_SemSmallFollow113
  L_SemSmallFollow114
  L_SemSmallFollow115
  L_SemSmallFollow116
  L_SemSmallFollow117
  L_SemSmallFollow118
  L_SemSmallFollow119
  L_SemSmallFollow120
  L_SemSmallFollow121
  L_SemSmallFollow122
  L_SemSmallFollow123
  L_SemSmallFollow124
  L_SemSmallFollow125
  L_SemSmallFollow126
  L_SemSmallFollow127
  L_SemSmallFollow128
  L_SemSmallFollow129
  L_SemSmallFollow130
  L_SemSmallFollow131
  L_SemSmallFollow132
  L_SemSmallFollow133
  L_SemSmallFollow134
  L_SemSmallFollow135
  L_SemSmallFollow136
  L_SemSmallFollow137
  L_SemSmallFollow138
  L_SemSmallFollow139
  L_SemSmallFollow140
  L_SemSmallFollow141
  L_SemSmallFollow142
  L_SemSmallFollow143
  L_SemSmallFollow144
  L_SemSmallFollow145
  L_SemSmallFollow146
  L_SemSmallFollow147
  L_SemSmallFollow148
  L_SemSmallFollow149
  L_SemSmallFollow150
  L_SemSmallFollow151
  L_SemSmallFollow152
  L_SemSmallFollow153
  L_SemSmallFollow154
  L_SemSmallFollow155
  L_SemSmallFollow156
  L_SemSmallFollow157
  L_SemSmallFollow158
  L_SemSmallFollow159
  L_encoder160
  L_encoder161
  L_encoder162
  L_encoder163
  L_encoder164
  L_encoder165
  L_encoder166
  L_encoder167
  L_encoder168
  L_encoder169
  L_encoder170
  L_goStraight171
  L_goStraight172
  L_goStraight173
  L_goStraight174
  L_goStraight175
  L_goStraight176
  L_goStraight177
  L_goStraight178
  L_goStraight179
  L_goStraight180
  L_goStraight181
  L_goStraight182
  L_goStraight183
  L_goStraight2184
  L_goStraight2185
  L_goStraight2186
  L_goStraight2187
  L_goStraight2188
  L_goStraight2189
  L_goStraight2190
  L_goStraight2191
  L_goStraight2192
  L_goStraight2193
  L_tuneToMiddle194
  L_tuneToMiddle195
  L_tuneToMiddle196
  L_tuneToMiddle197
  L_tuneToMiddle198
  L_tuneToMiddle199
  L_tuneToMiddle200
  L_tuneToMiddle201
  L_tuneToMiddle202
  L_tuneToMiddle203
  L_tuneToMiddle204
  L_tuneToMiddle205
  L_tuneToMiddle206
  L_tuneToMiddle207
  L_tuneToMiddle208
  L_tuneToMiddle209
  L_printClockEncoders210
  L_printClockEncoders211
  L_printClockEncoders212
  L_followArrow213
  L_followArrow214
  L_followArrow215
  L_followArrow216
  L_followArrow217
  L_followArrow218
  L_followArrow219
  L_followArrow220
  L_followArrow221
  L_followArrow222
  L_followArrow223
  L_followArrow224
  L_followArrow225
  L_followArrow226
  L_followArrow227
  L_followArrow228
  L_followArrow229
  L_followArrow230
  L_followArrow231
  L_followArrow232
  L_followArrow233
  L_followArrow234
  L_followArrow235
  L_followArrow236
  L_followArrow237
  L_followArrow238
  L_followArrow239
  L_followArrow240
  L_followArrow241
  L_followArrow242
  L_followArrow243
  L_followArrow244
  L_interrupt245
  L_pulseIn1246
  L_pulseIn1247
  L_pulseIn1248
  L_pulseIn1249
  L_pulseIn1250
  L_pulseIn1251
  L_pulseIn1252
  L_pulseIn1253
  L_pulseIn2254
  L_pulseIn2255
  L_pulseIn2256
  L_pulseIn2257
  L_pulseIn2258
  L_pulseIn2259
  L_pulseIn2260
  L_pulseIn2261
  L_pulseIn3262
  L_pulseIn3263
  L_pulseIn3264
  L_pulseIn3265
  L_pulseIn3266
  L_pulseIn3267
  L_pulseIn3268
  L_pulseIn3269
  L_getDis1270
  L_getDis1271
  L_getDis1272
  L_getDis2273
  L_getDis2274
  L_getDis2275
  L_getDis3276
  L_getDis3277
  L_getDis3278
  L_NidegL279
  L_NidegL280
  L_NidegL281
  L_NidegR282
  L_NidegR283
  L_NidegR284
  L_moFEnc285
  L_moFEnc286
  L_moFEnc287
  L_turnToPoint288
  L_turnToPoint289
  L_turnToPoint290
  L_turnToPoint291
  L_turnToPoint292
  L_turnToPoint293
  L_turnToPoint294
  L_turnToPoint295
  L_turnToPoint296
  L_turnToPoint297
  L_turnToPoint298
  L_turnToPoint299
  L_turnToPoint300
  L_turnToPoint301
  L_turnToPoint302
  L_turnToPoint303
  L_turnToPoint304
  L_turnToPoint305
  L_avoidObstacles306
  L_avoidObstacles307
  L_avoidObstacles308
  L_avoidObstacles309
  L_avoidObstacles310
  L_avoidObstacles311
  L_avoidObstacles312
  L_avoidObstacles313
  L_avoidObstacles314
  L_avoidObstacles315
  L_avoidObstacles316
  L_avoidObstacles317
  L_avoidObstacles318
  L_avoidObstacles319
  L_avoidObstacles320
  L_avoidObstacles321
  L_avoidObstacles322
  L_avoidObstacles323
  L_avoidObstacles324
  L_avoidObstacles325
  L_avoidObstacles326
  L_avoidObstacles327
  L_avoidObstacles328
  L_avoidObstacles329
  L_avoidObstacles330
  L_avoidObstacles331
  L_avoidObstacles332
  L_avoidObstacles333
  L_avoidObstacles334
  L_avoidObstacles335
  L_avoidObstacles336
  L_avoidObstacles337
  L_avoidObstacles338
  L_avoidObstacles339
  L_avoidObstacles340
  L_avoidObstacles341
  L_avoidObstacles342
  L_avoidObstacles343
  L_avoidObstacles344
  L_avoidObstacles345
  L_avoidObstacles346
  L_avoidObstacles347
  L_avoidObstacles348
  L_avoidObstacles349
  L_avoidObstacles350
  L_avoidObstacles351
  L_avoidObstacles352
  L_avoidObstacles353
  L_avoidObstacles354
  L_avoidObstacles355
  L_avoidObstacles356
  L_avoidObstacles357
  L_avoidObstacles358
  L_avoidObstacles359
  L_search_arrow360
  L_search_arrow361
  L_search_arrow362
  L_search_arrow363
  L_search_arrow364
  L_search_arrow365
  L_search_arrow366
  L_search_arrow367
  L_search_arrow368
  L_search_arrow369
  L_search_arrow370
  L_search_arrow371
  L_search_arrow372
  L_search_arrow373
  L_search_arrow374
  L_search_arrow375
  L_search_arrow376
  L_search_arrow377
  L_search_arrow378
  L_search_arrow379
  L_search_arrow380
  L_search_arrow381
  L_search_arrow382
  L_search_arrow383
  L_search_arrow384
  L_search_arrow385
  L_search_arrow386
  L_search_arrow387
  L_search_arrow388
  L_search_arrow389
  L_search_arrow390
  L_search_arrow391
  L_search_arrow392
  L_search_arrow393
  L_search_arrow394
  L_search_arrow395
  L_search_arrow396
  L_search_arrow397
  L_search_arrow398
  L_search_arrow399
  L_search_arrow400
  L_search_arrow401
  L_search_arrow402
  L_search_arrow403
  L_search_arrow404
  L_search_arrow405
  L_search_arrow406
  L_search_arrow407
  L_search_arrow408
  L_search_arrow409
  L_search_arrow410
  L_search_arrow411
  L_search_arrow412
  L_search_arrow413
  L_search_arrow414
  L_search_arrow415
  L_search_arrow416
  L_search_arrow417
  L_search_arrow418
  L_search_arrow419
  L_search_arrow420
  L_search_arrow421
  L_search_arrow422
  L_main423
  L_main424
  L__lineFollow425
  L__lineFollow426
  L__lineFollow427
  L__lineFollow428
  L__lineFollow429
  L__lineFollow430
  L__lineFollow431
  L__lineFollow432
  L__lineFollow433
  L__lineFollow434
  L__lineFollow435
  L__lineFollow436
  L__lineFollow437
  L__lineFollow438
  L__lineFollow439
  L__lineFollow440
  L__lineFollow441
  L__lineFollow442
  L__lineFollow443
  L__lineFollow444
  L__lineFollow445
  L__lineFollow446
  L__SemSmallFollow447
  L__SemSmallFollow448
  L__SemSmallFollow449
  L__SemSmallFollow450
  L__SemSmallFollow451
  L__SemSmallFollow452
  L__SemSmallFollow453
  L__SemSmallFollow454
  L__SemSmallFollow455
  L__SemSmallFollow456
  L__SemSmallFollow457
  L__SemSmallFollow458
  L__encoder459
  L__encoder460
  L__goStraight461
  L__goStraight2462
  L__goStraight2463
  L__tuneToMiddle464
  L__avoidObstacles465
  L__avoidObstacles466
  L__avoidObstacles467
  L__avoidObstacles468
  L__avoidObstacles469
  L__avoidObstacles470
  L__avoidObstacles471
  L__search_arrow472
  L__search_arrow473
  L__search_arrow474
  L__search_arrow475
  L__search_arrow476
  L__search_arrow477
  L__search_arrow478
  L__search_arrow479
  _rotateLeft
  _rotateRight
  _moveF
  _moveB
  _forward
  _backward
  _leftHardTurn
  _RightHardTurn
  _leftTurn
  _RightTurn
  _leftSoftTurn
  _rightSoftTurn
  _stopAll
  _leftT
  _rightT
  _sensorRead
  L__sensorRead480
  L__sensorRead481
  L__sensorRead482
  L__sensorRead483
  L__sensorRead484
  L__sensorRead485
  L__sensorRead486
  L__sensorRead487
  L__sensorRead488
  L__sensorRead489
  L__sensorRead490
  L__sensorRead491
  L__sensorRead492
  L__sensorRead493
  _printToLcd
  L__printToLcd494
  _bin_deci
  L__bin_deci495
  L__bin_deci496
  L__bin_deci497
  L__bin_deci498
  L__bin_deci499
  L__bin_deci500
  L__bin_deci501
  L__bin_deci502
  L__bin_deci503
  L__bin_deci504
  _lineFollow
  L__lineFollow505
  L__lineFollow506
  L__lineFollow507
  L__lineFollow508
  L__lineFollow509
  L__lineFollow510
  L__lineFollow511
  L__lineFollow512
  L__lineFollow513
  L__lineFollow514
  L__lineFollow515
  L__lineFollow516
  L__lineFollow517
  L__lineFollow518
  L__lineFollow519
  L__lineFollow520
  L__lineFollow521
  L__lineFollow522
  L__lineFollow523
  L__lineFollow524
  L__lineFollow525
  L__lineFollow526
  L__lineFollow527
  L__lineFollow528
  L__lineFollow529
  L__lineFollow530
  L__lineFollow531
  L__lineFollow532
  L__lineFollow533
  L__lineFollow534
  L__lineFollow535
  L__lineFollow536
  L__lineFollow537
  L__lineFollow538
  L__lineFollow539
  L__lineFollow540
  L__lineFollow541
  L__lineFollow542
  L__lineFollow543
  L__lineFollow544
  L__lineFollow545
  L__lineFollow546
  L__lineFollow547
  L__lineFollow548
  L__lineFollow549
  L__lineFollow550
  L__lineFollow551
  L__lineFollow552
  L__lineFollow553
  L__lineFollow554
  _SemSmallFollow
  L__SemSmallFollow555
  L__SemSmallFollow556
  L__SemSmallFollow557
  L__SemSmallFollow558
  L__SemSmallFollow559
  L__SemSmallFollow560
  L__SemSmallFollow561
  L__SemSmallFollow562
  L__SemSmallFollow563
  L__SemSmallFollow564
  L__SemSmallFollow565
  L__SemSmallFollow566
  L__SemSmallFollow567
  L__SemSmallFollow568
  L__SemSmallFollow569
  L__SemSmallFollow570
  L__SemSmallFollow571
  L__SemSmallFollow572
  L__SemSmallFollow573
  L__SemSmallFollow574
  L__SemSmallFollow575
  L__SemSmallFollow576
  L__SemSmallFollow577
  L__SemSmallFollow578
  L__SemSmallFollow579
  L__SemSmallFollow580
  L__SemSmallFollow581
  L__SemSmallFollow582
  L__SemSmallFollow583
  L__SemSmallFollow584
  L__SemSmallFollow585
  L__SemSmallFollow586
  L__SemSmallFollow587
  L__SemSmallFollow588
  L__SemSmallFollow589
  L__SemSmallFollow590
  L__SemSmallFollow591
  L__SemSmallFollow592
  L__SemSmallFollow593
  L__SemSmallFollow594
  L__SemSmallFollow595
  L__SemSmallFollow596
  L__SemSmallFollow597
  L__SemSmallFollow598
  L__SemSmallFollow599
  L__SemSmallFollow600
  L__SemSmallFollow601
  L__SemSmallFollow602
  L__SemSmallFollow603
  L__SemSmallFollow604
  L__SemSmallFollow605
  L__SemSmallFollow606
  L__SemSmallFollow607
  L__SemSmallFollow608
  L__SemSmallFollow609
  L__SemSmallFollow610
  L__SemSmallFollow611
  L__SemSmallFollow612
  L__SemSmallFollow613
  L__SemSmallFollow614
  _encoder
  L__encoder615
  L__encoder616
  L__encoder617
  L__encoder618
  _initEncoder
  _goStraight
  L__goStraight619
  L__goStraight620
  L__goStraight621
  L__goStraight622
  L__goStraight623
  L__goStraight624
  L__goStraight625
  _goStraight2
  L__goStraight2626
  L__goStraight2627
  L__goStraight2628
  L__goStraight2629
  L__goStraight2630
  L__goStraight2631
  _tuneToMiddle
  L__tuneToMiddle632
  L__tuneToMiddle633
  L__tuneToMiddle634
  L__tuneToMiddle635
  L__tuneToMiddle636
  L__tuneToMiddle637
  L__tuneToMiddle638
  L__tuneToMiddle639
  L__tuneToMiddle640
  L__tuneToMiddle641
  _printClockEncoders
  L__printClockEncoders642
  L__printClockEncoders643
  _getFrontDecimal
  L__getFrontDecimal644
  L__getFrontDecimal645
  L__getFrontDecimal646
  L__getFrontDecimal647
  L__getFrontDecimal648
  L__getFrontDecimal649
  L__getFrontDecimal650
  L__getFrontDecimal651
  L__getFrontDecimal652
  L__getFrontDecimal653
  _getBackDecimal
  L__getBackDecimal654
  L__getBackDecimal655
  L__getBackDecimal656
  L__getBackDecimal657
  _followArrow
  L__followArrow658
  L__followArrow659
  L__followArrow660
  L__followArrow661
  L__followArrow662
  L__followArrow663
  L__followArrow664
  L__followArrow665
  L__followArrow666
  L__followArrow667
  L__followArrow668
  L__followArrow669
  L__followArrow670
  L__followArrow671
  L__followArrow672
  L__followArrow673
  L__followArrow674
  _interrupt
  L__interrupt675
  _init_timer
  _pulseIn1
  L__pulseIn1676
  L__pulseIn1677
  _pulseIn2
  L__pulseIn2678
  L__pulseIn2679
  _pulseIn3
  L__pulseIn3680
  L__pulseIn3681
  _getDis1
  _getDis2
  _getDis3
  _NidegL
  L__NidegL682
  _NidegR
  L__NidegR683
  _moFEnc
  L__moFEnc684
  _getCompass
  _turnToPoint
  L__turnToPoint685
  L__turnToPoint686
  L__turnToPoint687
  L__turnToPoint688
  L__turnToPoint689
  L__turnToPoint690
  L__turnToPoint691
  _avoidObstacles
  L__avoidObstacles692
  L__avoidObstacles693
  L__avoidObstacles694
  L__avoidObstacles695
  L__avoidObstacles696
  L__avoidObstacles697
  L__avoidObstacles698
  L__avoidObstacles699
  L__avoidObstacles700
  L__avoidObstacles701
  L__avoidObstacles702
  L__avoidObstacles703
  L__avoidObstacles704
  L__avoidObstacles705
  L__avoidObstacles706
  L__avoidObstacles707
  L__avoidObstacles708
  L__avoidObstacles709
  L__avoidObstacles710
  L__avoidObstacles711
  L__avoidObstacles712
  L__avoidObstacles713
  L__avoidObstacles714
  L__avoidObstacles715
  L__avoidObstacles716
  L__avoidObstacles717
  L__avoidObstacles718
  L__avoidObstacles719
  L__avoidObstacles720
  L__avoidObstacles721
  _speedChange_test
  _search_arrow
  L__search_arrow722
  L__search_arrow723
  L__search_arrow724
  L__search_arrow725
  L__search_arrow726
  L__search_arrow727
  L__search_arrow728
  L__search_arrow729
  L__search_arrow730
  L__search_arrow731
  L__search_arrow732
  L__search_arrow733
  L__search_arrow734
  L__search_arrow735
  L__search_arrow736
  L__search_arrow737
  L__search_arrow738
  L__search_arrow739
  L__search_arrow740
  L__search_arrow741
  L__search_arrow742
  L__search_arrow743
  L__search_arrow744
  L__search_arrow745
  L__search_arrow746
  L__search_arrow747
  L__search_arrow748
  L__search_arrow749
  L__search_arrow750
  L__search_arrow751
  L__search_arrow752
  L__search_arrow753
  L__search_arrow754
  L__search_arrow755
  L__search_arrow756
  _main
