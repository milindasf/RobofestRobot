;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 9/12/2012 4:55:06 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x158A      	BSF        PCLATH, 3
0x0001	0x2800      	GOTO       2048
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x1683      	BSF        STATUS, 5
0x0008	0x00B0      	MOVWF      ___saveSTATUS
0x0009	0x080A      	MOVF       PCLATH, 0
0x000A	0x1283      	BCF        STATUS, 5
0x000B	0x00EF      	MOVWF      ___savePCLATH
0x000C	0x018A      	CLRF       PCLATH
0x000D	0x0870      	MOVF       R0, 0
0x000E	0x00A0      	MOVWF      32
;final_code_4.c,801 :: 		void interrupt(){                              //Timer0 interrupts are handled at here. Here is the main driving section of the cube
;final_code_4.c,802 :: 		if(INTCON.TMR0IF){
0x000F	0x1D0B      	BTFSS      INTCON, 2
0x0010	0x2813      	GOTO       L_interrupt269
;final_code_4.c,803 :: 		encoder();
0x0011	0x27A7      	CALL       _encoder
;final_code_4.c,804 :: 		INTCON.TMR0IF = 0; // clear TMR1IF
0x0012	0x110B      	BCF        INTCON, 2
;final_code_4.c,805 :: 		}
L_interrupt269:
;final_code_4.c,808 :: 		}
L__interrupt625:
0x0013	0x0820      	MOVF       32, 0
0x0014	0x00F0      	MOVWF      R0
0x0015	0x086F      	MOVF       ___savePCLATH, 0
0x0016	0x008A      	MOVWF      PCLATH
0x0017	0x1683      	BSF        STATUS, 5
0x0018	0x0E30      	SWAPF      ___saveSTATUS, 0
0x0019	0x0083      	MOVWF      STATUS
0x001A	0x0EFF      	SWAPF      R15, 1
0x001B	0x0E7F      	SWAPF      R15, 0
0x001C	0x0009      	RETFIE
; end of _interrupt
_Mul_16x16_U:
;__Lib_Math.c,136 :: 		
;__Lib_Math.c,143 :: 		
0x001D	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,144 :: 		
0x001E	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,145 :: 		
0x001F	0x01FB      	CLRF       R11
;__Lib_Math.c,146 :: 		
0x0020	0x01FA      	CLRF       R10
;__Lib_Math.c,147 :: 		
0x0021	0x01F9      	CLRF       R9
;__Lib_Math.c,148 :: 		
0x0022	0x3080      	MOVLW      128
;__Lib_Math.c,149 :: 		
0x0023	0x00F8      	MOVWF      R8
;__Lib_Math.c,150 :: 		
0x0024	0x0CF1      	RRF        R1, 1
;__Lib_Math.c,151 :: 		
0x0025	0x0CF0      	RRF        R0, 1
;__Lib_Math.c,152 :: 		
0x0026	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,153 :: 		
0x0027	0x2831      	GOTO       $+10
;__Lib_Math.c,154 :: 		
0x0028	0x0874      	MOVF       R4, 0
;__Lib_Math.c,155 :: 		
0x0029	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,156 :: 		
0x002A	0x0875      	MOVF       R5, 0
;__Lib_Math.c,157 :: 		
0x002B	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,158 :: 		
0x002C	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,159 :: 		
0x002D	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,160 :: 		
0x002E	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,161 :: 		
0x002F	0x0AFB      	INCF       R11, 1
;__Lib_Math.c,162 :: 		
0x0030	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,163 :: 		
0x0031	0x1FF0      	BTFSS      R0, 7
;__Lib_Math.c,164 :: 		
0x0032	0x2839      	GOTO       $+7
;__Lib_Math.c,165 :: 		
0x0033	0x0874      	MOVF       R4, 0
;__Lib_Math.c,166 :: 		
0x0034	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,167 :: 		
0x0035	0x0875      	MOVF       R5, 0
;__Lib_Math.c,168 :: 		
0x0036	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,169 :: 		
0x0037	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,170 :: 		
0x0038	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,171 :: 		
0x0039	0x0CFB      	RRF        R11, 1
;__Lib_Math.c,172 :: 		
0x003A	0x0CFA      	RRF        R10, 1
;__Lib_Math.c,173 :: 		
0x003B	0x0CF9      	RRF        R9, 1
;__Lib_Math.c,174 :: 		
0x003C	0x0CF8      	RRF        R8, 1
;__Lib_Math.c,175 :: 		
0x003D	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,176 :: 		
0x003E	0x2824      	GOTO       $-26
;__Lib_Math.c,177 :: 		
0x003F	0x087B      	MOVF       R11, 0
;__Lib_Math.c,178 :: 		
0x0040	0x00F3      	MOVWF      R3
;__Lib_Math.c,179 :: 		
0x0041	0x087A      	MOVF       R10, 0
;__Lib_Math.c,180 :: 		
0x0042	0x00F2      	MOVWF      R2
;__Lib_Math.c,181 :: 		
0x0043	0x0879      	MOVF       R9, 0
;__Lib_Math.c,182 :: 		
0x0044	0x00F1      	MOVWF      R1
;__Lib_Math.c,183 :: 		
0x0045	0x0878      	MOVF       R8, 0
;__Lib_Math.c,184 :: 		
0x0046	0x00F0      	MOVWF      R0
;__Lib_Math.c,187 :: 		
0x0047	0x0008      	RETURN
; end of _Mul_16x16_U
_PWM1_Set_Duty:
;__Lib_PWM_c21.c,40 :: 		
;__Lib_PWM_c21.c,44 :: 		
0x0048	0x1683      	BSF        STATUS, 5
0x0049	0x1303      	BCF        STATUS, 6
0x004A	0x0812      	MOVF       PR2, 0
0x004B	0x3E01      	ADDLW      1
0x004C	0x00F0      	MOVWF      R0
0x004D	0x01F1      	CLRF       R0+1
0x004E	0x1803      	BTFSC      STATUS, 0
0x004F	0x0AF1      	INCF       R0+1, 1
0x0050	0x083B      	MOVF       FARG_PWM1_Set_Duty_new_duty, 0
0x0051	0x00F4      	MOVWF      R4
0x0052	0x01F5      	CLRF       R4+1
0x0053	0x201D      	CALL       _Mul_16x16_U
0x0054	0x3006      	MOVLW      6
0x0055	0x00F2      	MOVWF      R2
0x0056	0x0870      	MOVF       R0, 0
0x0057	0x00F4      	MOVWF      R4
0x0058	0x0871      	MOVF       R0+1, 0
0x0059	0x00F5      	MOVWF      R4+1
0x005A	0x0872      	MOVF       R2, 0
L__PWM1_Set_Duty4:
0x005B	0x1903      	BTFSC      STATUS, 2
0x005C	0x2862      	GOTO       L__PWM1_Set_Duty5
0x005D	0x0CF5      	RRF        R4+1, 1
0x005E	0x0CF4      	RRF        R4, 1
0x005F	0x13F5      	BCF        R4+1, 7
0x0060	0x3EFF      	ADDLW      255
0x0061	0x285B      	GOTO       L__PWM1_Set_Duty4
L__PWM1_Set_Duty5:
;__Lib_PWM_c21.c,45 :: 		
0x0062	0x3004      	MOVLW      4
0x0063	0x00F1      	MOVWF      R1
0x0064	0x0874      	MOVF       R4, 0
0x0065	0x00F0      	MOVWF      R0
0x0066	0x0871      	MOVF       R1, 0
L__PWM1_Set_Duty6:
0x0067	0x1903      	BTFSC      STATUS, 2
0x0068	0x286D      	GOTO       L__PWM1_Set_Duty7
0x0069	0x0DF0      	RLF        R0, 1
0x006A	0x1070      	BCF        R0, 0
0x006B	0x3EFF      	ADDLW      255
0x006C	0x2867      	GOTO       L__PWM1_Set_Duty6
L__PWM1_Set_Duty7:
0x006D	0x1283      	BCF        STATUS, 5
0x006E	0x1303      	BCF        STATUS, 6
0x006F	0x3030      	MOVLW      48
0x0070	0x0570      	ANDWF      R0, 0
0x0071	0x00F3      	MOVWF      R3
;__Lib_PWM_c21.c,46 :: 		
0x0072	0x0874      	MOVF       R4, 0
0x0073	0x00F0      	MOVWF      R0
0x0074	0x0875      	MOVF       R4+1, 0
0x0075	0x00F1      	MOVWF      R0+1
0x0076	0x0CF1      	RRF        R0+1, 1
0x0077	0x0CF0      	RRF        R0, 1
0x0078	0x13F1      	BCF        R0+1, 7
0x0079	0x0CF1      	RRF        R0+1, 1
0x007A	0x0CF0      	RRF        R0, 1
0x007B	0x13F1      	BCF        R0+1, 7
0x007C	0x0870      	MOVF       R0, 0
0x007D	0x0095      	MOVWF      CCPR1L
;__Lib_PWM_c21.c,47 :: 		
0x007E	0x300F      	MOVLW      15
0x007F	0x0597      	ANDWF      CCP1CON, 1
;__Lib_PWM_c21.c,48 :: 		
0x0080	0x0873      	MOVF       R3, 0
0x0081	0x0497      	IORWF      CCP1CON, 1
;__Lib_PWM_c21.c,49 :: 		
0x0082	0x0008      	RETURN
; end of _PWM1_Set_Duty
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x0083	0x0000      	NOP
0x0084	0x0000      	NOP
0x0085	0x0000      	NOP
0x0086	0x0000      	NOP
0x0087	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
0x0088	0x0008      	RETURN
; end of _Delay_1us
_PWM2_Set_Duty:
;__Lib_PWM_c21.c,8 :: 		
;__Lib_PWM_c21.c,12 :: 		
0x0089	0x1683      	BSF        STATUS, 5
0x008A	0x1303      	BCF        STATUS, 6
0x008B	0x0812      	MOVF       PR2, 0
0x008C	0x3E01      	ADDLW      1
0x008D	0x00F0      	MOVWF      R0
0x008E	0x01F1      	CLRF       R0+1
0x008F	0x1803      	BTFSC      STATUS, 0
0x0090	0x0AF1      	INCF       R0+1, 1
0x0091	0x083B      	MOVF       FARG_PWM2_Set_Duty_new_duty, 0
0x0092	0x00F4      	MOVWF      R4
0x0093	0x01F5      	CLRF       R4+1
0x0094	0x201D      	CALL       _Mul_16x16_U
0x0095	0x3006      	MOVLW      6
0x0096	0x00F2      	MOVWF      R2
0x0097	0x0870      	MOVF       R0, 0
0x0098	0x00F4      	MOVWF      R4
0x0099	0x0871      	MOVF       R0+1, 0
0x009A	0x00F5      	MOVWF      R4+1
0x009B	0x0872      	MOVF       R2, 0
L__PWM2_Set_Duty0:
0x009C	0x1903      	BTFSC      STATUS, 2
0x009D	0x28A3      	GOTO       L__PWM2_Set_Duty1
0x009E	0x0CF5      	RRF        R4+1, 1
0x009F	0x0CF4      	RRF        R4, 1
0x00A0	0x13F5      	BCF        R4+1, 7
0x00A1	0x3EFF      	ADDLW      255
0x00A2	0x289C      	GOTO       L__PWM2_Set_Duty0
L__PWM2_Set_Duty1:
;__Lib_PWM_c21.c,13 :: 		
0x00A3	0x3004      	MOVLW      4
0x00A4	0x00F1      	MOVWF      R1
0x00A5	0x0874      	MOVF       R4, 0
0x00A6	0x00F0      	MOVWF      R0
0x00A7	0x0871      	MOVF       R1, 0
L__PWM2_Set_Duty2:
0x00A8	0x1903      	BTFSC      STATUS, 2
0x00A9	0x28AE      	GOTO       L__PWM2_Set_Duty3
0x00AA	0x0DF0      	RLF        R0, 1
0x00AB	0x1070      	BCF        R0, 0
0x00AC	0x3EFF      	ADDLW      255
0x00AD	0x28A8      	GOTO       L__PWM2_Set_Duty2
L__PWM2_Set_Duty3:
0x00AE	0x1283      	BCF        STATUS, 5
0x00AF	0x1303      	BCF        STATUS, 6
0x00B0	0x3030      	MOVLW      48
0x00B1	0x0570      	ANDWF      R0, 0
0x00B2	0x00F3      	MOVWF      R3
;__Lib_PWM_c21.c,14 :: 		
0x00B3	0x0874      	MOVF       R4, 0
0x00B4	0x00F0      	MOVWF      R0
0x00B5	0x0875      	MOVF       R4+1, 0
0x00B6	0x00F1      	MOVWF      R0+1
0x00B7	0x0CF1      	RRF        R0+1, 1
0x00B8	0x0CF0      	RRF        R0, 1
0x00B9	0x13F1      	BCF        R0+1, 7
0x00BA	0x0CF1      	RRF        R0+1, 1
0x00BB	0x0CF0      	RRF        R0, 1
0x00BC	0x13F1      	BCF        R0+1, 7
0x00BD	0x0870      	MOVF       R0, 0
0x00BE	0x009B      	MOVWF      CCPR2L
;__Lib_PWM_c21.c,15 :: 		
0x00BF	0x300F      	MOVLW      15
0x00C0	0x059D      	ANDWF      CCP2CON, 1
;__Lib_PWM_c21.c,16 :: 		
0x00C1	0x0873      	MOVF       R3, 0
0x00C2	0x049D      	IORWF      CCP2CON, 1
;__Lib_PWM_c21.c,17 :: 		
0x00C3	0x0008      	RETURN
; end of _PWM2_Set_Duty
_stopAll:
;final_code_4.c,149 :: 		stopAll(){
;final_code_4.c,150 :: 		PORTC.F3=1;    //left motor backward
0x00C4	0x1283      	BCF        STATUS, 5
0x00C5	0x1303      	BCF        STATUS, 6
0x00C6	0x1587      	BSF        PORTC, 3
;final_code_4.c,151 :: 		PORTC.F6=1;
0x00C7	0x1707      	BSF        PORTC, 6
;final_code_4.c,152 :: 		PORTC.F4=1;    //Right motor forward
0x00C8	0x1607      	BSF        PORTC, 4
;final_code_4.c,153 :: 		PORTC.F5=1;
0x00C9	0x1687      	BSF        PORTC, 5
;final_code_4.c,154 :: 		}
0x00CA	0x0008      	RETURN
; end of _stopAll
_rotateLeft:
;final_code_4.c,44 :: 		void rotateLeft(){
;final_code_4.c,45 :: 		PORTC.F3=0;
0x00CB	0x1283      	BCF        STATUS, 5
0x00CC	0x1303      	BCF        STATUS, 6
0x00CD	0x1187      	BCF        PORTC, 3
;final_code_4.c,46 :: 		PORTC.F4=1;
0x00CE	0x1607      	BSF        PORTC, 4
;final_code_4.c,47 :: 		PORTC.F5=0;
0x00CF	0x1287      	BCF        PORTC, 5
;final_code_4.c,48 :: 		PORTC.F6=1;
0x00D0	0x1707      	BSF        PORTC, 6
;final_code_4.c,49 :: 		rotationMode=1;
0x00D1	0x3001      	MOVLW      1
0x00D2	0x00AB      	MOVWF      _rotationMode
0x00D3	0x3000      	MOVLW      0
0x00D4	0x00AC      	MOVWF      _rotationMode+1
;final_code_4.c,50 :: 		}
0x00D5	0x0008      	RETURN
; end of _rotateLeft
_rotateRight:
;final_code_4.c,52 :: 		void rotateRight(){
;final_code_4.c,53 :: 		PORTC.F3=1;
0x00D6	0x1283      	BCF        STATUS, 5
0x00D7	0x1303      	BCF        STATUS, 6
0x00D8	0x1587      	BSF        PORTC, 3
;final_code_4.c,54 :: 		PORTC.F4=0;
0x00D9	0x1207      	BCF        PORTC, 4
;final_code_4.c,55 :: 		PORTC.F5=1;
0x00DA	0x1687      	BSF        PORTC, 5
;final_code_4.c,56 :: 		PORTC.F6=0;
0x00DB	0x1307      	BCF        PORTC, 6
;final_code_4.c,57 :: 		rotationMode=2;
0x00DC	0x3002      	MOVLW      2
0x00DD	0x00AB      	MOVWF      _rotationMode
0x00DE	0x3000      	MOVLW      0
0x00DF	0x00AC      	MOVWF      _rotationMode+1
;final_code_4.c,58 :: 		}
0x00E0	0x0008      	RETURN
; end of _rotateRight
_leftT:
;final_code_4.c,156 :: 		leftT(){
;final_code_4.c,157 :: 		PORTC.F3=1;    //left motor backward
0x00E1	0x1283      	BCF        STATUS, 5
0x00E2	0x1303      	BCF        STATUS, 6
0x00E3	0x1587      	BSF        PORTC, 3
;final_code_4.c,158 :: 		PORTC.F6=1;
0x00E4	0x1707      	BSF        PORTC, 6
;final_code_4.c,159 :: 		PORTC.F4=1;    //Right motor forward
0x00E5	0x1607      	BSF        PORTC, 4
;final_code_4.c,160 :: 		PORTC.F5=0;
0x00E6	0x1287      	BCF        PORTC, 5
;final_code_4.c,161 :: 		PWM1_Set_Duty(190);
0x00E7	0x30BE      	MOVLW      190
0x00E8	0x1683      	BSF        STATUS, 5
0x00E9	0x00BB      	MOVWF      FARG_PWM1_Set_Duty_new_duty
0x00EA	0x2048      	CALL       _PWM1_Set_Duty
;final_code_4.c,162 :: 		PWM2_Set_Duty(190);
0x00EB	0x30BE      	MOVLW      190
0x00EC	0x1683      	BSF        STATUS, 5
0x00ED	0x00BB      	MOVWF      FARG_PWM2_Set_Duty_new_duty
0x00EE	0x2089      	CALL       _PWM2_Set_Duty
;final_code_4.c,164 :: 		}
0x00EF	0x0008      	RETURN
; end of _leftT
_rightT:
;final_code_4.c,166 :: 		rightT(){
;final_code_4.c,168 :: 		PORTC.F3=1;    //left motor forward
0x00F0	0x1283      	BCF        STATUS, 5
0x00F1	0x1303      	BCF        STATUS, 6
0x00F2	0x1587      	BSF        PORTC, 3
;final_code_4.c,169 :: 		PORTC.F6=1;
0x00F3	0x1707      	BSF        PORTC, 6
;final_code_4.c,170 :: 		PORTC.F4=0;    //Right motor stopped
0x00F4	0x1207      	BCF        PORTC, 4
;final_code_4.c,171 :: 		PORTC.F5=1;
0x00F5	0x1687      	BSF        PORTC, 5
;final_code_4.c,172 :: 		PWM1_Set_Duty(190);
0x00F6	0x30BE      	MOVLW      190
0x00F7	0x1683      	BSF        STATUS, 5
0x00F8	0x00BB      	MOVWF      FARG_PWM1_Set_Duty_new_duty
0x00F9	0x2048      	CALL       _PWM1_Set_Duty
;final_code_4.c,173 :: 		PWM2_Set_Duty(190);
0x00FA	0x30BE      	MOVLW      190
0x00FB	0x1683      	BSF        STATUS, 5
0x00FC	0x00BB      	MOVWF      FARG_PWM2_Set_Duty_new_duty
0x00FD	0x2089      	CALL       _PWM2_Set_Duty
;final_code_4.c,175 :: 		}
0x00FE	0x0008      	RETURN
; end of _rightT
_pulseIn3:
;final_code_4.c,853 :: 		int pulseIn3(){
;final_code_4.c,854 :: 		counter3=0;
0x00FF	0x1683      	BSF        STATUS, 5
0x0100	0x1303      	BCF        STATUS, 6
0x0101	0x01A0      	CLRF       _counter3
0x0102	0x01A1      	CLRF       _counter3+1
;final_code_4.c,855 :: 		while(1){
L_pulseIn3286:
;final_code_4.c,856 :: 		counter3++;
0x0103	0x0AA0      	INCF       _counter3, 1
0x0104	0x1903      	BTFSC      STATUS, 2
0x0105	0x0AA1      	INCF       _counter3+1, 1
;final_code_4.c,857 :: 		Delay_1us();
0x0106	0x2083      	CALL       _Delay_1us
;final_code_4.c,858 :: 		if(PORTC.F7==1)break;
0x0107	0x1283      	BCF        STATUS, 5
0x0108	0x1F87      	BTFSS      PORTC, 7
0x0109	0x290B      	GOTO       L_pulseIn3288
0x010A	0x291E      	GOTO       L_pulseIn3287
L_pulseIn3288:
;final_code_4.c,859 :: 		if(counter3>6000)return -1;
0x010B	0x3080      	MOVLW      128
0x010C	0x3A17      	XORLW      23
0x010D	0x00F0      	MOVWF      R0
0x010E	0x3080      	MOVLW      128
0x010F	0x1683      	BSF        STATUS, 5
0x0110	0x0621      	XORWF      _counter3+1, 0
0x0111	0x0270      	SUBWF      R0, 0
0x0112	0x1D03      	BTFSS      STATUS, 2
0x0113	0x2916      	GOTO       L__pulseIn3630
0x0114	0x0820      	MOVF       _counter3, 0
0x0115	0x3C70      	SUBLW      112
L__pulseIn3630:
0x0116	0x1803      	BTFSC      STATUS, 0
0x0117	0x291D      	GOTO       L_pulseIn3289
0x0118	0x30FF      	MOVLW      255
0x0119	0x00F0      	MOVWF      R0
0x011A	0x30FF      	MOVLW      255
0x011B	0x00F1      	MOVWF      R0+1
0x011C	0x0008      	RETURN
L_pulseIn3289:
;final_code_4.c,860 :: 		}
0x011D	0x2903      	GOTO       L_pulseIn3286
L_pulseIn3287:
0x011E	0x1683      	BSF        STATUS, 5
;final_code_4.c,861 :: 		counter3=0;
0x011F	0x01A0      	CLRF       _counter3
0x0120	0x01A1      	CLRF       _counter3+1
;final_code_4.c,862 :: 		while(1){
L_pulseIn3290:
;final_code_4.c,863 :: 		counter3++;
0x0121	0x0AA0      	INCF       _counter3, 1
0x0122	0x1903      	BTFSC      STATUS, 2
0x0123	0x0AA1      	INCF       _counter3+1, 1
;final_code_4.c,864 :: 		Delay_1us();
0x0124	0x2083      	CALL       _Delay_1us
;final_code_4.c,865 :: 		if(PORTC.F7==0)return 0;
0x0125	0x1283      	BCF        STATUS, 5
0x0126	0x1B87      	BTFSC      PORTC, 7
0x0127	0x292B      	GOTO       L_pulseIn3292
0x0128	0x01F0      	CLRF       R0
0x0129	0x01F1      	CLRF       R0+1
0x012A	0x0008      	RETURN
L_pulseIn3292:
0x012B	0x1683      	BSF        STATUS, 5
;final_code_4.c,866 :: 		if(counter3>6000)return -1;
0x012C	0x3080      	MOVLW      128
0x012D	0x3A17      	XORLW      23
0x012E	0x00F0      	MOVWF      R0
0x012F	0x3080      	MOVLW      128
0x0130	0x0621      	XORWF      _counter3+1, 0
0x0131	0x0270      	SUBWF      R0, 0
0x0132	0x1D03      	BTFSS      STATUS, 2
0x0133	0x2936      	GOTO       L__pulseIn3631
0x0134	0x0820      	MOVF       _counter3, 0
0x0135	0x3C70      	SUBLW      112
L__pulseIn3631:
0x0136	0x1803      	BTFSC      STATUS, 0
0x0137	0x293D      	GOTO       L_pulseIn3293
0x0138	0x30FF      	MOVLW      255
0x0139	0x00F0      	MOVWF      R0
0x013A	0x30FF      	MOVLW      255
0x013B	0x00F1      	MOVWF      R0+1
0x013C	0x0008      	RETURN
L_pulseIn3293:
;final_code_4.c,867 :: 		}
0x013D	0x2921      	GOTO       L_pulseIn3290
;final_code_4.c,868 :: 		}
0x013E	0x0008      	RETURN
; end of _pulseIn3
_moveF:
;final_code_4.c,60 :: 		void moveF(){
;final_code_4.c,61 :: 		PORTC.F3=1;
0x013F	0x1283      	BCF        STATUS, 5
0x0140	0x1303      	BCF        STATUS, 6
0x0141	0x1587      	BSF        PORTC, 3
;final_code_4.c,62 :: 		PORTC.F4=0;
0x0142	0x1207      	BCF        PORTC, 4
;final_code_4.c,63 :: 		PORTC.F5=0;
0x0143	0x1287      	BCF        PORTC, 5
;final_code_4.c,64 :: 		PORTC.F6=1;
0x0144	0x1707      	BSF        PORTC, 6
;final_code_4.c,65 :: 		rotationMode=3;
0x0145	0x3003      	MOVLW      3
0x0146	0x00AB      	MOVWF      _rotationMode
0x0147	0x3000      	MOVLW      0
0x0148	0x00AC      	MOVWF      _rotationMode+1
;final_code_4.c,66 :: 		}
0x0149	0x0008      	RETURN
; end of _moveF
_Delay_22us:
;__Lib_Delays.c,15 :: 		void Delay_22us() {
;__Lib_Delays.c,16 :: 		Delay_us(22);
0x014A	0x3024      	MOVLW      36
0x014B	0x1283      	BCF        STATUS, 5
0x014C	0x1303      	BCF        STATUS, 6
0x014D	0x00FD      	MOVWF      R13
L_Delay_22us1:
0x014E	0x0BFD      	DECFSZ     R13, 1
0x014F	0x294E      	GOTO       L_Delay_22us1
0x0150	0x0000      	NOP
;__Lib_Delays.c,17 :: 		}
0x0151	0x0008      	RETURN
; end of _Delay_22us
_pulseIn2:
;final_code_4.c,835 :: 		int pulseIn2(){
;final_code_4.c,836 :: 		counter2=0;
0x0152	0x1283      	BCF        STATUS, 5
0x0153	0x1303      	BCF        STATUS, 6
0x0154	0x01EB      	CLRF       _counter2
0x0155	0x01EC      	CLRF       _counter2+1
;final_code_4.c,837 :: 		while(1){
L_pulseIn2278:
;final_code_4.c,838 :: 		counter2++;
0x0156	0x0AEB      	INCF       _counter2, 1
0x0157	0x1903      	BTFSC      STATUS, 2
0x0158	0x0AEC      	INCF       _counter2+1, 1
;final_code_4.c,839 :: 		Delay_1us();
0x0159	0x2083      	CALL       _Delay_1us
;final_code_4.c,840 :: 		if(PORTD.F6==1)break;
0x015A	0x1F08      	BTFSS      PORTD, 6
0x015B	0x295D      	GOTO       L_pulseIn2280
0x015C	0x296F      	GOTO       L_pulseIn2279
L_pulseIn2280:
;final_code_4.c,841 :: 		if(counter2>6000)return -1;
0x015D	0x3080      	MOVLW      128
0x015E	0x3A17      	XORLW      23
0x015F	0x00F0      	MOVWF      R0
0x0160	0x3080      	MOVLW      128
0x0161	0x066C      	XORWF      _counter2+1, 0
0x0162	0x0270      	SUBWF      R0, 0
0x0163	0x1D03      	BTFSS      STATUS, 2
0x0164	0x2967      	GOTO       L__pulseIn2628
0x0165	0x086B      	MOVF       _counter2, 0
0x0166	0x3C70      	SUBLW      112
L__pulseIn2628:
0x0167	0x1803      	BTFSC      STATUS, 0
0x0168	0x296E      	GOTO       L_pulseIn2281
0x0169	0x30FF      	MOVLW      255
0x016A	0x00F0      	MOVWF      R0
0x016B	0x30FF      	MOVLW      255
0x016C	0x00F1      	MOVWF      R0+1
0x016D	0x0008      	RETURN
L_pulseIn2281:
;final_code_4.c,842 :: 		}
0x016E	0x2956      	GOTO       L_pulseIn2278
L_pulseIn2279:
;final_code_4.c,843 :: 		counter2=0;
0x016F	0x01EB      	CLRF       _counter2
0x0170	0x01EC      	CLRF       _counter2+1
;final_code_4.c,844 :: 		while(1){
L_pulseIn2282:
;final_code_4.c,845 :: 		counter2++;
0x0171	0x0AEB      	INCF       _counter2, 1
0x0172	0x1903      	BTFSC      STATUS, 2
0x0173	0x0AEC      	INCF       _counter2+1, 1
;final_code_4.c,846 :: 		Delay_1us();
0x0174	0x2083      	CALL       _Delay_1us
;final_code_4.c,847 :: 		if(PORTD.F6==0)return 0;
0x0175	0x1B08      	BTFSC      PORTD, 6
0x0176	0x297A      	GOTO       L_pulseIn2284
0x0177	0x01F0      	CLRF       R0
0x0178	0x01F1      	CLRF       R0+1
0x0179	0x0008      	RETURN
L_pulseIn2284:
;final_code_4.c,848 :: 		if(counter2>6000)return -1;
0x017A	0x3080      	MOVLW      128
0x017B	0x3A17      	XORLW      23
0x017C	0x00F0      	MOVWF      R0
0x017D	0x3080      	MOVLW      128
0x017E	0x066C      	XORWF      _counter2+1, 0
0x017F	0x0270      	SUBWF      R0, 0
0x0180	0x1D03      	BTFSS      STATUS, 2
0x0181	0x2984      	GOTO       L__pulseIn2629
0x0182	0x086B      	MOVF       _counter2, 0
0x0183	0x3C70      	SUBLW      112
L__pulseIn2629:
0x0184	0x1803      	BTFSC      STATUS, 0
0x0185	0x298B      	GOTO       L_pulseIn2285
0x0186	0x30FF      	MOVLW      255
0x0187	0x00F0      	MOVWF      R0
0x0188	0x30FF      	MOVLW      255
0x0189	0x00F1      	MOVWF      R0+1
0x018A	0x0008      	RETURN
L_pulseIn2285:
;final_code_4.c,849 :: 		}
0x018B	0x2971      	GOTO       L_pulseIn2282
;final_code_4.c,850 :: 		}
0x018C	0x0008      	RETURN
; end of _pulseIn2
_initEncoder:
;final_code_4.c,588 :: 		void initEncoder(){
;final_code_4.c,589 :: 		TMR1_value=0;
0x018D	0x1283      	BCF        STATUS, 5
0x018E	0x1303      	BCF        STATUS, 6
0x018F	0x01C3      	CLRF       _TMR1_value
0x0190	0x01C4      	CLRF       _TMR1_value+1
;final_code_4.c,590 :: 		TMR0_value=0;
0x0191	0x01C5      	CLRF       _TMR0_value
0x0192	0x01C6      	CLRF       _TMR0_value+1
;final_code_4.c,591 :: 		}
0x0193	0x0008      	RETURN
; end of _initEncoder
_printClockEncoders:
;final_code_4.c,688 :: 		void printClockEncoders(){
;final_code_4.c,689 :: 		if(clockEncoder>=0){
0x0194	0x3080      	MOVLW      128
0x0195	0x1283      	BCF        STATUS, 5
0x0196	0x1303      	BCF        STATUS, 6
0x0197	0x062A      	XORWF      _clockEncoder+1, 0
0x0198	0x00F0      	MOVWF      R0
0x0199	0x3080      	MOVLW      128
0x019A	0x0270      	SUBWF      R0, 0
0x019B	0x1D03      	BTFSS      STATUS, 2
0x019C	0x299F      	GOTO       L__printClockEncoders592
0x019D	0x3000      	MOVLW      0
0x019E	0x0229      	SUBWF      _clockEncoder, 0
L__printClockEncoders592:
0x019F	0x1C03      	BTFSS      STATUS, 0
0x01A0	0x29A2      	GOTO       L_printClockEncoders234
;final_code_4.c,693 :: 		}else if(clockEncoder<0){
0x01A1	0x29AD      	GOTO       L_printClockEncoders235
L_printClockEncoders234:
0x01A2	0x3080      	MOVLW      128
0x01A3	0x062A      	XORWF      _clockEncoder+1, 0
0x01A4	0x00F0      	MOVWF      R0
0x01A5	0x3080      	MOVLW      128
0x01A6	0x0270      	SUBWF      R0, 0
0x01A7	0x1D03      	BTFSS      STATUS, 2
0x01A8	0x29AB      	GOTO       L__printClockEncoders593
0x01A9	0x3000      	MOVLW      0
0x01AA	0x0229      	SUBWF      _clockEncoder, 0
L__printClockEncoders593:
0x01AB	0x1803      	BTFSC      STATUS, 0
0x01AC	0x29AD      	GOTO       L_printClockEncoders236
;final_code_4.c,697 :: 		}
L_printClockEncoders236:
L_printClockEncoders235:
;final_code_4.c,699 :: 		}
0x01AD	0x0008      	RETURN
; end of _printClockEncoders
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x01AE	0x1683      	BSF        STATUS, 5
0x01AF	0x1303      	BCF        STATUS, 6
0x01B0	0x0832      	MOVF       ___DoICPAddr+1, 0
0x01B1	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x01B2	0x0831      	MOVF       ___DoICPAddr, 0
0x01B3	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
0x01B4	0x0008      	RETURN
; end of _____DoICP
_ADC_Read:
;__Lib_ADC_88X.c,6 :: 		
;__Lib_ADC_88X.c,8 :: 		
0x01B5	0x303C      	MOVLW      60
0x01B6	0x1283      	BCF        STATUS, 5
0x01B7	0x1303      	BCF        STATUS, 6
0x01B8	0x059F      	ANDWF      ADCON0, 1
;__Lib_ADC_88X.c,12 :: 		
0x01B9	0x30C0      	MOVLW      192
0x01BA	0x009F      	MOVWF      ADCON0
;__Lib_ADC_88X.c,13 :: 		
0x01BB	0x1683      	BSF        STATUS, 5
0x01BC	0x0837      	MOVF       FARG_ADC_Read_channel, 0
0x01BD	0x00F0      	MOVWF      R0
0x01BE	0x0DF0      	RLF        R0, 1
0x01BF	0x1070      	BCF        R0, 0
0x01C0	0x0DF0      	RLF        R0, 1
0x01C1	0x1070      	BCF        R0, 0
0x01C2	0x0870      	MOVF       R0, 0
0x01C3	0x1283      	BCF        STATUS, 5
0x01C4	0x049F      	IORWF      ADCON0, 1
;__Lib_ADC_88X.c,14 :: 		
0x01C5	0x1683      	BSF        STATUS, 5
0x01C6	0x179F      	BSF        ADCON1, 7
;__Lib_ADC_88X.c,17 :: 		
0x01C7	0x1283      	BCF        STATUS, 5
0x01C8	0x141F      	BSF        ADCON0, 0
;__Lib_ADC_88X.c,20 :: 		
0x01C9	0x214A      	CALL       _Delay_22us
;__Lib_ADC_88X.c,23 :: 		
0x01CA	0x149F      	BSF        ADCON0, 1
;__Lib_ADC_88X.c,26 :: 		
L_ADC_Read0:
0x01CB	0x1C9F      	BTFSS      ADCON0, 1
0x01CC	0x29CF      	GOTO       L_ADC_Read1
;__Lib_ADC_88X.c,27 :: 		
0x01CD	0x0000      	NOP
0x01CE	0x29CB      	GOTO       L_ADC_Read0
L_ADC_Read1:
;__Lib_ADC_88X.c,30 :: 		
0x01CF	0x101F      	BCF        ADCON0, 0
;__Lib_ADC_88X.c,33 :: 		
0x01D0	0x081E      	MOVF       ADRESH, 0
0x01D1	0x00F1      	MOVWF      R0+1
0x01D2	0x01F0      	CLRF       R0
0x01D3	0x1683      	BSF        STATUS, 5
0x01D4	0x081E      	MOVF       ADRESL, 0
0x01D5	0x04F0      	IORWF      R0, 1
0x01D6	0x3000      	MOVLW      0
0x01D7	0x04F1      	IORWF      R0+1, 1
;__Lib_ADC_88X.c,34 :: 		
0x01D8	0x0008      	RETURN
; end of _ADC_Read
_straight_com:
;final_code_4.c,502 :: 		void straight_com(){
;final_code_4.c,504 :: 		PWM1_Set_Duty(180);
0x01D9	0x30B4      	MOVLW      180
0x01DA	0x1683      	BSF        STATUS, 5
0x01DB	0x1303      	BCF        STATUS, 6
0x01DC	0x00BB      	MOVWF      FARG_PWM1_Set_Duty_new_duty
0x01DD	0x2048      	CALL       _PWM1_Set_Duty
;final_code_4.c,505 :: 		PWM2_Set_Duty(180);
0x01DE	0x30B4      	MOVLW      180
0x01DF	0x1683      	BSF        STATUS, 5
0x01E0	0x00BB      	MOVWF      FARG_PWM2_Set_Duty_new_duty
0x01E1	0x2089      	CALL       _PWM2_Set_Duty
;final_code_4.c,508 :: 		if(PORTD.F3==1 && PORTD.F4==1){
0x01E2	0x1D88      	BTFSS      PORTD, 3
0x01E3	0x29F5      	GOTO       L_straight_com126
0x01E4	0x1E08      	BTFSS      PORTD, 4
0x01E5	0x29F5      	GOTO       L_straight_com126
L__straight_com398:
;final_code_4.c,509 :: 		stopAll();
0x01E6	0x20C4      	CALL       _stopAll
;final_code_4.c,510 :: 		delay_ms(500);
0x01E7	0x300D      	MOVLW      13
0x01E8	0x00FB      	MOVWF      R11
0x01E9	0x30AF      	MOVLW      175
0x01EA	0x00FC      	MOVWF      R12
0x01EB	0x30B6      	MOVLW      182
0x01EC	0x00FD      	MOVWF      R13
L_straight_com127:
0x01ED	0x0BFD      	DECFSZ     R13, 1
0x01EE	0x29ED      	GOTO       L_straight_com127
0x01EF	0x0BFC      	DECFSZ     R12, 1
0x01F0	0x29ED      	GOTO       L_straight_com127
0x01F1	0x0BFB      	DECFSZ     R11, 1
0x01F2	0x29ED      	GOTO       L_straight_com127
0x01F3	0x0000      	NOP
;final_code_4.c,511 :: 		}else if(PORTD.F4==1 && PORTD.F3==0){
0x01F4	0x2A10      	GOTO       L_straight_com128
L_straight_com126:
0x01F5	0x1E08      	BTFSS      PORTD, 4
0x01F6	0x2A03      	GOTO       L_straight_com131
0x01F7	0x1988      	BTFSC      PORTD, 3
0x01F8	0x2A03      	GOTO       L_straight_com131
L__straight_com397:
;final_code_4.c,512 :: 		PWM1_Set_Duty(180);
0x01F9	0x30B4      	MOVLW      180
0x01FA	0x1683      	BSF        STATUS, 5
0x01FB	0x00BB      	MOVWF      FARG_PWM1_Set_Duty_new_duty
0x01FC	0x2048      	CALL       _PWM1_Set_Duty
;final_code_4.c,513 :: 		PWM2_Set_Duty(180);
0x01FD	0x30B4      	MOVLW      180
0x01FE	0x1683      	BSF        STATUS, 5
0x01FF	0x00BB      	MOVWF      FARG_PWM2_Set_Duty_new_duty
0x0200	0x2089      	CALL       _PWM2_Set_Duty
;final_code_4.c,514 :: 		rotateRight();
0x0201	0x20D6      	CALL       _rotateRight
;final_code_4.c,515 :: 		}else if(PORTD.F4==0 && PORTD.F3==1){
0x0202	0x2A10      	GOTO       L_straight_com132
L_straight_com131:
0x0203	0x1A08      	BTFSC      PORTD, 4
0x0204	0x2A10      	GOTO       L_straight_com135
0x0205	0x1D88      	BTFSS      PORTD, 3
0x0206	0x2A10      	GOTO       L_straight_com135
L__straight_com396:
;final_code_4.c,516 :: 		PWM1_Set_Duty(180);
0x0207	0x30B4      	MOVLW      180
0x0208	0x1683      	BSF        STATUS, 5
0x0209	0x00BB      	MOVWF      FARG_PWM1_Set_Duty_new_duty
0x020A	0x2048      	CALL       _PWM1_Set_Duty
;final_code_4.c,517 :: 		PWM2_Set_Duty(180);
0x020B	0x30B4      	MOVLW      180
0x020C	0x1683      	BSF        STATUS, 5
0x020D	0x00BB      	MOVWF      FARG_PWM2_Set_Duty_new_duty
0x020E	0x2089      	CALL       _PWM2_Set_Duty
;final_code_4.c,518 :: 		rotateLeft();
0x020F	0x20CB      	CALL       _rotateLeft
;final_code_4.c,519 :: 		}
L_straight_com135:
L_straight_com132:
L_straight_com128:
;final_code_4.c,522 :: 		}
0x0210	0x0008      	RETURN
; end of _straight_com
_goStraight:
;final_code_4.c,593 :: 		void goStraight(){
;final_code_4.c,595 :: 		int left=0;
0x0211	0x1683      	BSF        STATUS, 5
0x0212	0x1303      	BCF        STATUS, 6
0x0213	0x01B7      	CLRF       goStraight_left_L0
0x0214	0x01B8      	CLRF       goStraight_left_L0+1
;final_code_4.c,596 :: 		int right=0;
0x0215	0x01B9      	CLRF       goStraight_right_L0
0x0216	0x01BA      	CLRF       goStraight_right_L0+1
;final_code_4.c,597 :: 		PWM1_Set_Duty(190);
0x0217	0x30BE      	MOVLW      190
0x0218	0x00BB      	MOVWF      FARG_PWM1_Set_Duty_new_duty
0x0219	0x2048      	CALL       _PWM1_Set_Duty
;final_code_4.c,598 :: 		PWM2_Set_Duty(190);
0x021A	0x30BE      	MOVLW      190
0x021B	0x1683      	BSF        STATUS, 5
0x021C	0x00BB      	MOVWF      FARG_PWM2_Set_Duty_new_duty
0x021D	0x2089      	CALL       _PWM2_Set_Duty
;final_code_4.c,599 :: 		if(TMR0_value>150||TMR1_value>150){
0x021E	0x3080      	MOVLW      128
0x021F	0x00F0      	MOVWF      R0
0x0220	0x3080      	MOVLW      128
0x0221	0x0646      	XORWF      _TMR0_value+1, 0
0x0222	0x0270      	SUBWF      R0, 0
0x0223	0x1D03      	BTFSS      STATUS, 2
0x0224	0x2A27      	GOTO       L__goStraight569
0x0225	0x0845      	MOVF       _TMR0_value, 0
0x0226	0x3C96      	SUBLW      150
L__goStraight569:
0x0227	0x1C03      	BTFSS      STATUS, 0
0x0228	0x2A35      	GOTO       L__goStraight413
0x0229	0x3080      	MOVLW      128
0x022A	0x00F0      	MOVWF      R0
0x022B	0x3080      	MOVLW      128
0x022C	0x0644      	XORWF      _TMR1_value+1, 0
0x022D	0x0270      	SUBWF      R0, 0
0x022E	0x1D03      	BTFSS      STATUS, 2
0x022F	0x2A32      	GOTO       L__goStraight570
0x0230	0x0843      	MOVF       _TMR1_value, 0
0x0231	0x3C96      	SUBLW      150
L__goStraight570:
0x0232	0x1C03      	BTFSS      STATUS, 0
0x0233	0x2A35      	GOTO       L__goStraight413
0x0234	0x2A36      	GOTO       L_goStraight197
L__goStraight413:
;final_code_4.c,600 :: 		initEncoder();
0x0235	0x218D      	CALL       _initEncoder
;final_code_4.c,601 :: 		}
L_goStraight197:
;final_code_4.c,602 :: 		moveF();
0x0236	0x213F      	CALL       _moveF
;final_code_4.c,604 :: 		if(TMR0_value>=TMR1_value){
0x0237	0x3080      	MOVLW      128
0x0238	0x0646      	XORWF      _TMR0_value+1, 0
0x0239	0x00F0      	MOVWF      R0
0x023A	0x3080      	MOVLW      128
0x023B	0x0644      	XORWF      _TMR1_value+1, 0
0x023C	0x0270      	SUBWF      R0, 0
0x023D	0x1D03      	BTFSS      STATUS, 2
0x023E	0x2A41      	GOTO       L__goStraight571
0x023F	0x0843      	MOVF       _TMR1_value, 0
0x0240	0x0245      	SUBWF      _TMR0_value, 0
L__goStraight571:
0x0241	0x1C03      	BTFSS      STATUS, 0
0x0242	0x2A64      	GOTO       L_goStraight198
;final_code_4.c,606 :: 		if(TMR0_value-TMR1_value>=5){
0x0243	0x0843      	MOVF       _TMR1_value, 0
0x0244	0x0245      	SUBWF      _TMR0_value, 0
0x0245	0x00F1      	MOVWF      R1
0x0246	0x0844      	MOVF       _TMR1_value+1, 0
0x0247	0x1C03      	BTFSS      STATUS, 0
0x0248	0x3E01      	ADDLW      1
0x0249	0x0246      	SUBWF      _TMR0_value+1, 0
0x024A	0x00F2      	MOVWF      R1+1
0x024B	0x3080      	MOVLW      128
0x024C	0x0672      	XORWF      R1+1, 0
0x024D	0x00F0      	MOVWF      R0
0x024E	0x3080      	MOVLW      128
0x024F	0x0270      	SUBWF      R0, 0
0x0250	0x1D03      	BTFSS      STATUS, 2
0x0251	0x2A54      	GOTO       L__goStraight572
0x0252	0x3005      	MOVLW      5
0x0253	0x0271      	SUBWF      R1, 0
L__goStraight572:
0x0254	0x1C03      	BTFSS      STATUS, 0
0x0255	0x2A63      	GOTO       L_goStraight199
;final_code_4.c,607 :: 		do{
L_goStraight200:
;final_code_4.c,608 :: 		rightT();
0x0256	0x20F0      	CALL       _rightT
;final_code_4.c,609 :: 		}while(TMR0_value>=TMR1_value);
0x0257	0x3080      	MOVLW      128
0x0258	0x0646      	XORWF      _TMR0_value+1, 0
0x0259	0x00F0      	MOVWF      R0
0x025A	0x3080      	MOVLW      128
0x025B	0x0644      	XORWF      _TMR1_value+1, 0
0x025C	0x0270      	SUBWF      R0, 0
0x025D	0x1D03      	BTFSS      STATUS, 2
0x025E	0x2A61      	GOTO       L__goStraight573
0x025F	0x0843      	MOVF       _TMR1_value, 0
0x0260	0x0245      	SUBWF      _TMR0_value, 0
L__goStraight573:
0x0261	0x1803      	BTFSC      STATUS, 0
0x0262	0x2A56      	GOTO       L_goStraight200
;final_code_4.c,610 :: 		}
L_goStraight199:
;final_code_4.c,613 :: 		}else{
0x0263	0x2A84      	GOTO       L_goStraight203
L_goStraight198:
;final_code_4.c,615 :: 		if(TMR1_value-TMR0_value>=5){
0x0264	0x0845      	MOVF       _TMR0_value, 0
0x0265	0x0243      	SUBWF      _TMR1_value, 0
0x0266	0x00F1      	MOVWF      R1
0x0267	0x0846      	MOVF       _TMR0_value+1, 0
0x0268	0x1C03      	BTFSS      STATUS, 0
0x0269	0x3E01      	ADDLW      1
0x026A	0x0244      	SUBWF      _TMR1_value+1, 0
0x026B	0x00F2      	MOVWF      R1+1
0x026C	0x3080      	MOVLW      128
0x026D	0x0672      	XORWF      R1+1, 0
0x026E	0x00F0      	MOVWF      R0
0x026F	0x3080      	MOVLW      128
0x0270	0x0270      	SUBWF      R0, 0
0x0271	0x1D03      	BTFSS      STATUS, 2
0x0272	0x2A75      	GOTO       L__goStraight574
0x0273	0x3005      	MOVLW      5
0x0274	0x0271      	SUBWF      R1, 0
L__goStraight574:
0x0275	0x1C03      	BTFSS      STATUS, 0
0x0276	0x2A84      	GOTO       L_goStraight204
;final_code_4.c,616 :: 		do{
L_goStraight205:
;final_code_4.c,617 :: 		leftT();
0x0277	0x20E1      	CALL       _leftT
;final_code_4.c,618 :: 		}while(TMR0_value<=TMR1_value);
0x0278	0x3080      	MOVLW      128
0x0279	0x0644      	XORWF      _TMR1_value+1, 0
0x027A	0x00F0      	MOVWF      R0
0x027B	0x3080      	MOVLW      128
0x027C	0x0646      	XORWF      _TMR0_value+1, 0
0x027D	0x0270      	SUBWF      R0, 0
0x027E	0x1D03      	BTFSS      STATUS, 2
0x027F	0x2A82      	GOTO       L__goStraight575
0x0280	0x0845      	MOVF       _TMR0_value, 0
0x0281	0x0243      	SUBWF      _TMR1_value, 0
L__goStraight575:
0x0282	0x1803      	BTFSC      STATUS, 0
0x0283	0x2A77      	GOTO       L_goStraight205
;final_code_4.c,619 :: 		}
L_goStraight204:
;final_code_4.c,620 :: 		}
L_goStraight203:
;final_code_4.c,621 :: 		}
0x0284	0x0008      	RETURN
; end of _goStraight
_getCompass:
;final_code_4.c,943 :: 		int getCompass(){
;final_code_4.c,944 :: 		return (PORTD.F0*4+PORTD.F1*2+PORTD.F2);
0x0285	0x1283      	BCF        STATUS, 5
0x0286	0x1303      	BCF        STATUS, 6
0x0287	0x01F1      	CLRF       R1
0x0288	0x1808      	BTFSC      PORTD, 0
0x0289	0x0AF1      	INCF       R1, 1
0x028A	0x0871      	MOVF       R1, 0
0x028B	0x00F4      	MOVWF      R4
0x028C	0x01F5      	CLRF       R4+1
0x028D	0x0DF4      	RLF        R4, 1
0x028E	0x0DF5      	RLF        R4+1, 1
0x028F	0x1074      	BCF        R4, 0
0x0290	0x0DF4      	RLF        R4, 1
0x0291	0x0DF5      	RLF        R4+1, 1
0x0292	0x1074      	BCF        R4, 0
0x0293	0x01F3      	CLRF       R3
0x0294	0x1888      	BTFSC      PORTD, 1
0x0295	0x0AF3      	INCF       R3, 1
0x0296	0x0873      	MOVF       R3, 0
0x0297	0x00F0      	MOVWF      R0
0x0298	0x01F1      	CLRF       R0+1
0x0299	0x0DF0      	RLF        R0, 1
0x029A	0x0DF1      	RLF        R0+1, 1
0x029B	0x1070      	BCF        R0, 0
0x029C	0x0870      	MOVF       R0, 0
0x029D	0x0774      	ADDWF      R4, 0
0x029E	0x00F2      	MOVWF      R2
0x029F	0x0875      	MOVF       R4+1, 0
0x02A0	0x1803      	BTFSC      STATUS, 0
0x02A1	0x3E01      	ADDLW      1
0x02A2	0x0771      	ADDWF      R0+1, 0
0x02A3	0x00F3      	MOVWF      R2+1
0x02A4	0x01F0      	CLRF       R0
0x02A5	0x1908      	BTFSC      PORTD, 2
0x02A6	0x0AF0      	INCF       R0, 1
0x02A7	0x3000      	MOVLW      0
0x02A8	0x00F1      	MOVWF      R0+1
0x02A9	0x0872      	MOVF       R2, 0
0x02AA	0x07F0      	ADDWF      R0, 1
0x02AB	0x0873      	MOVF       R2+1, 0
0x02AC	0x1803      	BTFSC      STATUS, 0
0x02AD	0x3E01      	ADDLW      1
0x02AE	0x07F1      	ADDWF      R0+1, 1
;final_code_4.c,945 :: 		}
0x02AF	0x0008      	RETURN
; end of _getCompass
_getDis3:
;final_code_4.c,895 :: 		int getDis3(){
;final_code_4.c,896 :: 		PORTB.F6=0;
0x02B0	0x1283      	BCF        STATUS, 5
0x02B1	0x1303      	BCF        STATUS, 6
0x02B2	0x1306      	BCF        PORTB, 6
;final_code_4.c,897 :: 		Delay_us(12);
0x02B3	0x3013      	MOVLW      19
0x02B4	0x00FD      	MOVWF      R13
L_getDis3300:
0x02B5	0x0BFD      	DECFSZ     R13, 1
0x02B6	0x2AB5      	GOTO       L_getDis3300
0x02B7	0x0000      	NOP
0x02B8	0x0000      	NOP
;final_code_4.c,898 :: 		PORTB.F6=1;
0x02B9	0x1706      	BSF        PORTB, 6
;final_code_4.c,899 :: 		Delay_us(12);
0x02BA	0x3013      	MOVLW      19
0x02BB	0x00FD      	MOVWF      R13
L_getDis3301:
0x02BC	0x0BFD      	DECFSZ     R13, 1
0x02BD	0x2ABC      	GOTO       L_getDis3301
0x02BE	0x0000      	NOP
0x02BF	0x0000      	NOP
;final_code_4.c,900 :: 		PORTB.F6=0;
0x02C0	0x1306      	BCF        PORTB, 6
;final_code_4.c,901 :: 		dis1= pulseIn3();
0x02C1	0x20FF      	CALL       _pulseIn3
0x02C2	0x1283      	BCF        STATUS, 5
0x02C3	0x1303      	BCF        STATUS, 6
0x02C4	0x0870      	MOVF       R0, 0
0x02C5	0x00ED      	MOVWF      _dis1
0x02C6	0x0871      	MOVF       R0+1, 0
0x02C7	0x00EE      	MOVWF      _dis1+1
;final_code_4.c,902 :: 		Delay_ms(20);
0x02C8	0x3082      	MOVLW      130
0x02C9	0x00FC      	MOVWF      R12
0x02CA	0x30DD      	MOVLW      221
0x02CB	0x00FD      	MOVWF      R13
L_getDis3302:
0x02CC	0x0BFD      	DECFSZ     R13, 1
0x02CD	0x2ACC      	GOTO       L_getDis3302
0x02CE	0x0BFC      	DECFSZ     R12, 1
0x02CF	0x2ACC      	GOTO       L_getDis3302
0x02D0	0x0000      	NOP
0x02D1	0x0000      	NOP
;final_code_4.c,903 :: 		return dis1/2;
0x02D2	0x086D      	MOVF       _dis1, 0
0x02D3	0x00F0      	MOVWF      R0
0x02D4	0x086E      	MOVF       _dis1+1, 0
0x02D5	0x00F1      	MOVWF      R0+1
0x02D6	0x0CF1      	RRF        R0+1, 1
0x02D7	0x0CF0      	RRF        R0, 1
0x02D8	0x13F1      	BCF        R0+1, 7
0x02D9	0x1B71      	BTFSC      R0+1, 6
0x02DA	0x17F1      	BSF        R0+1, 7
;final_code_4.c,905 :: 		}
0x02DB	0x0008      	RETURN
; end of _getDis3
_getDis2:
;final_code_4.c,883 :: 		int getDis2(){
;final_code_4.c,884 :: 		PORTB.F7=0;
0x02DC	0x1283      	BCF        STATUS, 5
0x02DD	0x1303      	BCF        STATUS, 6
0x02DE	0x1386      	BCF        PORTB, 7
;final_code_4.c,885 :: 		Delay_us(12);
0x02DF	0x3013      	MOVLW      19
0x02E0	0x00FD      	MOVWF      R13
L_getDis2297:
0x02E1	0x0BFD      	DECFSZ     R13, 1
0x02E2	0x2AE1      	GOTO       L_getDis2297
0x02E3	0x0000      	NOP
0x02E4	0x0000      	NOP
;final_code_4.c,886 :: 		PORTB.F7=1;
0x02E5	0x1786      	BSF        PORTB, 7
;final_code_4.c,887 :: 		Delay_us(12);
0x02E6	0x3013      	MOVLW      19
0x02E7	0x00FD      	MOVWF      R13
L_getDis2298:
0x02E8	0x0BFD      	DECFSZ     R13, 1
0x02E9	0x2AE8      	GOTO       L_getDis2298
0x02EA	0x0000      	NOP
0x02EB	0x0000      	NOP
;final_code_4.c,888 :: 		PORTB.F7=0;
0x02EC	0x1386      	BCF        PORTB, 7
;final_code_4.c,889 :: 		dis1= pulseIn2();
0x02ED	0x2152      	CALL       _pulseIn2
0x02EE	0x0870      	MOVF       R0, 0
0x02EF	0x00ED      	MOVWF      _dis1
0x02F0	0x0871      	MOVF       R0+1, 0
0x02F1	0x00EE      	MOVWF      _dis1+1
;final_code_4.c,890 :: 		Delay_ms(20);
0x02F2	0x3082      	MOVLW      130
0x02F3	0x00FC      	MOVWF      R12
0x02F4	0x30DD      	MOVLW      221
0x02F5	0x00FD      	MOVWF      R13
L_getDis2299:
0x02F6	0x0BFD      	DECFSZ     R13, 1
0x02F7	0x2AF6      	GOTO       L_getDis2299
0x02F8	0x0BFC      	DECFSZ     R12, 1
0x02F9	0x2AF6      	GOTO       L_getDis2299
0x02FA	0x0000      	NOP
0x02FB	0x0000      	NOP
;final_code_4.c,891 :: 		return dis1/2;
0x02FC	0x086D      	MOVF       _dis1, 0
0x02FD	0x00F0      	MOVWF      R0
0x02FE	0x086E      	MOVF       _dis1+1, 0
0x02FF	0x00F1      	MOVWF      R0+1
0x0300	0x0CF1      	RRF        R0+1, 1
0x0301	0x0CF0      	RRF        R0, 1
0x0302	0x13F1      	BCF        R0+1, 7
0x0303	0x1B71      	BTFSC      R0+1, 6
0x0304	0x17F1      	BSF        R0+1, 7
;final_code_4.c,893 :: 		}
0x0305	0x0008      	RETURN
; end of _getDis2
_avoidObstacles:
;final_code_4.c,996 :: 		void avoidObstacles(){
;final_code_4.c,997 :: 		PWM1_Set_Duty(190);
0x0306	0x30BE      	MOVLW      190
0x0307	0x1683      	BSF        STATUS, 5
0x0308	0x1303      	BCF        STATUS, 6
0x0309	0x00BB      	MOVWF      FARG_PWM1_Set_Duty_new_duty
0x030A	0x2048      	CALL       _PWM1_Set_Duty
;final_code_4.c,998 :: 		PWM2_Set_Duty(190);
0x030B	0x30BE      	MOVLW      190
0x030C	0x1683      	BSF        STATUS, 5
0x030D	0x00BB      	MOVWF      FARG_PWM2_Set_Duty_new_duty
0x030E	0x2089      	CALL       _PWM2_Set_Duty
;final_code_4.c,999 :: 		printClockEncoders();
0x030F	0x2194      	CALL       _printClockEncoders
;final_code_4.c,1001 :: 		if(stat==0){
0x0310	0x3000      	MOVLW      0
0x0311	0x0642      	XORWF      _stat+1, 0
0x0312	0x1D03      	BTFSS      STATUS, 2
0x0313	0x2B16      	GOTO       L__avoidObstacles635
0x0314	0x3000      	MOVLW      0
0x0315	0x0641      	XORWF      _stat, 0
L__avoidObstacles635:
0x0316	0x1D03      	BTFSS      STATUS, 2
0x0317	0x2B87      	GOTO       L_avoidObstacles312
;final_code_4.c,1002 :: 		getDis3();
0x0318	0x22B0      	CALL       _getDis3
;final_code_4.c,1003 :: 		getDis2();
0x0319	0x22DC      	CALL       _getDis2
;final_code_4.c,1004 :: 		if((counter2<200)||(counter3<200)){
0x031A	0x3080      	MOVLW      128
0x031B	0x066C      	XORWF      _counter2+1, 0
0x031C	0x00F0      	MOVWF      R0
0x031D	0x3080      	MOVLW      128
0x031E	0x0270      	SUBWF      R0, 0
0x031F	0x1D03      	BTFSS      STATUS, 2
0x0320	0x2B23      	GOTO       L__avoidObstacles636
0x0321	0x30C8      	MOVLW      200
0x0322	0x026B      	SUBWF      _counter2, 0
L__avoidObstacles636:
0x0323	0x1C03      	BTFSS      STATUS, 0
0x0324	0x2B32      	GOTO       L__avoidObstacles423
0x0325	0x3080      	MOVLW      128
0x0326	0x1683      	BSF        STATUS, 5
0x0327	0x0621      	XORWF      _counter3+1, 0
0x0328	0x00F0      	MOVWF      R0
0x0329	0x3080      	MOVLW      128
0x032A	0x0270      	SUBWF      R0, 0
0x032B	0x1D03      	BTFSS      STATUS, 2
0x032C	0x2B2F      	GOTO       L__avoidObstacles637
0x032D	0x30C8      	MOVLW      200
0x032E	0x0220      	SUBWF      _counter3, 0
L__avoidObstacles637:
0x032F	0x1C03      	BTFSS      STATUS, 0
0x0330	0x2B32      	GOTO       L__avoidObstacles423
0x0331	0x2B85      	GOTO       L_avoidObstacles315
L__avoidObstacles423:
;final_code_4.c,1005 :: 		stopAll();
0x0332	0x20C4      	CALL       _stopAll
;final_code_4.c,1006 :: 		PWM1_Set_Duty(180);
0x0333	0x30B4      	MOVLW      180
0x0334	0x1683      	BSF        STATUS, 5
0x0335	0x00BB      	MOVWF      FARG_PWM1_Set_Duty_new_duty
0x0336	0x2048      	CALL       _PWM1_Set_Duty
;final_code_4.c,1007 :: 		PWM2_Set_Duty(180);
0x0337	0x30B4      	MOVLW      180
0x0338	0x1683      	BSF        STATUS, 5
0x0339	0x00BB      	MOVWF      FARG_PWM2_Set_Duty_new_duty
0x033A	0x2089      	CALL       _PWM2_Set_Duty
;final_code_4.c,1008 :: 		normalization++;
0x033B	0x0ABF      	INCF       _normalization, 1
0x033C	0x1903      	BTFSC      STATUS, 2
0x033D	0x0AC0      	INCF       _normalization+1, 1
;final_code_4.c,1009 :: 		while(clockEncoder!=0){
L_avoidObstacles316:
0x033E	0x3000      	MOVLW      0
0x033F	0x062A      	XORWF      _clockEncoder+1, 0
0x0340	0x1D03      	BTFSS      STATUS, 2
0x0341	0x2B44      	GOTO       L__avoidObstacles638
0x0342	0x3000      	MOVLW      0
0x0343	0x0629      	XORWF      _clockEncoder, 0
L__avoidObstacles638:
0x0344	0x1903      	BTFSC      STATUS, 2
0x0345	0x2B60      	GOTO       L_avoidObstacles317
;final_code_4.c,1010 :: 		if(clockEncoder>0){
0x0346	0x3080      	MOVLW      128
0x0347	0x00F0      	MOVWF      R0
0x0348	0x3080      	MOVLW      128
0x0349	0x062A      	XORWF      _clockEncoder+1, 0
0x034A	0x0270      	SUBWF      R0, 0
0x034B	0x1D03      	BTFSS      STATUS, 2
0x034C	0x2B4F      	GOTO       L__avoidObstacles639
0x034D	0x0829      	MOVF       _clockEncoder, 0
0x034E	0x3C00      	SUBLW      0
L__avoidObstacles639:
0x034F	0x1803      	BTFSC      STATUS, 0
0x0350	0x2B53      	GOTO       L_avoidObstacles318
;final_code_4.c,1011 :: 		rotateRight();
0x0351	0x20D6      	CALL       _rotateRight
;final_code_4.c,1012 :: 		}else if(clockEncoder<0){
0x0352	0x2B5F      	GOTO       L_avoidObstacles319
L_avoidObstacles318:
0x0353	0x3080      	MOVLW      128
0x0354	0x062A      	XORWF      _clockEncoder+1, 0
0x0355	0x00F0      	MOVWF      R0
0x0356	0x3080      	MOVLW      128
0x0357	0x0270      	SUBWF      R0, 0
0x0358	0x1D03      	BTFSS      STATUS, 2
0x0359	0x2B5C      	GOTO       L__avoidObstacles640
0x035A	0x3000      	MOVLW      0
0x035B	0x0229      	SUBWF      _clockEncoder, 0
L__avoidObstacles640:
0x035C	0x1803      	BTFSC      STATUS, 0
0x035D	0x2B5F      	GOTO       L_avoidObstacles320
;final_code_4.c,1013 :: 		rotateLeft();
0x035E	0x20CB      	CALL       _rotateLeft
;final_code_4.c,1014 :: 		}
L_avoidObstacles320:
L_avoidObstacles319:
;final_code_4.c,1015 :: 		}
0x035F	0x2B3E      	GOTO       L_avoidObstacles316
L_avoidObstacles317:
;final_code_4.c,1016 :: 		stopAll();
0x0360	0x20C4      	CALL       _stopAll
;final_code_4.c,1017 :: 		Delay_ms(500);
0x0361	0x300D      	MOVLW      13
0x0362	0x00FB      	MOVWF      R11
0x0363	0x30AF      	MOVLW      175
0x0364	0x00FC      	MOVWF      R12
0x0365	0x30B6      	MOVLW      182
0x0366	0x00FD      	MOVWF      R13
L_avoidObstacles321:
0x0367	0x0BFD      	DECFSZ     R13, 1
0x0368	0x2B67      	GOTO       L_avoidObstacles321
0x0369	0x0BFC      	DECFSZ     R12, 1
0x036A	0x2B67      	GOTO       L_avoidObstacles321
0x036B	0x0BFB      	DECFSZ     R11, 1
0x036C	0x2B67      	GOTO       L_avoidObstacles321
0x036D	0x0000      	NOP
;final_code_4.c,1019 :: 		if(getCompass()>=4){
0x036E	0x2285      	CALL       _getCompass
0x036F	0x3080      	MOVLW      128
0x0370	0x0671      	XORWF      R0+1, 0
0x0371	0x00F2      	MOVWF      R2
0x0372	0x3080      	MOVLW      128
0x0373	0x0272      	SUBWF      R2, 0
0x0374	0x1D03      	BTFSS      STATUS, 2
0x0375	0x2B78      	GOTO       L__avoidObstacles641
0x0376	0x3004      	MOVLW      4
0x0377	0x0270      	SUBWF      R0, 0
L__avoidObstacles641:
0x0378	0x1C03      	BTFSS      STATUS, 0
0x0379	0x2B7F      	GOTO       L_avoidObstacles322
;final_code_4.c,1020 :: 		stat=1;
0x037A	0x3001      	MOVLW      1
0x037B	0x00C1      	MOVWF      _stat
0x037C	0x3000      	MOVLW      0
0x037D	0x00C2      	MOVWF      _stat+1
;final_code_4.c,1021 :: 		}else{
0x037E	0x2B83      	GOTO       L_avoidObstacles323
L_avoidObstacles322:
;final_code_4.c,1022 :: 		stat=2;
0x037F	0x3002      	MOVLW      2
0x0380	0x00C1      	MOVWF      _stat
0x0381	0x3000      	MOVLW      0
0x0382	0x00C2      	MOVWF      _stat+1
;final_code_4.c,1023 :: 		}
L_avoidObstacles323:
;final_code_4.c,1024 :: 		initEncoder();
0x0383	0x218D      	CALL       _initEncoder
;final_code_4.c,1025 :: 		}else{
0x0384	0x2B86      	GOTO       L_avoidObstacles324
L_avoidObstacles315:
;final_code_4.c,1027 :: 		goStraight();
0x0385	0x2211      	CALL       _goStraight
;final_code_4.c,1029 :: 		}
L_avoidObstacles324:
;final_code_4.c,1030 :: 		}else if(stat==1){
0x0386	0x2D21      	GOTO       L_avoidObstacles325
L_avoidObstacles312:
0x0387	0x3000      	MOVLW      0
0x0388	0x0642      	XORWF      _stat+1, 0
0x0389	0x1D03      	BTFSS      STATUS, 2
0x038A	0x2B8D      	GOTO       L__avoidObstacles642
0x038B	0x3001      	MOVLW      1
0x038C	0x0641      	XORWF      _stat, 0
L__avoidObstacles642:
0x038D	0x1D03      	BTFSS      STATUS, 2
0x038E	0x2C17      	GOTO       L_avoidObstacles326
;final_code_4.c,1031 :: 		PWM1_Set_Duty(180);
0x038F	0x30B4      	MOVLW      180
0x0390	0x1683      	BSF        STATUS, 5
0x0391	0x00BB      	MOVWF      FARG_PWM1_Set_Duty_new_duty
0x0392	0x2048      	CALL       _PWM1_Set_Duty
;final_code_4.c,1032 :: 		PWM2_Set_Duty(180);
0x0393	0x30B4      	MOVLW      180
0x0394	0x1683      	BSF        STATUS, 5
0x0395	0x00BB      	MOVWF      FARG_PWM2_Set_Duty_new_duty
0x0396	0x2089      	CALL       _PWM2_Set_Duty
;final_code_4.c,1034 :: 		rotateRight();
0x0397	0x20D6      	CALL       _rotateRight
;final_code_4.c,1037 :: 		getDis3();
0x0398	0x22B0      	CALL       _getDis3
;final_code_4.c,1038 :: 		getDis2();
0x0399	0x22DC      	CALL       _getDis2
;final_code_4.c,1043 :: 		if((counter2>300)&&(counter3>300)){
0x039A	0x3080      	MOVLW      128
0x039B	0x3A01      	XORLW      1
0x039C	0x00F0      	MOVWF      R0
0x039D	0x3080      	MOVLW      128
0x039E	0x066C      	XORWF      _counter2+1, 0
0x039F	0x0270      	SUBWF      R0, 0
0x03A0	0x1D03      	BTFSS      STATUS, 2
0x03A1	0x2BA4      	GOTO       L__avoidObstacles643
0x03A2	0x086B      	MOVF       _counter2, 0
0x03A3	0x3C2C      	SUBLW      44
L__avoidObstacles643:
0x03A4	0x1803      	BTFSC      STATUS, 0
0x03A5	0x2BBE      	GOTO       L_avoidObstacles329
0x03A6	0x3080      	MOVLW      128
0x03A7	0x3A01      	XORLW      1
0x03A8	0x00F0      	MOVWF      R0
0x03A9	0x3080      	MOVLW      128
0x03AA	0x1683      	BSF        STATUS, 5
0x03AB	0x0621      	XORWF      _counter3+1, 0
0x03AC	0x0270      	SUBWF      R0, 0
0x03AD	0x1D03      	BTFSS      STATUS, 2
0x03AE	0x2BB1      	GOTO       L__avoidObstacles644
0x03AF	0x0820      	MOVF       _counter3, 0
0x03B0	0x3C2C      	SUBLW      44
L__avoidObstacles644:
0x03B1	0x1803      	BTFSC      STATUS, 0
0x03B2	0x2BBE      	GOTO       L_avoidObstacles329
L__avoidObstacles422:
;final_code_4.c,1044 :: 		stopAll();
0x03B3	0x20C4      	CALL       _stopAll
;final_code_4.c,1045 :: 		direction=1;
0x03B4	0x3001      	MOVLW      1
0x03B5	0x00B9      	MOVWF      _direction
0x03B6	0x3000      	MOVLW      0
0x03B7	0x00BA      	MOVWF      _direction+1
;final_code_4.c,1046 :: 		stat=3;
0x03B8	0x3003      	MOVLW      3
0x03B9	0x00C1      	MOVWF      _stat
0x03BA	0x3000      	MOVLW      0
0x03BB	0x00C2      	MOVWF      _stat+1
;final_code_4.c,1047 :: 		noDirection=0;
0x03BC	0x01B1      	CLRF       _noDirection
0x03BD	0x01B2      	CLRF       _noDirection+1
;final_code_4.c,1049 :: 		}
L_avoidObstacles329:
0x03BE	0x1283      	BCF        STATUS, 5
;final_code_4.c,1050 :: 		if(TMR0_value>15&&stat!=3){
0x03BF	0x3080      	MOVLW      128
0x03C0	0x00F0      	MOVWF      R0
0x03C1	0x3080      	MOVLW      128
0x03C2	0x0646      	XORWF      _TMR0_value+1, 0
0x03C3	0x0270      	SUBWF      R0, 0
0x03C4	0x1D03      	BTFSS      STATUS, 2
0x03C5	0x2BC8      	GOTO       L__avoidObstacles645
0x03C6	0x0845      	MOVF       _TMR0_value, 0
0x03C7	0x3C0F      	SUBLW      15
L__avoidObstacles645:
0x03C8	0x1803      	BTFSC      STATUS, 0
0x03C9	0x2C16      	GOTO       L_avoidObstacles332
0x03CA	0x3000      	MOVLW      0
0x03CB	0x0642      	XORWF      _stat+1, 0
0x03CC	0x1D03      	BTFSS      STATUS, 2
0x03CD	0x2BD0      	GOTO       L__avoidObstacles646
0x03CE	0x3003      	MOVLW      3
0x03CF	0x0641      	XORWF      _stat, 0
L__avoidObstacles646:
0x03D0	0x1903      	BTFSC      STATUS, 2
0x03D1	0x2C16      	GOTO       L_avoidObstacles332
L__avoidObstacles421:
;final_code_4.c,1051 :: 		noDirection++;
0x03D2	0x0AB1      	INCF       _noDirection, 1
0x03D3	0x1903      	BTFSC      STATUS, 2
0x03D4	0x0AB2      	INCF       _noDirection+1, 1
;final_code_4.c,1052 :: 		if(noDirection>2){
0x03D5	0x3080      	MOVLW      128
0x03D6	0x00F0      	MOVWF      R0
0x03D7	0x3080      	MOVLW      128
0x03D8	0x0632      	XORWF      _noDirection+1, 0
0x03D9	0x0270      	SUBWF      R0, 0
0x03DA	0x1D03      	BTFSS      STATUS, 2
0x03DB	0x2BDE      	GOTO       L__avoidObstacles647
0x03DC	0x0831      	MOVF       _noDirection, 0
0x03DD	0x3C02      	SUBLW      2
L__avoidObstacles647:
0x03DE	0x1803      	BTFSC      STATUS, 0
0x03DF	0x2BE5      	GOTO       L_avoidObstacles333
;final_code_4.c,1053 :: 		stat=4;  // when no where to go
0x03E0	0x3004      	MOVLW      4
0x03E1	0x00C1      	MOVWF      _stat
0x03E2	0x3000      	MOVLW      0
0x03E3	0x00C2      	MOVWF      _stat+1
;final_code_4.c,1054 :: 		}else{
0x03E4	0x2BE9      	GOTO       L_avoidObstacles334
L_avoidObstacles333:
;final_code_4.c,1055 :: 		stat=2;
0x03E5	0x3002      	MOVLW      2
0x03E6	0x00C1      	MOVWF      _stat
0x03E7	0x3000      	MOVLW      0
0x03E8	0x00C2      	MOVWF      _stat+1
;final_code_4.c,1056 :: 		}
L_avoidObstacles334:
;final_code_4.c,1057 :: 		initEncoder();
0x03E9	0x218D      	CALL       _initEncoder
;final_code_4.c,1058 :: 		stopAll();
0x03EA	0x20C4      	CALL       _stopAll
;final_code_4.c,1059 :: 		Delay_ms(500);
0x03EB	0x300D      	MOVLW      13
0x03EC	0x00FB      	MOVWF      R11
0x03ED	0x30AF      	MOVLW      175
0x03EE	0x00FC      	MOVWF      R12
0x03EF	0x30B6      	MOVLW      182
0x03F0	0x00FD      	MOVWF      R13
L_avoidObstacles335:
0x03F1	0x0BFD      	DECFSZ     R13, 1
0x03F2	0x2BF1      	GOTO       L_avoidObstacles335
0x03F3	0x0BFC      	DECFSZ     R12, 1
0x03F4	0x2BF1      	GOTO       L_avoidObstacles335
0x03F5	0x0BFB      	DECFSZ     R11, 1
0x03F6	0x2BF1      	GOTO       L_avoidObstacles335
0x03F7	0x0000      	NOP
;final_code_4.c,1060 :: 		while(TMR0_value<15){
L_avoidObstacles336:
0x03F8	0x3080      	MOVLW      128
0x03F9	0x0646      	XORWF      _TMR0_value+1, 0
0x03FA	0x00F0      	MOVWF      R0
0x03FB	0x3080      	MOVLW      128
0x03FC	0x0270      	SUBWF      R0, 0
0x03FD	0x1D03      	BTFSS      STATUS, 2
0x03FE	0x2C01      	GOTO       L__avoidObstacles648
0x03FF	0x300F      	MOVLW      15
0x0400	0x0245      	SUBWF      _TMR0_value, 0
L__avoidObstacles648:
0x0401	0x1803      	BTFSC      STATUS, 0
0x0402	0x2C06      	GOTO       L_avoidObstacles337
;final_code_4.c,1061 :: 		rotateLeft();
0x0403	0x20CB      	CALL       _rotateLeft
;final_code_4.c,1062 :: 		printClockEncoders();
0x0404	0x2194      	CALL       _printClockEncoders
;final_code_4.c,1063 :: 		}
0x0405	0x2BF8      	GOTO       L_avoidObstacles336
L_avoidObstacles337:
;final_code_4.c,1064 :: 		stopAll();
0x0406	0x20C4      	CALL       _stopAll
;final_code_4.c,1065 :: 		Delay_ms(500);
0x0407	0x300D      	MOVLW      13
0x0408	0x00FB      	MOVWF      R11
0x0409	0x30AF      	MOVLW      175
0x040A	0x00FC      	MOVWF      R12
0x040B	0x30B6      	MOVLW      182
0x040C	0x00FD      	MOVWF      R13
L_avoidObstacles338:
0x040D	0x0BFD      	DECFSZ     R13, 1
0x040E	0x2C0D      	GOTO       L_avoidObstacles338
0x040F	0x0BFC      	DECFSZ     R12, 1
0x0410	0x2C0D      	GOTO       L_avoidObstacles338
0x0411	0x0BFB      	DECFSZ     R11, 1
0x0412	0x2C0D      	GOTO       L_avoidObstacles338
0x0413	0x0000      	NOP
;final_code_4.c,1067 :: 		initEncoder();
0x0414	0x218D      	CALL       _initEncoder
;final_code_4.c,1068 :: 		stopAll();
0x0415	0x20C4      	CALL       _stopAll
;final_code_4.c,1069 :: 		}
L_avoidObstacles332:
;final_code_4.c,1071 :: 		}else if(stat==2){
0x0416	0x2D21      	GOTO       L_avoidObstacles339
L_avoidObstacles326:
0x0417	0x3000      	MOVLW      0
0x0418	0x0642      	XORWF      _stat+1, 0
0x0419	0x1D03      	BTFSS      STATUS, 2
0x041A	0x2C1D      	GOTO       L__avoidObstacles649
0x041B	0x3002      	MOVLW      2
0x041C	0x0641      	XORWF      _stat, 0
L__avoidObstacles649:
0x041D	0x1D03      	BTFSS      STATUS, 2
0x041E	0x2CA4      	GOTO       L_avoidObstacles340
;final_code_4.c,1072 :: 		PWM1_Set_Duty(180);
0x041F	0x30B4      	MOVLW      180
0x0420	0x1683      	BSF        STATUS, 5
0x0421	0x00BB      	MOVWF      FARG_PWM1_Set_Duty_new_duty
0x0422	0x2048      	CALL       _PWM1_Set_Duty
;final_code_4.c,1073 :: 		PWM2_Set_Duty(180);
0x0423	0x30B4      	MOVLW      180
0x0424	0x1683      	BSF        STATUS, 5
0x0425	0x00BB      	MOVWF      FARG_PWM2_Set_Duty_new_duty
0x0426	0x2089      	CALL       _PWM2_Set_Duty
;final_code_4.c,1075 :: 		rotateLeft();
0x0427	0x20CB      	CALL       _rotateLeft
;final_code_4.c,1078 :: 		getDis3();
0x0428	0x22B0      	CALL       _getDis3
;final_code_4.c,1079 :: 		getDis2();
0x0429	0x22DC      	CALL       _getDis2
;final_code_4.c,1082 :: 		if((counter2>300)&&(counter3>300)){
0x042A	0x3080      	MOVLW      128
0x042B	0x3A01      	XORLW      1
0x042C	0x00F0      	MOVWF      R0
0x042D	0x3080      	MOVLW      128
0x042E	0x066C      	XORWF      _counter2+1, 0
0x042F	0x0270      	SUBWF      R0, 0
0x0430	0x1D03      	BTFSS      STATUS, 2
0x0431	0x2C34      	GOTO       L__avoidObstacles650
0x0432	0x086B      	MOVF       _counter2, 0
0x0433	0x3C2C      	SUBLW      44
L__avoidObstacles650:
0x0434	0x1803      	BTFSC      STATUS, 0
0x0435	0x2C4C      	GOTO       L_avoidObstacles343
0x0436	0x3080      	MOVLW      128
0x0437	0x3A01      	XORLW      1
0x0438	0x00F0      	MOVWF      R0
0x0439	0x3080      	MOVLW      128
0x043A	0x1683      	BSF        STATUS, 5
0x043B	0x0621      	XORWF      _counter3+1, 0
0x043C	0x0270      	SUBWF      R0, 0
0x043D	0x1D03      	BTFSS      STATUS, 2
0x043E	0x2C41      	GOTO       L__avoidObstacles651
0x043F	0x0820      	MOVF       _counter3, 0
0x0440	0x3C2C      	SUBLW      44
L__avoidObstacles651:
0x0441	0x1803      	BTFSC      STATUS, 0
0x0442	0x2C4C      	GOTO       L_avoidObstacles343
L__avoidObstacles420:
;final_code_4.c,1083 :: 		stopAll();
0x0443	0x20C4      	CALL       _stopAll
;final_code_4.c,1084 :: 		direction=0;
0x0444	0x01B9      	CLRF       _direction
0x0445	0x01BA      	CLRF       _direction+1
;final_code_4.c,1085 :: 		stat=3;
0x0446	0x3003      	MOVLW      3
0x0447	0x00C1      	MOVWF      _stat
0x0448	0x3000      	MOVLW      0
0x0449	0x00C2      	MOVWF      _stat+1
;final_code_4.c,1086 :: 		noDirection=0;
0x044A	0x01B1      	CLRF       _noDirection
0x044B	0x01B2      	CLRF       _noDirection+1
;final_code_4.c,1087 :: 		}
L_avoidObstacles343:
0x044C	0x1283      	BCF        STATUS, 5
;final_code_4.c,1088 :: 		if(TMR0_value>15&&stat!=3){
0x044D	0x3080      	MOVLW      128
0x044E	0x00F0      	MOVWF      R0
0x044F	0x3080      	MOVLW      128
0x0450	0x0646      	XORWF      _TMR0_value+1, 0
0x0451	0x0270      	SUBWF      R0, 0
0x0452	0x1D03      	BTFSS      STATUS, 2
0x0453	0x2C56      	GOTO       L__avoidObstacles652
0x0454	0x0845      	MOVF       _TMR0_value, 0
0x0455	0x3C0F      	SUBLW      15
L__avoidObstacles652:
0x0456	0x1803      	BTFSC      STATUS, 0
0x0457	0x2CA3      	GOTO       L_avoidObstacles346
0x0458	0x3000      	MOVLW      0
0x0459	0x0642      	XORWF      _stat+1, 0
0x045A	0x1D03      	BTFSS      STATUS, 2
0x045B	0x2C5E      	GOTO       L__avoidObstacles653
0x045C	0x3003      	MOVLW      3
0x045D	0x0641      	XORWF      _stat, 0
L__avoidObstacles653:
0x045E	0x1903      	BTFSC      STATUS, 2
0x045F	0x2CA3      	GOTO       L_avoidObstacles346
L__avoidObstacles419:
;final_code_4.c,1089 :: 		noDirection++;
0x0460	0x0AB1      	INCF       _noDirection, 1
0x0461	0x1903      	BTFSC      STATUS, 2
0x0462	0x0AB2      	INCF       _noDirection+1, 1
;final_code_4.c,1090 :: 		if(noDirection>2){
0x0463	0x3080      	MOVLW      128
0x0464	0x00F0      	MOVWF      R0
0x0465	0x3080      	MOVLW      128
0x0466	0x0632      	XORWF      _noDirection+1, 0
0x0467	0x0270      	SUBWF      R0, 0
0x0468	0x1D03      	BTFSS      STATUS, 2
0x0469	0x2C6C      	GOTO       L__avoidObstacles654
0x046A	0x0831      	MOVF       _noDirection, 0
0x046B	0x3C02      	SUBLW      2
L__avoidObstacles654:
0x046C	0x1803      	BTFSC      STATUS, 0
0x046D	0x2C73      	GOTO       L_avoidObstacles347
;final_code_4.c,1091 :: 		stat=4;  // when no where to go
0x046E	0x3004      	MOVLW      4
0x046F	0x00C1      	MOVWF      _stat
0x0470	0x3000      	MOVLW      0
0x0471	0x00C2      	MOVWF      _stat+1
;final_code_4.c,1092 :: 		}else{
0x0472	0x2C77      	GOTO       L_avoidObstacles348
L_avoidObstacles347:
;final_code_4.c,1093 :: 		stat=1;
0x0473	0x3001      	MOVLW      1
0x0474	0x00C1      	MOVWF      _stat
0x0475	0x3000      	MOVLW      0
0x0476	0x00C2      	MOVWF      _stat+1
;final_code_4.c,1094 :: 		}
L_avoidObstacles348:
;final_code_4.c,1095 :: 		initEncoder();
0x0477	0x218D      	CALL       _initEncoder
;final_code_4.c,1096 :: 		stopAll();
0x0478	0x20C4      	CALL       _stopAll
;final_code_4.c,1097 :: 		Delay_ms(500);
0x0479	0x300D      	MOVLW      13
0x047A	0x00FB      	MOVWF      R11
0x047B	0x30AF      	MOVLW      175
0x047C	0x00FC      	MOVWF      R12
0x047D	0x30B6      	MOVLW      182
0x047E	0x00FD      	MOVWF      R13
L_avoidObstacles349:
0x047F	0x0BFD      	DECFSZ     R13, 1
0x0480	0x2C7F      	GOTO       L_avoidObstacles349
0x0481	0x0BFC      	DECFSZ     R12, 1
0x0482	0x2C7F      	GOTO       L_avoidObstacles349
0x0483	0x0BFB      	DECFSZ     R11, 1
0x0484	0x2C7F      	GOTO       L_avoidObstacles349
0x0485	0x0000      	NOP
;final_code_4.c,1098 :: 		while(TMR0_value<15){
L_avoidObstacles350:
0x0486	0x3080      	MOVLW      128
0x0487	0x0646      	XORWF      _TMR0_value+1, 0
0x0488	0x00F0      	MOVWF      R0
0x0489	0x3080      	MOVLW      128
0x048A	0x0270      	SUBWF      R0, 0
0x048B	0x1D03      	BTFSS      STATUS, 2
0x048C	0x2C8F      	GOTO       L__avoidObstacles655
0x048D	0x300F      	MOVLW      15
0x048E	0x0245      	SUBWF      _TMR0_value, 0
L__avoidObstacles655:
0x048F	0x1803      	BTFSC      STATUS, 0
0x0490	0x2C94      	GOTO       L_avoidObstacles351
;final_code_4.c,1099 :: 		rotateRight();
0x0491	0x20D6      	CALL       _rotateRight
;final_code_4.c,1100 :: 		printClockEncoders();
0x0492	0x2194      	CALL       _printClockEncoders
;final_code_4.c,1101 :: 		}
0x0493	0x2C86      	GOTO       L_avoidObstacles350
L_avoidObstacles351:
;final_code_4.c,1103 :: 		initEncoder();
0x0494	0x218D      	CALL       _initEncoder
;final_code_4.c,1104 :: 		stopAll();
0x0495	0x20C4      	CALL       _stopAll
;final_code_4.c,1105 :: 		Delay_ms(500);
0x0496	0x300D      	MOVLW      13
0x0497	0x00FB      	MOVWF      R11
0x0498	0x30AF      	MOVLW      175
0x0499	0x00FC      	MOVWF      R12
0x049A	0x30B6      	MOVLW      182
0x049B	0x00FD      	MOVWF      R13
L_avoidObstacles352:
0x049C	0x0BFD      	DECFSZ     R13, 1
0x049D	0x2C9C      	GOTO       L_avoidObstacles352
0x049E	0x0BFC      	DECFSZ     R12, 1
0x049F	0x2C9C      	GOTO       L_avoidObstacles352
0x04A0	0x0BFB      	DECFSZ     R11, 1
0x04A1	0x2C9C      	GOTO       L_avoidObstacles352
0x04A2	0x0000      	NOP
;final_code_4.c,1106 :: 		}
L_avoidObstacles346:
;final_code_4.c,1108 :: 		}else if(stat==3){
0x04A3	0x2D21      	GOTO       L_avoidObstacles353
L_avoidObstacles340:
0x04A4	0x3000      	MOVLW      0
0x04A5	0x0642      	XORWF      _stat+1, 0
0x04A6	0x1D03      	BTFSS      STATUS, 2
0x04A7	0x2CAA      	GOTO       L__avoidObstacles656
0x04A8	0x3003      	MOVLW      3
0x04A9	0x0641      	XORWF      _stat, 0
L__avoidObstacles656:
0x04AA	0x1D03      	BTFSS      STATUS, 2
0x04AB	0x2CC0      	GOTO       L_avoidObstacles354
;final_code_4.c,1110 :: 		if(normalization>4){
0x04AC	0x3080      	MOVLW      128
0x04AD	0x00F0      	MOVWF      R0
0x04AE	0x3080      	MOVLW      128
0x04AF	0x0640      	XORWF      _normalization+1, 0
0x04B0	0x0270      	SUBWF      R0, 0
0x04B1	0x1D03      	BTFSS      STATUS, 2
0x04B2	0x2CB5      	GOTO       L__avoidObstacles657
0x04B3	0x083F      	MOVF       _normalization, 0
0x04B4	0x3C04      	SUBLW      4
L__avoidObstacles657:
0x04B5	0x1803      	BTFSC      STATUS, 0
0x04B6	0x2CBD      	GOTO       L_avoidObstacles355
;final_code_4.c,1111 :: 		stopAll();
0x04B7	0x20C4      	CALL       _stopAll
;final_code_4.c,1112 :: 		straight_com();
0x04B8	0x21D9      	CALL       _straight_com
;final_code_4.c,1113 :: 		clockEncoder=0;
0x04B9	0x01A9      	CLRF       _clockEncoder
0x04BA	0x01AA      	CLRF       _clockEncoder+1
;final_code_4.c,1114 :: 		normalization=0;
0x04BB	0x01BF      	CLRF       _normalization
0x04BC	0x01C0      	CLRF       _normalization+1
;final_code_4.c,1115 :: 		}
L_avoidObstacles355:
;final_code_4.c,1116 :: 		stat=0;
0x04BD	0x01C1      	CLRF       _stat
0x04BE	0x01C2      	CLRF       _stat+1
;final_code_4.c,1117 :: 		}else if(stat==4){
0x04BF	0x2D21      	GOTO       L_avoidObstacles356
L_avoidObstacles354:
0x04C0	0x3000      	MOVLW      0
0x04C1	0x0642      	XORWF      _stat+1, 0
0x04C2	0x1D03      	BTFSS      STATUS, 2
0x04C3	0x2CC6      	GOTO       L__avoidObstacles658
0x04C4	0x3004      	MOVLW      4
0x04C5	0x0641      	XORWF      _stat, 0
L__avoidObstacles658:
0x04C6	0x1D03      	BTFSS      STATUS, 2
0x04C7	0x2CEB      	GOTO       L_avoidObstacles357
;final_code_4.c,1118 :: 		rotateLeft();
0x04C8	0x20CB      	CALL       _rotateLeft
;final_code_4.c,1119 :: 		getDis3();
0x04C9	0x22B0      	CALL       _getDis3
;final_code_4.c,1120 :: 		getDis2();
0x04CA	0x22DC      	CALL       _getDis2
;final_code_4.c,1122 :: 		if((counter2>300)&&(counter3>300)){
0x04CB	0x3080      	MOVLW      128
0x04CC	0x3A01      	XORLW      1
0x04CD	0x00F0      	MOVWF      R0
0x04CE	0x3080      	MOVLW      128
0x04CF	0x066C      	XORWF      _counter2+1, 0
0x04D0	0x0270      	SUBWF      R0, 0
0x04D1	0x1D03      	BTFSS      STATUS, 2
0x04D2	0x2CD5      	GOTO       L__avoidObstacles659
0x04D3	0x086B      	MOVF       _counter2, 0
0x04D4	0x3C2C      	SUBLW      44
L__avoidObstacles659:
0x04D5	0x1803      	BTFSC      STATUS, 0
0x04D6	0x2CEA      	GOTO       L_avoidObstacles360
0x04D7	0x3080      	MOVLW      128
0x04D8	0x3A01      	XORLW      1
0x04D9	0x00F0      	MOVWF      R0
0x04DA	0x3080      	MOVLW      128
0x04DB	0x1683      	BSF        STATUS, 5
0x04DC	0x0621      	XORWF      _counter3+1, 0
0x04DD	0x0270      	SUBWF      R0, 0
0x04DE	0x1D03      	BTFSS      STATUS, 2
0x04DF	0x2CE2      	GOTO       L__avoidObstacles660
0x04E0	0x0820      	MOVF       _counter3, 0
0x04E1	0x3C2C      	SUBLW      44
L__avoidObstacles660:
0x04E2	0x1803      	BTFSC      STATUS, 0
0x04E3	0x2CEA      	GOTO       L_avoidObstacles360
L__avoidObstacles418:
;final_code_4.c,1123 :: 		stopAll();
0x04E4	0x20C4      	CALL       _stopAll
;final_code_4.c,1124 :: 		stat=5;
0x04E5	0x3005      	MOVLW      5
0x04E6	0x00C1      	MOVWF      _stat
0x04E7	0x3000      	MOVLW      0
0x04E8	0x00C2      	MOVWF      _stat+1
;final_code_4.c,1125 :: 		initEncoder();
0x04E9	0x218D      	CALL       _initEncoder
;final_code_4.c,1126 :: 		}
L_avoidObstacles360:
;final_code_4.c,1127 :: 		}else if(stat==5){
0x04EA	0x2D21      	GOTO       L_avoidObstacles361
L_avoidObstacles357:
0x04EB	0x1283      	BCF        STATUS, 5
0x04EC	0x3000      	MOVLW      0
0x04ED	0x0642      	XORWF      _stat+1, 0
0x04EE	0x1D03      	BTFSS      STATUS, 2
0x04EF	0x2CF2      	GOTO       L__avoidObstacles661
0x04F0	0x3005      	MOVLW      5
0x04F1	0x0641      	XORWF      _stat, 0
L__avoidObstacles661:
0x04F2	0x1D03      	BTFSS      STATUS, 2
0x04F3	0x2D21      	GOTO       L_avoidObstacles362
;final_code_4.c,1128 :: 		goStraight();
0x04F4	0x2211      	CALL       _goStraight
;final_code_4.c,1129 :: 		getDis3();
0x04F5	0x22B0      	CALL       _getDis3
;final_code_4.c,1130 :: 		getDis2();
0x04F6	0x22DC      	CALL       _getDis2
;final_code_4.c,1132 :: 		if((counter2<200)||(counter2<200)||(TMR0_value>60)){
0x04F7	0x3080      	MOVLW      128
0x04F8	0x066C      	XORWF      _counter2+1, 0
0x04F9	0x00F0      	MOVWF      R0
0x04FA	0x3080      	MOVLW      128
0x04FB	0x0270      	SUBWF      R0, 0
0x04FC	0x1D03      	BTFSS      STATUS, 2
0x04FD	0x2D00      	GOTO       L__avoidObstacles662
0x04FE	0x30C8      	MOVLW      200
0x04FF	0x026B      	SUBWF      _counter2, 0
L__avoidObstacles662:
0x0500	0x1C03      	BTFSS      STATUS, 0
0x0501	0x2D19      	GOTO       L__avoidObstacles417
0x0502	0x3080      	MOVLW      128
0x0503	0x066C      	XORWF      _counter2+1, 0
0x0504	0x00F0      	MOVWF      R0
0x0505	0x3080      	MOVLW      128
0x0506	0x0270      	SUBWF      R0, 0
0x0507	0x1D03      	BTFSS      STATUS, 2
0x0508	0x2D0B      	GOTO       L__avoidObstacles663
0x0509	0x30C8      	MOVLW      200
0x050A	0x026B      	SUBWF      _counter2, 0
L__avoidObstacles663:
0x050B	0x1C03      	BTFSS      STATUS, 0
0x050C	0x2D19      	GOTO       L__avoidObstacles417
0x050D	0x3080      	MOVLW      128
0x050E	0x00F0      	MOVWF      R0
0x050F	0x3080      	MOVLW      128
0x0510	0x0646      	XORWF      _TMR0_value+1, 0
0x0511	0x0270      	SUBWF      R0, 0
0x0512	0x1D03      	BTFSS      STATUS, 2
0x0513	0x2D16      	GOTO       L__avoidObstacles664
0x0514	0x0845      	MOVF       _TMR0_value, 0
0x0515	0x3C3C      	SUBLW      60
L__avoidObstacles664:
0x0516	0x1C03      	BTFSS      STATUS, 0
0x0517	0x2D19      	GOTO       L__avoidObstacles417
0x0518	0x2D21      	GOTO       L_avoidObstacles365
L__avoidObstacles417:
;final_code_4.c,1133 :: 		stopAll();
0x0519	0x20C4      	CALL       _stopAll
;final_code_4.c,1135 :: 		straight_com();
0x051A	0x21D9      	CALL       _straight_com
;final_code_4.c,1136 :: 		clockEncoder=0;
0x051B	0x01A9      	CLRF       _clockEncoder
0x051C	0x01AA      	CLRF       _clockEncoder+1
;final_code_4.c,1137 :: 		normalization=0;
0x051D	0x01BF      	CLRF       _normalization
0x051E	0x01C0      	CLRF       _normalization+1
;final_code_4.c,1138 :: 		stat=0;
0x051F	0x01C1      	CLRF       _stat
0x0520	0x01C2      	CLRF       _stat+1
;final_code_4.c,1139 :: 		}
L_avoidObstacles365:
;final_code_4.c,1141 :: 		}
L_avoidObstacles362:
L_avoidObstacles361:
L_avoidObstacles356:
L_avoidObstacles353:
L_avoidObstacles339:
L_avoidObstacles325:
;final_code_4.c,1152 :: 		}
0x0521	0x0008      	RETURN
; end of _avoidObstacles
_fullSpeed:
;final_code_4.c,26 :: 		void fullSpeed(){
;final_code_4.c,28 :: 		speed =255;
0x0522	0x30FF      	MOVLW      255
0x0523	0x1283      	BCF        STATUS, 5
0x0524	0x1303      	BCF        STATUS, 6
0x0525	0x00AF      	MOVWF      _speed
0x0526	0x01B0      	CLRF       _speed+1
;final_code_4.c,29 :: 		speed1=235;
0x0527	0x30EB      	MOVLW      235
0x0528	0x00B3      	MOVWF      _speed1
0x0529	0x01B4      	CLRF       _speed1+1
;final_code_4.c,30 :: 		speed2=250;
0x052A	0x30FA      	MOVLW      250
0x052B	0x00B7      	MOVWF      _speed2
0x052C	0x01B8      	CLRF       _speed2+1
;final_code_4.c,31 :: 		speed3=230;     //speed1=225;
0x052D	0x30E6      	MOVLW      230
0x052E	0x00B5      	MOVWF      _speed3
0x052F	0x01B6      	CLRF       _speed3+1
;final_code_4.c,35 :: 		}
0x0530	0x0008      	RETURN
; end of _fullSpeed
_bin_deci:
;final_code_4.c,309 :: 		int  bin_deci(){
;final_code_4.c,311 :: 		int decimal_value=0;
;final_code_4.c,312 :: 		decimal_value=sw[0][0]+2*sw[0][1]+4*sw[0][2]+8*sw[0][3]+16*sw[0][4]+32*sw[0][5]+64*sw[0][6]+128*sw[0][7]+256*sw[0][8];
0x0531	0x1283      	BCF        STATUS, 5
0x0532	0x1303      	BCF        STATUS, 6
0x0533	0x0849      	MOVF       _sw+2, 0
0x0534	0x00F0      	MOVWF      R0
0x0535	0x084A      	MOVF       _sw+3, 0
0x0536	0x00F1      	MOVWF      R0+1
0x0537	0x0DF0      	RLF        R0, 1
0x0538	0x0DF1      	RLF        R0+1, 1
0x0539	0x1070      	BCF        R0, 0
0x053A	0x0870      	MOVF       R0, 0
0x053B	0x0747      	ADDWF      _sw, 0
0x053C	0x00F3      	MOVWF      R3
0x053D	0x0848      	MOVF       _sw+1, 0
0x053E	0x1803      	BTFSC      STATUS, 0
0x053F	0x3E01      	ADDLW      1
0x0540	0x0771      	ADDWF      R0+1, 0
0x0541	0x00F4      	MOVWF      R3+1
0x0542	0x084B      	MOVF       _sw+4, 0
0x0543	0x00F0      	MOVWF      R0
0x0544	0x084C      	MOVF       _sw+5, 0
0x0545	0x00F1      	MOVWF      R0+1
0x0546	0x0DF0      	RLF        R0, 1
0x0547	0x0DF1      	RLF        R0+1, 1
0x0548	0x1070      	BCF        R0, 0
0x0549	0x0DF0      	RLF        R0, 1
0x054A	0x0DF1      	RLF        R0+1, 1
0x054B	0x1070      	BCF        R0, 0
0x054C	0x0870      	MOVF       R0, 0
0x054D	0x07F3      	ADDWF      R3, 1
0x054E	0x0871      	MOVF       R0+1, 0
0x054F	0x1803      	BTFSC      STATUS, 0
0x0550	0x3E01      	ADDLW      1
0x0551	0x07F4      	ADDWF      R3+1, 1
0x0552	0x3003      	MOVLW      3
0x0553	0x00F2      	MOVWF      R2
0x0554	0x084D      	MOVF       _sw+6, 0
0x0555	0x00F0      	MOVWF      R0
0x0556	0x084E      	MOVF       _sw+7, 0
0x0557	0x00F1      	MOVWF      R0+1
0x0558	0x0872      	MOVF       R2, 0
L__bin_deci439:
0x0559	0x1903      	BTFSC      STATUS, 2
0x055A	0x2D60      	GOTO       L__bin_deci440
0x055B	0x0DF0      	RLF        R0, 1
0x055C	0x0DF1      	RLF        R0+1, 1
0x055D	0x1070      	BCF        R0, 0
0x055E	0x3EFF      	ADDLW      255
0x055F	0x2D59      	GOTO       L__bin_deci439
L__bin_deci440:
0x0560	0x0870      	MOVF       R0, 0
0x0561	0x07F3      	ADDWF      R3, 1
0x0562	0x0871      	MOVF       R0+1, 0
0x0563	0x1803      	BTFSC      STATUS, 0
0x0564	0x3E01      	ADDLW      1
0x0565	0x07F4      	ADDWF      R3+1, 1
0x0566	0x3004      	MOVLW      4
0x0567	0x00F2      	MOVWF      R2
0x0568	0x084F      	MOVF       _sw+8, 0
0x0569	0x00F0      	MOVWF      R0
0x056A	0x0850      	MOVF       _sw+9, 0
0x056B	0x00F1      	MOVWF      R0+1
0x056C	0x0872      	MOVF       R2, 0
L__bin_deci441:
0x056D	0x1903      	BTFSC      STATUS, 2
0x056E	0x2D74      	GOTO       L__bin_deci442
0x056F	0x0DF0      	RLF        R0, 1
0x0570	0x0DF1      	RLF        R0+1, 1
0x0571	0x1070      	BCF        R0, 0
0x0572	0x3EFF      	ADDLW      255
0x0573	0x2D6D      	GOTO       L__bin_deci441
L__bin_deci442:
0x0574	0x0870      	MOVF       R0, 0
0x0575	0x07F3      	ADDWF      R3, 1
0x0576	0x0871      	MOVF       R0+1, 0
0x0577	0x1803      	BTFSC      STATUS, 0
0x0578	0x3E01      	ADDLW      1
0x0579	0x07F4      	ADDWF      R3+1, 1
0x057A	0x3005      	MOVLW      5
0x057B	0x00F2      	MOVWF      R2
0x057C	0x0851      	MOVF       _sw+10, 0
0x057D	0x00F0      	MOVWF      R0
0x057E	0x0852      	MOVF       _sw+11, 0
0x057F	0x00F1      	MOVWF      R0+1
0x0580	0x0872      	MOVF       R2, 0
L__bin_deci443:
0x0581	0x1903      	BTFSC      STATUS, 2
0x0582	0x2D88      	GOTO       L__bin_deci444
0x0583	0x0DF0      	RLF        R0, 1
0x0584	0x0DF1      	RLF        R0+1, 1
0x0585	0x1070      	BCF        R0, 0
0x0586	0x3EFF      	ADDLW      255
0x0587	0x2D81      	GOTO       L__bin_deci443
L__bin_deci444:
0x0588	0x0870      	MOVF       R0, 0
0x0589	0x07F3      	ADDWF      R3, 1
0x058A	0x0871      	MOVF       R0+1, 0
0x058B	0x1803      	BTFSC      STATUS, 0
0x058C	0x3E01      	ADDLW      1
0x058D	0x07F4      	ADDWF      R3+1, 1
0x058E	0x3006      	MOVLW      6
0x058F	0x00F2      	MOVWF      R2
0x0590	0x0853      	MOVF       _sw+12, 0
0x0591	0x00F0      	MOVWF      R0
0x0592	0x0854      	MOVF       _sw+13, 0
0x0593	0x00F1      	MOVWF      R0+1
0x0594	0x0872      	MOVF       R2, 0
L__bin_deci445:
0x0595	0x1903      	BTFSC      STATUS, 2
0x0596	0x2D9C      	GOTO       L__bin_deci446
0x0597	0x0DF0      	RLF        R0, 1
0x0598	0x0DF1      	RLF        R0+1, 1
0x0599	0x1070      	BCF        R0, 0
0x059A	0x3EFF      	ADDLW      255
0x059B	0x2D95      	GOTO       L__bin_deci445
L__bin_deci446:
0x059C	0x0870      	MOVF       R0, 0
0x059D	0x07F3      	ADDWF      R3, 1
0x059E	0x0871      	MOVF       R0+1, 0
0x059F	0x1803      	BTFSC      STATUS, 0
0x05A0	0x3E01      	ADDLW      1
0x05A1	0x07F4      	ADDWF      R3+1, 1
0x05A2	0x3007      	MOVLW      7
0x05A3	0x00F2      	MOVWF      R2
0x05A4	0x0855      	MOVF       _sw+14, 0
0x05A5	0x00F0      	MOVWF      R0
0x05A6	0x0856      	MOVF       _sw+15, 0
0x05A7	0x00F1      	MOVWF      R0+1
0x05A8	0x0872      	MOVF       R2, 0
L__bin_deci447:
0x05A9	0x1903      	BTFSC      STATUS, 2
0x05AA	0x2DB0      	GOTO       L__bin_deci448
0x05AB	0x0DF0      	RLF        R0, 1
0x05AC	0x0DF1      	RLF        R0+1, 1
0x05AD	0x1070      	BCF        R0, 0
0x05AE	0x3EFF      	ADDLW      255
0x05AF	0x2DA9      	GOTO       L__bin_deci447
L__bin_deci448:
0x05B0	0x0870      	MOVF       R0, 0
0x05B1	0x07F3      	ADDWF      R3, 1
0x05B2	0x0871      	MOVF       R0+1, 0
0x05B3	0x1803      	BTFSC      STATUS, 0
0x05B4	0x3E01      	ADDLW      1
0x05B5	0x07F4      	ADDWF      R3+1, 1
0x05B6	0x0857      	MOVF       _sw+16, 0
0x05B7	0x00F1      	MOVWF      R0+1
0x05B8	0x01F0      	CLRF       R0
0x05B9	0x0873      	MOVF       R3, 0
0x05BA	0x07F0      	ADDWF      R0, 1
0x05BB	0x0874      	MOVF       R3+1, 0
0x05BC	0x1803      	BTFSC      STATUS, 0
0x05BD	0x3E01      	ADDLW      1
0x05BE	0x07F1      	ADDWF      R0+1, 1
;final_code_4.c,315 :: 		return decimal_value;
;final_code_4.c,317 :: 		}
0x05BF	0x0008      	RETURN
; end of _bin_deci
_sensorRead:
;final_code_4.c,177 :: 		sensorRead(){
;final_code_4.c,179 :: 		totFront=0;
0x05C0	0x1283      	BCF        STATUS, 5
0x05C1	0x1303      	BCF        STATUS, 6
0x05C2	0x01A5      	CLRF       _totFront
0x05C3	0x01A6      	CLRF       _totFront+1
;final_code_4.c,180 :: 		totBack=0;
0x05C4	0x01AD      	CLRF       _totBack
0x05C5	0x01AE      	CLRF       _totBack+1
;final_code_4.c,181 :: 		if(ADC_Read(0)>adcVal){
0x05C6	0x1683      	BSF        STATUS, 5
0x05C7	0x01B7      	CLRF       FARG_ADC_Read_channel
0x05C8	0x21B5      	CALL       _ADC_Read
0x05C9	0x0871      	MOVF       R0+1, 0
0x05CA	0x1283      	BCF        STATUS, 5
0x05CB	0x023C      	SUBWF      _adcVal+1, 0
0x05CC	0x1D03      	BTFSS      STATUS, 2
0x05CD	0x2DD0      	GOTO       L__sensorRead424
0x05CE	0x0870      	MOVF       R0, 0
0x05CF	0x023B      	SUBWF      _adcVal, 0
L__sensorRead424:
0x05D0	0x1803      	BTFSC      STATUS, 0
0x05D1	0x2DDE      	GOTO       L_sensorRead0
;final_code_4.c,182 :: 		text[0]='1';
0x05D2	0x3031      	MOVLW      49
0x05D3	0x1683      	BSF        STATUS, 5
0x05D4	0x00A2      	MOVWF      _text
;final_code_4.c,183 :: 		sw[1][0]=1;
0x05D5	0x3001      	MOVLW      1
0x05D6	0x1283      	BCF        STATUS, 5
0x05D7	0x00D9      	MOVWF      _sw+18
0x05D8	0x3000      	MOVLW      0
0x05D9	0x00DA      	MOVWF      _sw+19
;final_code_4.c,184 :: 		totBack++;
0x05DA	0x0AAD      	INCF       _totBack, 1
0x05DB	0x1903      	BTFSC      STATUS, 2
0x05DC	0x0AAE      	INCF       _totBack+1, 1
;final_code_4.c,185 :: 		}else{
0x05DD	0x2DE4      	GOTO       L_sensorRead1
L_sensorRead0:
;final_code_4.c,186 :: 		text[0]='0';
0x05DE	0x3030      	MOVLW      48
0x05DF	0x1683      	BSF        STATUS, 5
0x05E0	0x00A2      	MOVWF      _text
;final_code_4.c,187 :: 		sw[1][0]=0;
0x05E1	0x1283      	BCF        STATUS, 5
0x05E2	0x01D9      	CLRF       _sw+18
0x05E3	0x01DA      	CLRF       _sw+19
;final_code_4.c,188 :: 		}
L_sensorRead1:
;final_code_4.c,189 :: 		if(ADC_Read(1)>adcVal){
0x05E4	0x3001      	MOVLW      1
0x05E5	0x1683      	BSF        STATUS, 5
0x05E6	0x00B7      	MOVWF      FARG_ADC_Read_channel
0x05E7	0x21B5      	CALL       _ADC_Read
0x05E8	0x0871      	MOVF       R0+1, 0
0x05E9	0x1283      	BCF        STATUS, 5
0x05EA	0x023C      	SUBWF      _adcVal+1, 0
0x05EB	0x1D03      	BTFSS      STATUS, 2
0x05EC	0x2DEF      	GOTO       L__sensorRead425
0x05ED	0x0870      	MOVF       R0, 0
0x05EE	0x023B      	SUBWF      _adcVal, 0
L__sensorRead425:
0x05EF	0x1803      	BTFSC      STATUS, 0
0x05F0	0x2DFD      	GOTO       L_sensorRead2
;final_code_4.c,190 :: 		text[1]='1';
0x05F1	0x3031      	MOVLW      49
0x05F2	0x1683      	BSF        STATUS, 5
0x05F3	0x00A3      	MOVWF      _text+1
;final_code_4.c,191 :: 		sw[1][1]=1;
0x05F4	0x3001      	MOVLW      1
0x05F5	0x1283      	BCF        STATUS, 5
0x05F6	0x00DB      	MOVWF      _sw+20
0x05F7	0x3000      	MOVLW      0
0x05F8	0x00DC      	MOVWF      _sw+21
;final_code_4.c,192 :: 		totBack++;
0x05F9	0x0AAD      	INCF       _totBack, 1
0x05FA	0x1903      	BTFSC      STATUS, 2
0x05FB	0x0AAE      	INCF       _totBack+1, 1
;final_code_4.c,193 :: 		}else{
0x05FC	0x2E03      	GOTO       L_sensorRead3
L_sensorRead2:
;final_code_4.c,194 :: 		text[1]='0';
0x05FD	0x3030      	MOVLW      48
0x05FE	0x1683      	BSF        STATUS, 5
0x05FF	0x00A3      	MOVWF      _text+1
;final_code_4.c,195 :: 		sw[1][1]=0;
0x0600	0x1283      	BCF        STATUS, 5
0x0601	0x01DB      	CLRF       _sw+20
0x0602	0x01DC      	CLRF       _sw+21
;final_code_4.c,196 :: 		}
L_sensorRead3:
;final_code_4.c,197 :: 		if(ADC_Read(2)> adcVal){
0x0603	0x3002      	MOVLW      2
0x0604	0x1683      	BSF        STATUS, 5
0x0605	0x00B7      	MOVWF      FARG_ADC_Read_channel
0x0606	0x21B5      	CALL       _ADC_Read
0x0607	0x0871      	MOVF       R0+1, 0
0x0608	0x1283      	BCF        STATUS, 5
0x0609	0x023C      	SUBWF      _adcVal+1, 0
0x060A	0x1D03      	BTFSS      STATUS, 2
0x060B	0x2E0E      	GOTO       L__sensorRead426
0x060C	0x0870      	MOVF       R0, 0
0x060D	0x023B      	SUBWF      _adcVal, 0
L__sensorRead426:
0x060E	0x1803      	BTFSC      STATUS, 0
0x060F	0x2E1C      	GOTO       L_sensorRead4
;final_code_4.c,198 :: 		text[2]='1';
0x0610	0x3031      	MOVLW      49
0x0611	0x1683      	BSF        STATUS, 5
0x0612	0x00A4      	MOVWF      _text+2
;final_code_4.c,199 :: 		sw[1][2]=1;
0x0613	0x3001      	MOVLW      1
0x0614	0x1283      	BCF        STATUS, 5
0x0615	0x00DD      	MOVWF      _sw+22
0x0616	0x3000      	MOVLW      0
0x0617	0x00DE      	MOVWF      _sw+23
;final_code_4.c,200 :: 		totBack++;
0x0618	0x0AAD      	INCF       _totBack, 1
0x0619	0x1903      	BTFSC      STATUS, 2
0x061A	0x0AAE      	INCF       _totBack+1, 1
;final_code_4.c,201 :: 		}else{
0x061B	0x2E22      	GOTO       L_sensorRead5
L_sensorRead4:
;final_code_4.c,202 :: 		text[2]='0';
0x061C	0x3030      	MOVLW      48
0x061D	0x1683      	BSF        STATUS, 5
0x061E	0x00A4      	MOVWF      _text+2
;final_code_4.c,203 :: 		sw[1][2]=0;
0x061F	0x1283      	BCF        STATUS, 5
0x0620	0x01DD      	CLRF       _sw+22
0x0621	0x01DE      	CLRF       _sw+23
;final_code_4.c,204 :: 		}
L_sensorRead5:
;final_code_4.c,205 :: 		if(ADC_Read(3)> adcVal){
0x0622	0x3003      	MOVLW      3
0x0623	0x1683      	BSF        STATUS, 5
0x0624	0x00B7      	MOVWF      FARG_ADC_Read_channel
0x0625	0x21B5      	CALL       _ADC_Read
0x0626	0x0871      	MOVF       R0+1, 0
0x0627	0x1283      	BCF        STATUS, 5
0x0628	0x023C      	SUBWF      _adcVal+1, 0
0x0629	0x1D03      	BTFSS      STATUS, 2
0x062A	0x2E2D      	GOTO       L__sensorRead427
0x062B	0x0870      	MOVF       R0, 0
0x062C	0x023B      	SUBWF      _adcVal, 0
L__sensorRead427:
0x062D	0x1803      	BTFSC      STATUS, 0
0x062E	0x2E3B      	GOTO       L_sensorRead6
;final_code_4.c,206 :: 		text[3]='1';
0x062F	0x3031      	MOVLW      49
0x0630	0x1683      	BSF        STATUS, 5
0x0631	0x00A5      	MOVWF      _text+3
;final_code_4.c,207 :: 		sw[1][3]=1;
0x0632	0x3001      	MOVLW      1
0x0633	0x1283      	BCF        STATUS, 5
0x0634	0x00DF      	MOVWF      _sw+24
0x0635	0x3000      	MOVLW      0
0x0636	0x00E0      	MOVWF      _sw+25
;final_code_4.c,208 :: 		totBack++;
0x0637	0x0AAD      	INCF       _totBack, 1
0x0638	0x1903      	BTFSC      STATUS, 2
0x0639	0x0AAE      	INCF       _totBack+1, 1
;final_code_4.c,209 :: 		}else{
0x063A	0x2E41      	GOTO       L_sensorRead7
L_sensorRead6:
;final_code_4.c,210 :: 		text[3]='0';
0x063B	0x3030      	MOVLW      48
0x063C	0x1683      	BSF        STATUS, 5
0x063D	0x00A5      	MOVWF      _text+3
;final_code_4.c,211 :: 		sw[1][3]=0;
0x063E	0x1283      	BCF        STATUS, 5
0x063F	0x01DF      	CLRF       _sw+24
0x0640	0x01E0      	CLRF       _sw+25
;final_code_4.c,212 :: 		}
L_sensorRead7:
;final_code_4.c,214 :: 		if(ADC_Read(4)>adcVal){
0x0641	0x3004      	MOVLW      4
0x0642	0x1683      	BSF        STATUS, 5
0x0643	0x00B7      	MOVWF      FARG_ADC_Read_channel
0x0644	0x21B5      	CALL       _ADC_Read
0x0645	0x0871      	MOVF       R0+1, 0
0x0646	0x1283      	BCF        STATUS, 5
0x0647	0x023C      	SUBWF      _adcVal+1, 0
0x0648	0x1D03      	BTFSS      STATUS, 2
0x0649	0x2E4C      	GOTO       L__sensorRead428
0x064A	0x0870      	MOVF       R0, 0
0x064B	0x023B      	SUBWF      _adcVal, 0
L__sensorRead428:
0x064C	0x1803      	BTFSC      STATUS, 0
0x064D	0x2E5A      	GOTO       L_sensorRead8
;final_code_4.c,215 :: 		text[4]='1';
0x064E	0x3031      	MOVLW      49
0x064F	0x1683      	BSF        STATUS, 5
0x0650	0x00A6      	MOVWF      _text+4
;final_code_4.c,216 :: 		sw[1][4]=1;
0x0651	0x3001      	MOVLW      1
0x0652	0x1283      	BCF        STATUS, 5
0x0653	0x00E1      	MOVWF      _sw+26
0x0654	0x3000      	MOVLW      0
0x0655	0x00E2      	MOVWF      _sw+27
;final_code_4.c,217 :: 		totBack++;
0x0656	0x0AAD      	INCF       _totBack, 1
0x0657	0x1903      	BTFSC      STATUS, 2
0x0658	0x0AAE      	INCF       _totBack+1, 1
;final_code_4.c,218 :: 		}else{
0x0659	0x2E60      	GOTO       L_sensorRead9
L_sensorRead8:
;final_code_4.c,219 :: 		text[4]='0';
0x065A	0x3030      	MOVLW      48
0x065B	0x1683      	BSF        STATUS, 5
0x065C	0x00A6      	MOVWF      _text+4
;final_code_4.c,220 :: 		sw[1][4]=0;
0x065D	0x1283      	BCF        STATUS, 5
0x065E	0x01E1      	CLRF       _sw+26
0x065F	0x01E2      	CLRF       _sw+27
;final_code_4.c,221 :: 		}
L_sensorRead9:
;final_code_4.c,222 :: 		if(ADC_Read(5)>adcVal1){
0x0660	0x3005      	MOVLW      5
0x0661	0x1683      	BSF        STATUS, 5
0x0662	0x00B7      	MOVWF      FARG_ADC_Read_channel
0x0663	0x21B5      	CALL       _ADC_Read
0x0664	0x0871      	MOVF       R0+1, 0
0x0665	0x1283      	BCF        STATUS, 5
0x0666	0x023E      	SUBWF      _adcVal1+1, 0
0x0667	0x1D03      	BTFSS      STATUS, 2
0x0668	0x2E6B      	GOTO       L__sensorRead429
0x0669	0x0870      	MOVF       R0, 0
0x066A	0x023D      	SUBWF      _adcVal1, 0
L__sensorRead429:
0x066B	0x1803      	BTFSC      STATUS, 0
0x066C	0x2E79      	GOTO       L_sensorRead10
;final_code_4.c,223 :: 		text[5]='1';
0x066D	0x3031      	MOVLW      49
0x066E	0x1683      	BSF        STATUS, 5
0x066F	0x00A7      	MOVWF      _text+5
;final_code_4.c,224 :: 		sw[0][0]=1;
0x0670	0x3001      	MOVLW      1
0x0671	0x1283      	BCF        STATUS, 5
0x0672	0x00C7      	MOVWF      _sw
0x0673	0x3000      	MOVLW      0
0x0674	0x00C8      	MOVWF      _sw+1
;final_code_4.c,225 :: 		totFront++;
0x0675	0x0AA5      	INCF       _totFront, 1
0x0676	0x1903      	BTFSC      STATUS, 2
0x0677	0x0AA6      	INCF       _totFront+1, 1
;final_code_4.c,226 :: 		}else{
0x0678	0x2E7F      	GOTO       L_sensorRead11
L_sensorRead10:
;final_code_4.c,227 :: 		text[5]='0';
0x0679	0x3030      	MOVLW      48
0x067A	0x1683      	BSF        STATUS, 5
0x067B	0x00A7      	MOVWF      _text+5
;final_code_4.c,228 :: 		sw[0][0]=0;
0x067C	0x1283      	BCF        STATUS, 5
0x067D	0x01C7      	CLRF       _sw
0x067E	0x01C8      	CLRF       _sw+1
;final_code_4.c,229 :: 		}
L_sensorRead11:
;final_code_4.c,231 :: 		if(ADC_Read(6)>adcVal1){
0x067F	0x3006      	MOVLW      6
0x0680	0x1683      	BSF        STATUS, 5
0x0681	0x00B7      	MOVWF      FARG_ADC_Read_channel
0x0682	0x21B5      	CALL       _ADC_Read
0x0683	0x0871      	MOVF       R0+1, 0
0x0684	0x1283      	BCF        STATUS, 5
0x0685	0x023E      	SUBWF      _adcVal1+1, 0
0x0686	0x1D03      	BTFSS      STATUS, 2
0x0687	0x2E8A      	GOTO       L__sensorRead430
0x0688	0x0870      	MOVF       R0, 0
0x0689	0x023D      	SUBWF      _adcVal1, 0
L__sensorRead430:
0x068A	0x1803      	BTFSC      STATUS, 0
0x068B	0x2E98      	GOTO       L_sensorRead12
;final_code_4.c,232 :: 		text[6]='1';
0x068C	0x3031      	MOVLW      49
0x068D	0x1683      	BSF        STATUS, 5
0x068E	0x00A8      	MOVWF      _text+6
;final_code_4.c,233 :: 		sw[0][1]=1;
0x068F	0x3001      	MOVLW      1
0x0690	0x1283      	BCF        STATUS, 5
0x0691	0x00C9      	MOVWF      _sw+2
0x0692	0x3000      	MOVLW      0
0x0693	0x00CA      	MOVWF      _sw+3
;final_code_4.c,234 :: 		totFront++;
0x0694	0x0AA5      	INCF       _totFront, 1
0x0695	0x1903      	BTFSC      STATUS, 2
0x0696	0x0AA6      	INCF       _totFront+1, 1
;final_code_4.c,235 :: 		}else{
0x0697	0x2E9E      	GOTO       L_sensorRead13
L_sensorRead12:
;final_code_4.c,236 :: 		text[6]='0';
0x0698	0x3030      	MOVLW      48
0x0699	0x1683      	BSF        STATUS, 5
0x069A	0x00A8      	MOVWF      _text+6
;final_code_4.c,237 :: 		sw[0][1]=0;
0x069B	0x1283      	BCF        STATUS, 5
0x069C	0x01C9      	CLRF       _sw+2
0x069D	0x01CA      	CLRF       _sw+3
;final_code_4.c,238 :: 		}
L_sensorRead13:
;final_code_4.c,239 :: 		if(ADC_Read(7)>adcVal1){
0x069E	0x3007      	MOVLW      7
0x069F	0x1683      	BSF        STATUS, 5
0x06A0	0x00B7      	MOVWF      FARG_ADC_Read_channel
0x06A1	0x21B5      	CALL       _ADC_Read
0x06A2	0x0871      	MOVF       R0+1, 0
0x06A3	0x1283      	BCF        STATUS, 5
0x06A4	0x023E      	SUBWF      _adcVal1+1, 0
0x06A5	0x1D03      	BTFSS      STATUS, 2
0x06A6	0x2EA9      	GOTO       L__sensorRead431
0x06A7	0x0870      	MOVF       R0, 0
0x06A8	0x023D      	SUBWF      _adcVal1, 0
L__sensorRead431:
0x06A9	0x1803      	BTFSC      STATUS, 0
0x06AA	0x2EB7      	GOTO       L_sensorRead14
;final_code_4.c,240 :: 		text[7]='1';
0x06AB	0x3031      	MOVLW      49
0x06AC	0x1683      	BSF        STATUS, 5
0x06AD	0x00A9      	MOVWF      _text+7
;final_code_4.c,241 :: 		sw[0][2]=1;
0x06AE	0x3001      	MOVLW      1
0x06AF	0x1283      	BCF        STATUS, 5
0x06B0	0x00CB      	MOVWF      _sw+4
0x06B1	0x3000      	MOVLW      0
0x06B2	0x00CC      	MOVWF      _sw+5
;final_code_4.c,242 :: 		totFront++;
0x06B3	0x0AA5      	INCF       _totFront, 1
0x06B4	0x1903      	BTFSC      STATUS, 2
0x06B5	0x0AA6      	INCF       _totFront+1, 1
;final_code_4.c,243 :: 		}else{
0x06B6	0x2EBD      	GOTO       L_sensorRead15
L_sensorRead14:
;final_code_4.c,244 :: 		text[7]='0';
0x06B7	0x3030      	MOVLW      48
0x06B8	0x1683      	BSF        STATUS, 5
0x06B9	0x00A9      	MOVWF      _text+7
;final_code_4.c,245 :: 		sw[0][2]=0;
0x06BA	0x1283      	BCF        STATUS, 5
0x06BB	0x01CB      	CLRF       _sw+4
0x06BC	0x01CC      	CLRF       _sw+5
;final_code_4.c,246 :: 		}
L_sensorRead15:
;final_code_4.c,247 :: 		if(ADC_Read(8)>adcVal1){
0x06BD	0x3008      	MOVLW      8
0x06BE	0x1683      	BSF        STATUS, 5
0x06BF	0x00B7      	MOVWF      FARG_ADC_Read_channel
0x06C0	0x21B5      	CALL       _ADC_Read
0x06C1	0x0871      	MOVF       R0+1, 0
0x06C2	0x1283      	BCF        STATUS, 5
0x06C3	0x023E      	SUBWF      _adcVal1+1, 0
0x06C4	0x1D03      	BTFSS      STATUS, 2
0x06C5	0x2EC8      	GOTO       L__sensorRead432
0x06C6	0x0870      	MOVF       R0, 0
0x06C7	0x023D      	SUBWF      _adcVal1, 0
L__sensorRead432:
0x06C8	0x1803      	BTFSC      STATUS, 0
0x06C9	0x2ED6      	GOTO       L_sensorRead16
;final_code_4.c,248 :: 		text[8]='1';
0x06CA	0x3031      	MOVLW      49
0x06CB	0x1683      	BSF        STATUS, 5
0x06CC	0x00AA      	MOVWF      _text+8
;final_code_4.c,249 :: 		sw[0][3]=1;
0x06CD	0x3001      	MOVLW      1
0x06CE	0x1283      	BCF        STATUS, 5
0x06CF	0x00CD      	MOVWF      _sw+6
0x06D0	0x3000      	MOVLW      0
0x06D1	0x00CE      	MOVWF      _sw+7
;final_code_4.c,250 :: 		totFront++;
0x06D2	0x0AA5      	INCF       _totFront, 1
0x06D3	0x1903      	BTFSC      STATUS, 2
0x06D4	0x0AA6      	INCF       _totFront+1, 1
;final_code_4.c,251 :: 		}else{
0x06D5	0x2EDC      	GOTO       L_sensorRead17
L_sensorRead16:
;final_code_4.c,252 :: 		text[8]='0';
0x06D6	0x3030      	MOVLW      48
0x06D7	0x1683      	BSF        STATUS, 5
0x06D8	0x00AA      	MOVWF      _text+8
;final_code_4.c,253 :: 		sw[0][3]=0;
0x06D9	0x1283      	BCF        STATUS, 5
0x06DA	0x01CD      	CLRF       _sw+6
0x06DB	0x01CE      	CLRF       _sw+7
;final_code_4.c,254 :: 		}
L_sensorRead17:
;final_code_4.c,255 :: 		if(ADC_Read(9)>adcVal1){
0x06DC	0x3009      	MOVLW      9
0x06DD	0x1683      	BSF        STATUS, 5
0x06DE	0x00B7      	MOVWF      FARG_ADC_Read_channel
0x06DF	0x21B5      	CALL       _ADC_Read
0x06E0	0x0871      	MOVF       R0+1, 0
0x06E1	0x1283      	BCF        STATUS, 5
0x06E2	0x023E      	SUBWF      _adcVal1+1, 0
0x06E3	0x1D03      	BTFSS      STATUS, 2
0x06E4	0x2EE7      	GOTO       L__sensorRead433
0x06E5	0x0870      	MOVF       R0, 0
0x06E6	0x023D      	SUBWF      _adcVal1, 0
L__sensorRead433:
0x06E7	0x1803      	BTFSC      STATUS, 0
0x06E8	0x2EF5      	GOTO       L_sensorRead18
;final_code_4.c,256 :: 		text[9]='1';
0x06E9	0x3031      	MOVLW      49
0x06EA	0x1683      	BSF        STATUS, 5
0x06EB	0x00AB      	MOVWF      _text+9
;final_code_4.c,257 :: 		sw[0][4]=1;
0x06EC	0x3001      	MOVLW      1
0x06ED	0x1283      	BCF        STATUS, 5
0x06EE	0x00CF      	MOVWF      _sw+8
0x06EF	0x3000      	MOVLW      0
0x06F0	0x00D0      	MOVWF      _sw+9
;final_code_4.c,258 :: 		totFront++;
0x06F1	0x0AA5      	INCF       _totFront, 1
0x06F2	0x1903      	BTFSC      STATUS, 2
0x06F3	0x0AA6      	INCF       _totFront+1, 1
;final_code_4.c,259 :: 		}else{
0x06F4	0x2EFB      	GOTO       L_sensorRead19
L_sensorRead18:
;final_code_4.c,260 :: 		text[9]='0';
0x06F5	0x3030      	MOVLW      48
0x06F6	0x1683      	BSF        STATUS, 5
0x06F7	0x00AB      	MOVWF      _text+9
;final_code_4.c,261 :: 		sw[0][4]=0;
0x06F8	0x1283      	BCF        STATUS, 5
0x06F9	0x01CF      	CLRF       _sw+8
0x06FA	0x01D0      	CLRF       _sw+9
;final_code_4.c,262 :: 		}
L_sensorRead19:
;final_code_4.c,263 :: 		if(ADC_Read(10)>adcVal1){
0x06FB	0x300A      	MOVLW      10
0x06FC	0x1683      	BSF        STATUS, 5
0x06FD	0x00B7      	MOVWF      FARG_ADC_Read_channel
0x06FE	0x21B5      	CALL       _ADC_Read
0x06FF	0x0871      	MOVF       R0+1, 0
0x0700	0x1283      	BCF        STATUS, 5
0x0701	0x023E      	SUBWF      _adcVal1+1, 0
0x0702	0x1D03      	BTFSS      STATUS, 2
0x0703	0x2F06      	GOTO       L__sensorRead434
0x0704	0x0870      	MOVF       R0, 0
0x0705	0x023D      	SUBWF      _adcVal1, 0
L__sensorRead434:
0x0706	0x1803      	BTFSC      STATUS, 0
0x0707	0x2F14      	GOTO       L_sensorRead20
;final_code_4.c,264 :: 		text[10]='1';
0x0708	0x3031      	MOVLW      49
0x0709	0x1683      	BSF        STATUS, 5
0x070A	0x00AC      	MOVWF      _text+10
;final_code_4.c,265 :: 		sw[0][5]=1;
0x070B	0x3001      	MOVLW      1
0x070C	0x1283      	BCF        STATUS, 5
0x070D	0x00D1      	MOVWF      _sw+10
0x070E	0x3000      	MOVLW      0
0x070F	0x00D2      	MOVWF      _sw+11
;final_code_4.c,266 :: 		totFront++;
0x0710	0x0AA5      	INCF       _totFront, 1
0x0711	0x1903      	BTFSC      STATUS, 2
0x0712	0x0AA6      	INCF       _totFront+1, 1
;final_code_4.c,267 :: 		}else{
0x0713	0x2F1A      	GOTO       L_sensorRead21
L_sensorRead20:
;final_code_4.c,268 :: 		text[10]='0';
0x0714	0x3030      	MOVLW      48
0x0715	0x1683      	BSF        STATUS, 5
0x0716	0x00AC      	MOVWF      _text+10
;final_code_4.c,269 :: 		sw[0][5]=0;
0x0717	0x1283      	BCF        STATUS, 5
0x0718	0x01D1      	CLRF       _sw+10
0x0719	0x01D2      	CLRF       _sw+11
;final_code_4.c,270 :: 		}
L_sensorRead21:
;final_code_4.c,271 :: 		if(ADC_Read(11)>adcVal1){
0x071A	0x300B      	MOVLW      11
0x071B	0x1683      	BSF        STATUS, 5
0x071C	0x00B7      	MOVWF      FARG_ADC_Read_channel
0x071D	0x21B5      	CALL       _ADC_Read
0x071E	0x0871      	MOVF       R0+1, 0
0x071F	0x1283      	BCF        STATUS, 5
0x0720	0x023E      	SUBWF      _adcVal1+1, 0
0x0721	0x1D03      	BTFSS      STATUS, 2
0x0722	0x2F25      	GOTO       L__sensorRead435
0x0723	0x0870      	MOVF       R0, 0
0x0724	0x023D      	SUBWF      _adcVal1, 0
L__sensorRead435:
0x0725	0x1803      	BTFSC      STATUS, 0
0x0726	0x2F33      	GOTO       L_sensorRead22
;final_code_4.c,272 :: 		text[11]='1';
0x0727	0x3031      	MOVLW      49
0x0728	0x1683      	BSF        STATUS, 5
0x0729	0x00AD      	MOVWF      _text+11
;final_code_4.c,273 :: 		sw[0][6]=1;
0x072A	0x3001      	MOVLW      1
0x072B	0x1283      	BCF        STATUS, 5
0x072C	0x00D3      	MOVWF      _sw+12
0x072D	0x3000      	MOVLW      0
0x072E	0x00D4      	MOVWF      _sw+13
;final_code_4.c,274 :: 		totFront++;
0x072F	0x0AA5      	INCF       _totFront, 1
0x0730	0x1903      	BTFSC      STATUS, 2
0x0731	0x0AA6      	INCF       _totFront+1, 1
;final_code_4.c,275 :: 		}else{
0x0732	0x2F39      	GOTO       L_sensorRead23
L_sensorRead22:
;final_code_4.c,276 :: 		text[11]='0';
0x0733	0x3030      	MOVLW      48
0x0734	0x1683      	BSF        STATUS, 5
0x0735	0x00AD      	MOVWF      _text+11
;final_code_4.c,277 :: 		sw[0][6]=0;
0x0736	0x1283      	BCF        STATUS, 5
0x0737	0x01D3      	CLRF       _sw+12
0x0738	0x01D4      	CLRF       _sw+13
;final_code_4.c,278 :: 		}
L_sensorRead23:
;final_code_4.c,279 :: 		if(ADC_Read(12)>adcVal1){
0x0739	0x300C      	MOVLW      12
0x073A	0x1683      	BSF        STATUS, 5
0x073B	0x00B7      	MOVWF      FARG_ADC_Read_channel
0x073C	0x21B5      	CALL       _ADC_Read
0x073D	0x0871      	MOVF       R0+1, 0
0x073E	0x1283      	BCF        STATUS, 5
0x073F	0x023E      	SUBWF      _adcVal1+1, 0
0x0740	0x1D03      	BTFSS      STATUS, 2
0x0741	0x2F44      	GOTO       L__sensorRead436
0x0742	0x0870      	MOVF       R0, 0
0x0743	0x023D      	SUBWF      _adcVal1, 0
L__sensorRead436:
0x0744	0x1803      	BTFSC      STATUS, 0
0x0745	0x2F52      	GOTO       L_sensorRead24
;final_code_4.c,280 :: 		text[12]='1';
0x0746	0x3031      	MOVLW      49
0x0747	0x1683      	BSF        STATUS, 5
0x0748	0x00AE      	MOVWF      _text+12
;final_code_4.c,281 :: 		sw[0][7]=1;
0x0749	0x3001      	MOVLW      1
0x074A	0x1283      	BCF        STATUS, 5
0x074B	0x00D5      	MOVWF      _sw+14
0x074C	0x3000      	MOVLW      0
0x074D	0x00D6      	MOVWF      _sw+15
;final_code_4.c,282 :: 		totFront++;
0x074E	0x0AA5      	INCF       _totFront, 1
0x074F	0x1903      	BTFSC      STATUS, 2
0x0750	0x0AA6      	INCF       _totFront+1, 1
;final_code_4.c,283 :: 		}else{
0x0751	0x2F58      	GOTO       L_sensorRead25
L_sensorRead24:
;final_code_4.c,284 :: 		text[12]='0';
0x0752	0x3030      	MOVLW      48
0x0753	0x1683      	BSF        STATUS, 5
0x0754	0x00AE      	MOVWF      _text+12
;final_code_4.c,285 :: 		sw[0][7]=0;
0x0755	0x1283      	BCF        STATUS, 5
0x0756	0x01D5      	CLRF       _sw+14
0x0757	0x01D6      	CLRF       _sw+15
;final_code_4.c,286 :: 		}
L_sensorRead25:
;final_code_4.c,287 :: 		if(ADC_Read(13)>adcVal1){
0x0758	0x300D      	MOVLW      13
0x0759	0x1683      	BSF        STATUS, 5
0x075A	0x00B7      	MOVWF      FARG_ADC_Read_channel
0x075B	0x21B5      	CALL       _ADC_Read
0x075C	0x0871      	MOVF       R0+1, 0
0x075D	0x1283      	BCF        STATUS, 5
0x075E	0x023E      	SUBWF      _adcVal1+1, 0
0x075F	0x1D03      	BTFSS      STATUS, 2
0x0760	0x2F63      	GOTO       L__sensorRead437
0x0761	0x0870      	MOVF       R0, 0
0x0762	0x023D      	SUBWF      _adcVal1, 0
L__sensorRead437:
0x0763	0x1803      	BTFSC      STATUS, 0
0x0764	0x2F71      	GOTO       L_sensorRead26
;final_code_4.c,288 :: 		text[13]='1';
0x0765	0x3031      	MOVLW      49
0x0766	0x1683      	BSF        STATUS, 5
0x0767	0x00AF      	MOVWF      _text+13
;final_code_4.c,289 :: 		sw[0][8]=1;
0x0768	0x3001      	MOVLW      1
0x0769	0x1283      	BCF        STATUS, 5
0x076A	0x00D7      	MOVWF      _sw+16
0x076B	0x3000      	MOVLW      0
0x076C	0x00D8      	MOVWF      _sw+17
;final_code_4.c,290 :: 		totFront++;
0x076D	0x0AA5      	INCF       _totFront, 1
0x076E	0x1903      	BTFSC      STATUS, 2
0x076F	0x0AA6      	INCF       _totFront+1, 1
;final_code_4.c,291 :: 		}else{
0x0770	0x2F77      	GOTO       L_sensorRead27
L_sensorRead26:
;final_code_4.c,292 :: 		text[13]='0';
0x0771	0x3030      	MOVLW      48
0x0772	0x1683      	BSF        STATUS, 5
0x0773	0x00AF      	MOVWF      _text+13
;final_code_4.c,293 :: 		sw[0][8]=0;
0x0774	0x1283      	BCF        STATUS, 5
0x0775	0x01D7      	CLRF       _sw+16
0x0776	0x01D8      	CLRF       _sw+17
;final_code_4.c,294 :: 		}
L_sensorRead27:
;final_code_4.c,296 :: 		}
0x0777	0x0008      	RETURN
; end of _sensorRead
_PWM2_Start:
;__Lib_PWM_c21.c,19 :: 		
;__Lib_PWM_c21.c,20 :: 		
0x0778	0x1683      	BSF        STATUS, 5
0x0779	0x1303      	BCF        STATUS, 6
0x077A	0x1087      	BCF        TRISC1_bit, 1
;__Lib_PWM_c21.c,21 :: 		
0x077B	0x1283      	BCF        STATUS, 5
0x077C	0x1512      	BSF        T2CON, 2
;__Lib_PWM_c21.c,22 :: 		
0x077D	0x300C      	MOVLW      12
0x077E	0x049D      	IORWF      CCP2CON, 1
;__Lib_PWM_c21.c,23 :: 		
0x077F	0x0008      	RETURN
; end of _PWM2_Start
_PWM2_Init:
;__Lib_PWM_c21.c,1 :: 		
;__Lib_PWM_c21.c,2 :: 		
;__Lib_PWM_c21.c,3 :: 		
0x0780	0x1283      	BCF        STATUS, 5
0x0781	0x1303      	BCF        STATUS, 6
0x0782	0x019B      	CLRF       CCPR2L
;__Lib_PWM_c21.c,4 :: 		
0x0783	0x121D      	BCF        CCP2CON, 4
;__Lib_PWM_c21.c,5 :: 		
0x0784	0x129D      	BCF        CCP2CON, 5
;__Lib_PWM_c21.c,6 :: 		
0x0785	0x0008      	RETURN
; end of _PWM2_Init
_PWM1_Init:
;__Lib_PWM_c21.c,33 :: 		
;__Lib_PWM_c21.c,34 :: 		
;__Lib_PWM_c21.c,35 :: 		
0x0786	0x1283      	BCF        STATUS, 5
0x0787	0x1303      	BCF        STATUS, 6
0x0788	0x0195      	CLRF       CCPR1L
;__Lib_PWM_c21.c,36 :: 		
0x0789	0x1217      	BCF        CCP1CON, 4
;__Lib_PWM_c21.c,37 :: 		
0x078A	0x1297      	BCF        CCP1CON, 5
;__Lib_PWM_c21.c,38 :: 		
0x078B	0x0008      	RETURN
; end of _PWM1_Init
___CC2DW:
;__Lib_System.c,24 :: 		
;__Lib_System.c,27 :: 		
_CC2D_Loop1:
;__Lib_System.c,29 :: 		
0x078C	0x21AE      	CALL       _____DoICP
0x078D	0x118A      	BCF        PCLATH, 3
0x078E	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,31 :: 		
0x078F	0x0080      	MOVWF      INDF
;__Lib_System.c,32 :: 		
0x0790	0x0A84      	INCF       FSR, 1
;__Lib_System.c,33 :: 		
0x0791	0x0AB1      	INCF       ___DoICPAddr, 1
;__Lib_System.c,35 :: 		
0x0792	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,36 :: 		
0x0793	0x0AB2      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,37 :: 		
0x0794	0x03F0      	DECF       R0, 1
;__Lib_System.c,39 :: 		
0x0795	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,40 :: 		
0x0796	0x2F8C      	GOTO       _CC2D_Loop1
;__Lib_System.c,42 :: 		
0x0797	0x0008      	RETURN
; end of ___CC2DW
_PWM1_Start:
;__Lib_PWM_c21.c,51 :: 		
;__Lib_PWM_c21.c,52 :: 		
0x0798	0x1683      	BSF        STATUS, 5
0x0799	0x1303      	BCF        STATUS, 6
0x079A	0x1107      	BCF        TRISC2_bit, 2
;__Lib_PWM_c21.c,53 :: 		
0x079B	0x1283      	BCF        STATUS, 5
0x079C	0x1512      	BSF        T2CON, 2
;__Lib_PWM_c21.c,54 :: 		
0x079D	0x300C      	MOVLW      12
0x079E	0x0497      	IORWF      CCP1CON, 1
;__Lib_PWM_c21.c,55 :: 		
0x079F	0x0008      	RETURN
; end of _PWM1_Start
_init_timer:
;final_code_4.c,811 :: 		void init_timer(){
;final_code_4.c,812 :: 		OPTION_REG = 0b10000101; //Timer0 interrupts are configured
0x07A0	0x3085      	MOVLW      133
0x07A1	0x1683      	BSF        STATUS, 5
0x07A2	0x1303      	BCF        STATUS, 6
0x07A3	0x0081      	MOVWF      OPTION_REG
;final_code_4.c,813 :: 		INTCON = 0b10100000; //Interrupts are enabled.
0x07A4	0x30A0      	MOVLW      160
0x07A5	0x008B      	MOVWF      INTCON
;final_code_4.c,814 :: 		}
0x07A6	0x0008      	RETURN
; end of _init_timer
_encoder:
;final_code_4.c,564 :: 		void encoder(){
;final_code_4.c,565 :: 		if(PORTC.F0==1){
0x07A7	0x1283      	BCF        STATUS, 5
0x07A8	0x1303      	BCF        STATUS, 6
0x07A9	0x1C07      	BTFSS      PORTC, 0
0x07AA	0x2FAD      	GOTO       L_encoder184
;final_code_4.c,566 :: 		tm1st= 0;
0x07AB	0x01A3      	CLRF       _tm1st
0x07AC	0x01A4      	CLRF       _tm1st+1
;final_code_4.c,568 :: 		}
L_encoder184:
;final_code_4.c,569 :: 		if(PORTC.F0==0&&tm1st==0){
0x07AD	0x1807      	BTFSC      PORTC, 0
0x07AE	0x2FD6      	GOTO       L_encoder187
0x07AF	0x3000      	MOVLW      0
0x07B0	0x0624      	XORWF      _tm1st+1, 0
0x07B1	0x1D03      	BTFSS      STATUS, 2
0x07B2	0x2FB5      	GOTO       L__encoder565
0x07B3	0x3000      	MOVLW      0
0x07B4	0x0623      	XORWF      _tm1st, 0
L__encoder565:
0x07B5	0x1D03      	BTFSS      STATUS, 2
0x07B6	0x2FD6      	GOTO       L_encoder187
L__encoder412:
;final_code_4.c,570 :: 		tm1st= 1;
0x07B7	0x3001      	MOVLW      1
0x07B8	0x00A3      	MOVWF      _tm1st
0x07B9	0x3000      	MOVLW      0
0x07BA	0x00A4      	MOVWF      _tm1st+1
;final_code_4.c,571 :: 		TMR1_value= TMR1_value+1;
0x07BB	0x0AC3      	INCF       _TMR1_value, 1
0x07BC	0x1903      	BTFSC      STATUS, 2
0x07BD	0x0AC4      	INCF       _TMR1_value+1, 1
;final_code_4.c,572 :: 		if(rotationMode==1){
0x07BE	0x3000      	MOVLW      0
0x07BF	0x062C      	XORWF      _rotationMode+1, 0
0x07C0	0x1D03      	BTFSS      STATUS, 2
0x07C1	0x2FC4      	GOTO       L__encoder566
0x07C2	0x3001      	MOVLW      1
0x07C3	0x062B      	XORWF      _rotationMode, 0
L__encoder566:
0x07C4	0x1D03      	BTFSS      STATUS, 2
0x07C5	0x2FCA      	GOTO       L_encoder188
;final_code_4.c,573 :: 		clockEncoder=clockEncoder+1;
0x07C6	0x0AA9      	INCF       _clockEncoder, 1
0x07C7	0x1903      	BTFSC      STATUS, 2
0x07C8	0x0AAA      	INCF       _clockEncoder+1, 1
;final_code_4.c,574 :: 		}else if(rotationMode==2){
0x07C9	0x2FD6      	GOTO       L_encoder189
L_encoder188:
0x07CA	0x3000      	MOVLW      0
0x07CB	0x062C      	XORWF      _rotationMode+1, 0
0x07CC	0x1D03      	BTFSS      STATUS, 2
0x07CD	0x2FD0      	GOTO       L__encoder567
0x07CE	0x3002      	MOVLW      2
0x07CF	0x062B      	XORWF      _rotationMode, 0
L__encoder567:
0x07D0	0x1D03      	BTFSS      STATUS, 2
0x07D1	0x2FD6      	GOTO       L_encoder190
;final_code_4.c,575 :: 		clockEncoder=clockEncoder-1;
0x07D2	0x3001      	MOVLW      1
0x07D3	0x02A9      	SUBWF      _clockEncoder, 1
0x07D4	0x1C03      	BTFSS      STATUS, 0
0x07D5	0x03AA      	DECF       _clockEncoder+1, 1
;final_code_4.c,576 :: 		}
L_encoder190:
L_encoder189:
;final_code_4.c,577 :: 		}
L_encoder187:
;final_code_4.c,579 :: 		if(PORTA.F4==1){
0x07D6	0x1E05      	BTFSS      PORTA, 4
0x07D7	0x2FDA      	GOTO       L_encoder191
;final_code_4.c,580 :: 		tm0st= 0;
0x07D8	0x01A1      	CLRF       _tm0st
0x07D9	0x01A2      	CLRF       _tm0st+1
;final_code_4.c,581 :: 		}
L_encoder191:
;final_code_4.c,582 :: 		if(PORTA.F4==0&&tm0st==0){
0x07DA	0x1A05      	BTFSC      PORTA, 4
0x07DB	0x2FEB      	GOTO       L_encoder194
0x07DC	0x3000      	MOVLW      0
0x07DD	0x0622      	XORWF      _tm0st+1, 0
0x07DE	0x1D03      	BTFSS      STATUS, 2
0x07DF	0x2FE2      	GOTO       L__encoder568
0x07E0	0x3000      	MOVLW      0
0x07E1	0x0621      	XORWF      _tm0st, 0
L__encoder568:
0x07E2	0x1D03      	BTFSS      STATUS, 2
0x07E3	0x2FEB      	GOTO       L_encoder194
L__encoder411:
;final_code_4.c,583 :: 		tm0st= 1;
0x07E4	0x3001      	MOVLW      1
0x07E5	0x00A1      	MOVWF      _tm0st
0x07E6	0x3000      	MOVLW      0
0x07E7	0x00A2      	MOVWF      _tm0st+1
;final_code_4.c,584 :: 		TMR0_value= TMR0_value+1;
0x07E8	0x0AC5      	INCF       _TMR0_value, 1
0x07E9	0x1903      	BTFSC      STATUS, 2
0x07EA	0x0AC6      	INCF       _TMR0_value+1, 1
;final_code_4.c,585 :: 		}
L_encoder194:
;final_code_4.c,586 :: 		}
0x07EB	0x0008      	RETURN
; end of _encoder
0x07EC	0x3021      	MOVLW      33
0x07ED	0x0084      	MOVWF      FSR
0x07EE	0x3026      	MOVLW      38
0x07EF	0x1283      	BCF        STATUS, 5
0x07F0	0x1303      	BCF        STATUS, 6
0x07F1	0x00F0      	MOVWF      R0
0x07F2	0x3068      	MOVLW      104
0x07F3	0x1683      	BSF        STATUS, 5
0x07F4	0x00B1      	MOVWF      ___DoICPAddr
0x07F5	0x3008      	MOVLW      8
0x07F6	0x00B2      	MOVWF      178
0x07F7	0x278C      	CALL       1932
0x07F8	0x0008      	RETURN
_main:
0x0800	0x118A      	BCF        PCLATH, 3
0x0801	0x27EC      	CALL       2028
0x0802	0x158A      	BSF        PCLATH, 3
;final_code_4.c,1156 :: 		void main() {
;final_code_4.c,1157 :: 		TRISD=0b11000000;
0x0803	0x30C0      	MOVLW      192
0x0804	0x1683      	BSF        STATUS, 5
0x0805	0x1303      	BCF        STATUS, 6
0x0806	0x0088      	MOVWF      TRISD
;final_code_4.c,1158 :: 		TRISC=0b10000001;
0x0807	0x3081      	MOVLW      129
0x0808	0x0087      	MOVWF      TRISC
;final_code_4.c,1159 :: 		ADCON1=0x06; // Configure all input and output in to digital
0x0809	0x3006      	MOVLW      6
0x080A	0x009F      	MOVWF      ADCON1
;final_code_4.c,1160 :: 		TRISA.F4=1;
0x080B	0x1605      	BSF        TRISA, 4
;final_code_4.c,1164 :: 		init_timer();
0x080C	0x118A      	BCF        PCLATH, 3
0x080D	0x27A0      	CALL       _init_timer
0x080E	0x158A      	BSF        PCLATH, 3
;final_code_4.c,1165 :: 		TRISB.F6=0;
0x080F	0x1306      	BCF        TRISB, 6
;final_code_4.c,1166 :: 		TRISB.F7=0;
0x0810	0x1386      	BCF        TRISB, 7
;final_code_4.c,1168 :: 		PWM1_Init(5000);
0x0811	0x1283      	BCF        STATUS, 5
0x0812	0x1412      	BSF        T2CON, 0
0x0813	0x1092      	BCF        T2CON, 1
0x0814	0x30F9      	MOVLW      249
0x0815	0x1683      	BSF        STATUS, 5
0x0816	0x0092      	MOVWF      PR2
0x0817	0x118A      	BCF        PCLATH, 3
0x0818	0x2786      	CALL       _PWM1_Init
0x0819	0x158A      	BSF        PCLATH, 3
;final_code_4.c,1169 :: 		PWM2_Init(5000);
0x081A	0x1412      	BSF        T2CON, 0
0x081B	0x1092      	BCF        T2CON, 1
0x081C	0x30F9      	MOVLW      249
0x081D	0x1683      	BSF        STATUS, 5
0x081E	0x0092      	MOVWF      PR2
0x081F	0x118A      	BCF        PCLATH, 3
0x0820	0x2780      	CALL       _PWM2_Init
0x0821	0x158A      	BSF        PCLATH, 3
;final_code_4.c,1170 :: 		PWM1_Set_Duty(200);
0x0822	0x30C8      	MOVLW      200
0x0823	0x1683      	BSF        STATUS, 5
0x0824	0x00BB      	MOVWF      FARG_PWM1_Set_Duty_new_duty
0x0825	0x118A      	BCF        PCLATH, 3
0x0826	0x2048      	CALL       _PWM1_Set_Duty
0x0827	0x158A      	BSF        PCLATH, 3
;final_code_4.c,1171 :: 		PWM2_Set_Duty(200);
0x0828	0x30C8      	MOVLW      200
0x0829	0x1683      	BSF        STATUS, 5
0x082A	0x00BB      	MOVWF      FARG_PWM2_Set_Duty_new_duty
0x082B	0x118A      	BCF        PCLATH, 3
0x082C	0x2089      	CALL       _PWM2_Set_Duty
0x082D	0x158A      	BSF        PCLATH, 3
;final_code_4.c,1172 :: 		PWM1_Start();
0x082E	0x118A      	BCF        PCLATH, 3
0x082F	0x2798      	CALL       _PWM1_Start
0x0830	0x158A      	BSF        PCLATH, 3
;final_code_4.c,1173 :: 		PWM2_Start();
0x0831	0x118A      	BCF        PCLATH, 3
0x0832	0x2778      	CALL       _PWM2_Start
0x0833	0x158A      	BSF        PCLATH, 3
;final_code_4.c,1174 :: 		TRISA.F4=1;
0x0834	0x1683      	BSF        STATUS, 5
0x0835	0x1605      	BSF        TRISA, 4
;final_code_4.c,1175 :: 		TRISC.F0=1;
0x0836	0x1407      	BSF        TRISC, 0
;final_code_4.c,1177 :: 		PORTD.F7=1;
0x0837	0x1283      	BCF        STATUS, 5
0x0838	0x1788      	BSF        PORTD, 7
;final_code_4.c,1178 :: 		TRISD.F7 = 1;
0x0839	0x1683      	BSF        STATUS, 5
0x083A	0x1788      	BSF        TRISD, 7
;final_code_4.c,1179 :: 		TRISD.F0=1;
0x083B	0x1408      	BSF        TRISD, 0
;final_code_4.c,1180 :: 		TRISD.F1=1;
0x083C	0x1488      	BSF        TRISD, 1
;final_code_4.c,1181 :: 		TRISD.F2=1;
0x083D	0x1508      	BSF        TRISD, 2
;final_code_4.c,1182 :: 		initEncoder();
0x083E	0x118A      	BCF        PCLATH, 3
0x083F	0x218D      	CALL       _initEncoder
0x0840	0x158A      	BSF        PCLATH, 3
;final_code_4.c,1183 :: 		do{
L_main366:
;final_code_4.c,1184 :: 		moveF();
0x0841	0x118A      	BCF        PCLATH, 3
0x0842	0x213F      	CALL       _moveF
0x0843	0x158A      	BSF        PCLATH, 3
;final_code_4.c,1185 :: 		sensorRead();
0x0844	0x118A      	BCF        PCLATH, 3
0x0845	0x25C0      	CALL       _sensorRead
0x0846	0x158A      	BSF        PCLATH, 3
;final_code_4.c,1186 :: 		value=bin_deci();
0x0847	0x118A      	BCF        PCLATH, 3
0x0848	0x2531      	CALL       _bin_deci
0x0849	0x158A      	BSF        PCLATH, 3
0x084A	0x0870      	MOVF       R0, 0
0x084B	0x00A7      	MOVWF      _value
0x084C	0x0871      	MOVF       R0+1, 0
0x084D	0x00A8      	MOVWF      _value+1
;final_code_4.c,1187 :: 		}while(value==0);
0x084E	0x3000      	MOVLW      0
0x084F	0x0671      	XORWF      R0+1, 0
0x0850	0x1D03      	BTFSS      STATUS, 2
0x0851	0x2854      	GOTO       L__main665
0x0852	0x3000      	MOVLW      0
0x0853	0x0670      	XORWF      R0, 0
L__main665:
0x0854	0x1903      	BTFSC      STATUS, 2
0x0855	0x2841      	GOTO       L_main366
;final_code_4.c,1188 :: 		fullSpeed();
0x0856	0x118A      	BCF        PCLATH, 3
0x0857	0x2522      	CALL       _fullSpeed
0x0858	0x158A      	BSF        PCLATH, 3
;final_code_4.c,1189 :: 		while(1){
L_main369:
;final_code_4.c,1206 :: 		avoidObstacles();
0x0859	0x118A      	BCF        PCLATH, 3
0x085A	0x2306      	CALL       _avoidObstacles
0x085B	0x158A      	BSF        PCLATH, 3
;final_code_4.c,1208 :: 		Delay_us(100);
0x085C	0x30A6      	MOVLW      166
0x085D	0x1283      	BCF        STATUS, 5
0x085E	0x1303      	BCF        STATUS, 6
0x085F	0x00FD      	MOVWF      R13
L_main371:
0x0860	0x0BFD      	DECFSZ     R13, 1
0x0861	0x2860      	GOTO       L_main371
0x0862	0x0000      	NOP
;final_code_4.c,1213 :: 		}
0x0863	0x2859      	GOTO       L_main369
;final_code_4.c,1216 :: 		}
0x0864	0x2864      	GOTO       $+0
; end of _main
;final_code_4.c,0 :: ?ICS_tm0st
0x0868	0x3400 ;?ICS_tm0st+0
0x0869	0x3400 ;?ICS_tm0st+1
; end of ?ICS_tm0st
;final_code_4.c,0 :: ?ICS_tm1st
0x086A	0x3400 ;?ICS_tm1st+0
0x086B	0x3400 ;?ICS_tm1st+1
; end of ?ICS_tm1st
;final_code_4.c,0 :: ?ICS_totFront
0x086C	0x3400 ;?ICS_totFront+0
0x086D	0x3400 ;?ICS_totFront+1
; end of ?ICS_totFront
;final_code_4.c,0 :: ?ICS_value
0x086E	0x3400 ;?ICS_value+0
0x086F	0x3400 ;?ICS_value+1
; end of ?ICS_value
;final_code_4.c,0 :: ?ICS_clockEncoder
0x0870	0x3400 ;?ICS_clockEncoder+0
0x0871	0x3400 ;?ICS_clockEncoder+1
; end of ?ICS_clockEncoder
;final_code_4.c,0 :: ?ICS_rotationMode
0x0872	0x3400 ;?ICS_rotationMode+0
0x0873	0x3400 ;?ICS_rotationMode+1
; end of ?ICS_rotationMode
;final_code_4.c,0 :: ?ICS_totBack
0x0874	0x3400 ;?ICS_totBack+0
0x0875	0x3400 ;?ICS_totBack+1
; end of ?ICS_totBack
;final_code_4.c,0 :: ?ICS_speed
0x0876	0x34FF ;?ICS_speed+0
0x0877	0x3400 ;?ICS_speed+1
; end of ?ICS_speed
;final_code_4.c,0 :: ?ICS_noDirection
0x0878	0x3400 ;?ICS_noDirection+0
0x0879	0x3400 ;?ICS_noDirection+1
; end of ?ICS_noDirection
;final_code_4.c,0 :: ?ICS_speed1
0x087A	0x34E1 ;?ICS_speed1+0
0x087B	0x3400 ;?ICS_speed1+1
; end of ?ICS_speed1
;final_code_4.c,0 :: ?ICS_speed3
0x087C	0x34E6 ;?ICS_speed3+0
0x087D	0x3400 ;?ICS_speed3+1
; end of ?ICS_speed3
;final_code_4.c,0 :: ?ICS_speed2
0x087E	0x34FA ;?ICS_speed2+0
0x087F	0x3400 ;?ICS_speed2+1
; end of ?ICS_speed2
;final_code_4.c,0 :: ?ICS_direction
0x0880	0x3400 ;?ICS_direction+0
0x0881	0x3400 ;?ICS_direction+1
; end of ?ICS_direction
;final_code_4.c,0 :: ?ICS_adcVal
0x0882	0x34C8 ;?ICS_adcVal+0
0x0883	0x3400 ;?ICS_adcVal+1
; end of ?ICS_adcVal
;final_code_4.c,0 :: ?ICS_adcVal1
0x0884	0x343C ;?ICS_adcVal1+0
0x0885	0x3400 ;?ICS_adcVal1+1
; end of ?ICS_adcVal1
;final_code_4.c,0 :: ?ICS_normalization
0x0886	0x3400 ;?ICS_normalization+0
0x0887	0x3400 ;?ICS_normalization+1
; end of ?ICS_normalization
;final_code_4.c,0 :: ?ICS_stat
0x0888	0x3400 ;?ICS_stat+0
0x0889	0x3400 ;?ICS_stat+1
; end of ?ICS_stat
;final_code_4.c,0 :: ?ICS_TMR1_value
0x088A	0x3400 ;?ICS_TMR1_value+0
0x088B	0x3400 ;?ICS_TMR1_value+1
; end of ?ICS_TMR1_value
;final_code_4.c,0 :: ?ICS_TMR0_value
0x088C	0x3400 ;?ICS_TMR0_value+0
0x088D	0x3400 ;?ICS_TMR0_value+1
; end of ?ICS_TMR0_value
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [25]    _interrupt
0x001D      [43]    _Mul_16x16_U
0x0048      [59]    _PWM1_Set_Duty
0x0083       [6]    _Delay_1us
0x0089      [59]    _PWM2_Set_Duty
0x00C4       [7]    _stopAll
0x00CB      [11]    _rotateLeft
0x00D6      [11]    _rotateRight
0x00E1      [15]    _leftT
0x00F0      [15]    _rightT
0x00FF      [64]    _pulseIn3
0x013F      [11]    _moveF
0x014A       [8]    _Delay_22us
0x0152      [59]    _pulseIn2
0x018D       [7]    _initEncoder
0x0194      [26]    _printClockEncoders
0x01AE       [7]    _____DoICP
0x01B5      [36]    _ADC_Read
0x01D9      [56]    _straight_com
0x0211     [116]    _goStraight
0x0285      [43]    _getCompass
0x02B0      [44]    _getDis3
0x02DC      [42]    _getDis2
0x0306     [540]    _avoidObstacles
0x0522      [15]    _fullSpeed
0x0531     [143]    _bin_deci
0x05C0     [440]    _sensorRead
0x0778       [8]    _PWM2_Start
0x0780       [6]    _PWM2_Init
0x0786       [6]    _PWM1_Init
0x078C      [12]    ___CC2DW
0x0798       [8]    _PWM1_Start
0x07A0       [7]    _init_timer
0x07A7      [69]    _encoder
0x0800      [98]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0002       [1]    PCL
0x0003       [0]    NOT_PD_bit
0x0003       [0]    DC_bit
0x0003       [0]    Z_bit
0x0003       [0]    IRP_bit
0x0003       [1]    STATUS
0x0003       [0]    RP0_bit
0x0003       [0]    NOT_TO_bit
0x0003       [0]    C_bit
0x0003       [0]    RP1_bit
0x0004       [1]    FSRPTR
0x0004       [1]    FSR
0x0005       [0]    RA4_bit
0x0005       [0]    RA0_bit
0x0005       [0]    RA1_bit
0x0005       [1]    PORTA
0x0005       [0]    RA7_bit
0x0005       [0]    RA6_bit
0x0005       [0]    RA2_bit
0x0005       [0]    RA5_bit
0x0005       [0]    RA3_bit
0x0006       [0]    RB0_bit
0x0006       [0]    RB4_bit
0x0006       [1]    PORTB
0x0006       [0]    RB2_bit
0x0006       [0]    RB3_bit
0x0006       [0]    RB7_bit
0x0006       [0]    RB5_bit
0x0006       [0]    RB1_bit
0x0006       [0]    RB6_bit
0x0007       [0]    RC3_bit
0x0007       [0]    RC1_bit
0x0007       [0]    RC2_bit
0x0007       [0]    RC0_bit
0x0007       [0]    RC6_bit
0x0007       [0]    RC7_bit
0x0007       [1]    PORTC
0x0007       [0]    RC5_bit
0x0007       [0]    RC4_bit
0x0008       [1]    PORTD
0x0008       [0]    RD6_bit
0x0008       [0]    RD5_bit
0x0008       [0]    RD2_bit
0x0008       [0]    RD1_bit
0x0008       [0]    RD0_bit
0x0008       [0]    RD4_bit
0x0008       [0]    RD3_bit
0x0008       [0]    RD7_bit
0x0009       [0]    RE0_bit
0x0009       [0]    RE2_bit
0x0009       [0]    RE3_bit
0x0009       [1]    PORTE
0x0009       [0]    RE1_bit
0x000A       [1]    PCLATH
0x000B       [0]    GIE_bit
0x000B       [0]    T0IE_bit
0x000B       [0]    PEIE_bit
0x000B       [0]    RBIF_bit
0x000B       [0]    TMR0IF_bit
0x000B       [1]    INTCON
0x000B       [0]    INTF_bit
0x000B       [0]    INTE_bit
0x000B       [0]    RBIE_bit
0x000B       [0]    T0IF_bit
0x000B       [0]    TMR0IE_bit
0x000C       [1]    PIR1
0x000C       [0]    TMR1IF_bit
0x000C       [0]    ADIF_bit
0x000C       [0]    RCIF_bit
0x000C       [0]    CCP1IF_bit
0x000C       [0]    SSPIF_bit
0x000C       [0]    TMR2IF_bit
0x000C       [0]    TXIF_bit
0x000D       [0]    CCP2IF_bit
0x000D       [0]    C1IF_bit
0x000D       [0]    BCLIF_bit
0x000D       [0]    ULPWUIF_bit
0x000D       [0]    EEIF_bit
0x000D       [0]    OSFIF_bit
0x000D       [0]    C2IF_bit
0x000D       [1]    PIR2
0x000E       [1]    TMR1L
0x000F       [1]    TMR1H
0x0010       [0]    TMR1GE_bit
0x0010       [0]    TMR1CS_bit
0x0010       [0]    T1SYNC_bit
0x0010       [0]    T1INSYNC_bit
0x0010       [0]    NOT_T1SYNC_bit
0x0010       [0]    T1CKPS0_bit
0x0010       [0]    T1GINV_bit
0x0010       [0]    T1CKPS1_bit
0x0010       [0]    TMR1ON_bit
0x0010       [0]    T1OSCEN_bit
0x0010       [1]    T1CON
0x0011       [1]    TMR2
0x0012       [0]    TOUTPS0_bit
0x0012       [0]    TMR2ON_bit
0x0012       [0]    TOUTPS1_bit
0x0012       [0]    TOUTPS3_bit
0x0012       [0]    TOUTPS2_bit
0x0012       [0]    T2CKPS0_bit
0x0012       [1]    T2CON
0x0012       [0]    T2CKPS1_bit
0x0013       [1]    SSPBUF
0x0014       [0]    SSPM1_bit
0x0014       [0]    SSPM0_bit
0x0014       [1]    SSPCON
0x0014       [0]    SSPEN_bit
0x0014       [0]    SSPOV_bit
0x0014       [0]    SSPM3_bit
0x0014       [0]    WCOL_bit
0x0014       [0]    SSPM2_bit
0x0014       [0]    CKP_bit
0x0015       [1]    CCPR1L
0x0015       [2]    CCPR1
0x0016       [1]    CCPR1H
0x0017       [0]    DC1B0_bit
0x0017       [0]    CCP1X_bit
0x0017       [0]    CCP1M0_bit
0x0017       [0]    CCP1M1_bit
0x0017       [0]    CCP1M3_bit
0x0017       [0]    CCP1Y_bit
0x0017       [1]    CCP1CON
0x0017       [0]    CCP1M2_bit
0x0017       [0]    P1M1_bit
0x0017       [0]    DC1B1_bit
0x0017       [0]    P1M0_bit
0x0018       [0]    FERR_bit
0x0018       [0]    ADDEN_bit
0x0018       [0]    RCD8_bit
0x0018       [0]    OERR_bit
0x0018       [1]    RCSTA
0x0018       [0]    RX9D_bit
0x0018       [0]    RC8_9_bit
0x0018       [0]    RC9_bit
0x0018       [0]    NOT_RC8_bit
0x0018       [0]    RX9_bit
0x0018       [0]    CREN_bit
0x0018       [0]    SREN_bit
0x0018       [0]    SPEN_bit
0x0019       [1]    TXREG
0x001A       [1]    RCREG
0x001B       [1]    CCPR2L
0x001B       [2]    CCPR2
0x001C       [1]    CCPR2H
0x001D       [0]    CCP2M2_bit
0x001D       [0]    DC2B1_bit
0x001D       [0]    CCP2Y_bit
0x001D       [0]    CCP2M3_bit
0x001D       [0]    DC2B0_bit
0x001D       [1]    CCP2CON
0x001D       [0]    CCP2X_bit
0x001D       [0]    CCP2M1_bit
0x001D       [0]    CCP2M0_bit
0x001E       [1]    ADRESH
0x001F       [0]    ADCS1_bit
0x001F       [1]    ADCON0
0x001F       [0]    CHS2_bit
0x001F       [0]    CHS1_bit
0x001F       [0]    ADCS0_bit
0x001F       [0]    CHS3_bit
0x001F       [0]    CHS0_bit
0x001F       [0]    GO_DONE_bit
0x001F       [0]    ADON_bit
0x001F       [0]    GO_bit
0x001F       [0]    NOT_DONE_bit
0x0021       [2]    _tm0st
0x0023       [2]    _tm1st
0x0025       [2]    _totFront
0x0027       [2]    _value
0x0029       [2]    _clockEncoder
0x002B       [2]    _rotationMode
0x002D       [2]    _totBack
0x002F       [2]    _speed
0x0031       [2]    _noDirection
0x0033       [2]    _speed1
0x0035       [2]    _speed3
0x0037       [2]    _speed2
0x0039       [2]    _direction
0x003B       [2]    _adcVal
0x003D       [2]    _adcVal1
0x003F       [2]    _normalization
0x0041       [2]    _stat
0x0043       [2]    _TMR1_value
0x0045       [2]    _TMR0_value
0x0047      [36]    _sw
0x006B       [2]    _counter2
0x006D       [2]    _dis1
0x006F       [1]    ___savePCLATH
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [0]    NOT_RBPU_bit
0x0081       [0]    T0SE_bit
0x0081       [0]    T0CS_bit
0x0081       [0]    INTEDG_bit
0x0081       [0]    PSA_bit
0x0081       [0]    PS0_bit
0x0081       [0]    PS2_bit
0x0081       [0]    PS1_bit
0x0081       [1]    OPTION_REG
0x0085       [0]    TRISA1_bit
0x0085       [0]    TRISA0_bit
0x0085       [0]    TRISA5_bit
0x0085       [0]    TRISA4_bit
0x0085       [0]    TRISA7_bit
0x0085       [0]    TRISA2_bit
0x0085       [0]    TRISA3_bit
0x0085       [1]    TRISA
0x0085       [0]    TRISA6_bit
0x0086       [0]    TRISB0_bit
0x0086       [0]    TRISB7_bit
0x0086       [0]    TRISB5_bit
0x0086       [0]    TRISB6_bit
0x0086       [0]    TRISB2_bit
0x0086       [0]    TRISB1_bit
0x0086       [0]    TRISB3_bit
0x0086       [0]    TRISB4_bit
0x0086       [1]    TRISB
0x0087       [0]    TRISC1_bit
0x0087       [0]    TRISC0_bit
0x0087       [0]    TRISC7_bit
0x0087       [0]    TRISC2_bit
0x0087       [0]    TRISC6_bit
0x0087       [0]    TRISC5_bit
0x0087       [0]    TRISC4_bit
0x0087       [0]    TRISC3_bit
0x0087       [1]    TRISC
0x0088       [0]    TRISD7_bit
0x0088       [0]    TRISD2_bit
0x0088       [0]    TRISD1_bit
0x0088       [0]    TRISD0_bit
0x0088       [0]    TRISD3_bit
0x0088       [0]    TRISD6_bit
0x0088       [1]    TRISD
0x0088       [0]    TRISD4_bit
0x0088       [0]    TRISD5_bit
0x0089       [0]    TRISE1_bit
0x0089       [0]    TRISE2_bit
0x0089       [0]    TRISE3_bit
0x0089       [1]    TRISE
0x0089       [0]    TRISE0_bit
0x008C       [0]    TMR2IE_bit
0x008C       [0]    CCP1IE_bit
0x008C       [1]    PIE1
0x008C       [0]    TMR1IE_bit
0x008C       [0]    RCIE_bit
0x008C       [0]    ADIE_bit
0x008C       [0]    SSPIE_bit
0x008C       [0]    TXIE_bit
0x008D       [0]    EEIE_bit
0x008D       [1]    PIE2
0x008D       [0]    BCLIE_bit
0x008D       [0]    CCP2IE_bit
0x008D       [0]    ULPWUIE_bit
0x008D       [0]    C1IE_bit
0x008D       [0]    OSFIE_bit
0x008D       [0]    C2IE_bit
0x008E       [0]    NOT_BO_bit
0x008E       [0]    SBOREN_bit
0x008E       [0]    NOT_POR_bit
0x008E       [0]    ULPWUE_bit
0x008E       [1]    PCON
0x008E       [0]    NOT_BOR_bit
0x008F       [0]    IRCF1_bit
0x008F       [0]    IRCF0_bit
0x008F       [0]    LTS_bit
0x008F       [0]    HTS_bit
0x008F       [0]    OSTS_bit
0x008F       [0]    SCS_bit
0x008F       [1]    OSCCON
0x008F       [0]    IRCF2_bit
0x0090       [0]    TUN3_bit
0x0090       [0]    TUN4_bit
0x0090       [0]    TUN2_bit
0x0090       [0]    TUN0_bit
0x0090       [0]    TUN1_bit
0x0090       [1]    OSCTUNE
0x0091       [0]    ACKEN_bit
0x0091       [0]    ACKDT_bit
0x0091       [0]    RCEN_bit
0x0091       [0]    SEN_bit
0x0091       [0]    RSEN_bit
0x0091       [0]    PEN_bit
0x0091       [0]    ACKSTAT_bit
0x0091       [1]    SSPCON2
0x0091       [0]    GCEN_bit
0x0092       [1]    PR2
0x0093       [1]    MSK
0x0093       [1]    SSPMSK
0x0093       [1]    SSPADD
0x0094       [0]    NOT_W_bit
0x0094       [0]    NOT_WRITE_bit
0x0094       [0]    I2C_READ_bit
0x0094       [0]    I2C_START__bit
0x0094       [0]    R_bit
0x0094       [0]    BF_bit
0x0094       [1]    SSPSTAT
0x0094       [0]    UA_bit
0x0094       [0]    R_W_bit
0x0094       [0]    READ_WRITE_bit
0x0094       [0]    S_bit
0x0094       [0]    I2C_DATA_bit
0x0094       [0]    NOT_A_bit
0x0094       [0]    D_bit
0x0094       [0]    SMP_bit
0x0094       [0]    CKE_bit
0x0094       [0]    P_bit
0x0094       [0]    I2C_STOP__bit
0x0094       [0]    DATA_ADDRESS_bit
0x0094       [0]    NOT_ADDRESS_bit
0x0094       [0]    D_A_bit
0x0095       [0]    WPUB1_bit
0x0095       [0]    WPUB2_bit
0x0095       [1]    WPUB
0x0095       [0]    WPUB0_bit
0x0095       [0]    WPUB6_bit
0x0095       [0]    WPUB7_bit
0x0095       [0]    WPUB5_bit
0x0095       [0]    WPUB3_bit
0x0095       [0]    WPUB4_bit
0x0096       [1]    IOCB
0x0096       [0]    IOCB2_bit
0x0096       [0]    IOCB3_bit
0x0096       [0]    IOCB0_bit
0x0096       [0]    IOCB1_bit
0x0096       [0]    IOCB6_bit
0x0096       [0]    IOCB7_bit
0x0096       [0]    IOCB4_bit
0x0096       [0]    IOCB5_bit
0x0097       [0]    VR1_bit
0x0097       [0]    VR2_bit
0x0097       [1]    VRCON
0x0097       [0]    VR0_bit
0x0097       [0]    VR3_bit
0x0097       [0]    VROE_bit
0x0097       [0]    VREN_bit
0x0097       [0]    VRSS_bit
0x0097       [0]    VRR_bit
0x0098       [0]    TRMT_bit
0x0098       [0]    BRGH_bit
0x0098       [0]    TX9D_bit
0x0098       [1]    TXSTA
0x0098       [0]    TXD8_bit
0x0098       [0]    SENDB_bit
0x0098       [0]    NOT_TX8_bit
0x0098       [0]    TX9_bit
0x0098       [0]    CSRC_bit
0x0098       [0]    SYNC_bit
0x0098       [0]    TXEN_bit
0x0098       [0]    TX8_9_bit
0x0099       [0]    BRG1_bit
0x0099       [0]    BRG0_bit
0x0099       [1]    SPBRG
0x0099       [0]    BRG2_bit
0x0099       [0]    BRG5_bit
0x0099       [0]    BRG6_bit
0x0099       [0]    BRG7_bit
0x0099       [0]    BRG3_bit
0x0099       [0]    BRG4_bit
0x009A       [0]    BRG9_bit
0x009A       [0]    BRG8_bit
0x009A       [1]    SPBRGH
0x009A       [0]    BRG13_bit
0x009A       [0]    BRG14_bit
0x009A       [0]    BRG15_bit
0x009A       [0]    BRG10_bit
0x009A       [0]    BRG11_bit
0x009A       [0]    BRG12_bit
0x009B       [0]    PDC0_bit
0x009B       [1]    PWM1CON
0x009B       [0]    PDC1_bit
0x009B       [0]    PDC5_bit
0x009B       [0]    PDC3_bit
0x009B       [0]    PDC4_bit
0x009B       [0]    PDC2_bit
0x009B       [0]    PDC6_bit
0x009B       [0]    PRSEN_bit
0x009C       [0]    PSSBD0_bit
0x009C       [1]    ECCPAS
0x009C       [0]    ECCPAS1_bit
0x009C       [0]    ECCPAS0_bit
0x009C       [0]    ECCPASE_bit
0x009C       [0]    ECCPAS2_bit
0x009C       [0]    PSSBD1_bit
0x009C       [0]    PSSAC0_bit
0x009C       [0]    PSSAC1_bit
0x009D       [1]    PSTRCON
0x009D       [0]    STRD_bit
0x009D       [0]    STRSYNC_bit
0x009D       [0]    STRC_bit
0x009D       [0]    STRA_bit
0x009D       [0]    STRB_bit
0x009E       [1]    ADRESL
0x009F       [0]    VCFG1_bit
0x009F       [0]    ADFM_bit
0x009F       [0]    VCFG0_bit
0x009F       [1]    ADCON1
0x00A0       [2]    _counter3
0x00A2      [14]    _text
0x00B0       [1]    ___saveSTATUS
0x00B1       [2]    ___DoICPAddr
0x00B3       [4]    FARG_PWM1_Init_PWM_Freq
0x00B3       [4]    FARG_PWM2_Init_PWM_Freq
0x00B7       [2]    goStraight_left_L0
0x00B7       [1]    FARG_ADC_Read_channel
0x00B9       [2]    goStraight_right_L0
0x00BB       [1]    FARG_PWM1_Set_Duty_new_duty
0x00BB       [1]    FARG_PWM2_Set_Duty_new_duty
0x0105       [1]    WDTCON
0x0105       [0]    WDTPS0_bit
0x0105       [0]    SWDTEN_bit
0x0105       [0]    WDTPS1_bit
0x0105       [0]    WDTPS3_bit
0x0105       [0]    WDTPS2_bit
0x0107       [0]    C1R_bit
0x0107       [0]    C1POL_bit
0x0107       [0]    C1CH0_bit
0x0107       [0]    C1CH1_bit
0x0107       [0]    C1OE_bit
0x0107       [0]    C1OUT_bit
0x0107       [0]    C1ON_bit
0x0107       [1]    CM1CON0
0x0108       [0]    C2OE_bit
0x0108       [0]    C2POL_bit
0x0108       [0]    C2OUT_bit
0x0108       [1]    CM2CON0
0x0108       [0]    C2ON_bit
0x0108       [0]    C2CH1_bit
0x0108       [0]    C2CH0_bit
0x0108       [0]    C2R_bit
0x0109       [0]    C2RSEL_bit
0x0109       [0]    T1GSS_bit
0x0109       [1]    CM2CON1
0x0109       [0]    C1RSEL_bit
0x0109       [0]    C2SYNC_bit
0x0109       [0]    MC1OUT_bit
0x0109       [0]    MC2OUT_bit
0x010C       [1]    EEDAT
0x010C       [1]    EEDATA
0x010D       [1]    EEADR
0x010E       [1]    EEDATH
0x010F       [1]    EEADRH
0x0185       [0]    C1SEN_bit
0x0185       [0]    C2REN_bit
0x0185       [0]    SR1_bit
0x0185       [0]    SR0_bit
0x0185       [1]    SRCON
0x0185       [0]    FVREN_bit
0x0185       [0]    PULSS_bit
0x0185       [0]    PULSR_bit
0x0187       [0]    BRG16_bit
0x0187       [0]    WUE_bit
0x0187       [0]    ABDEN_bit
0x0187       [0]    SCKP_bit
0x0187       [1]    BAUDCTL
0x0187       [0]    ABDOVF_bit
0x0187       [0]    RCIDL_bit
0x0188       [0]    ANS4_bit
0x0188       [0]    ANS3_bit
0x0188       [0]    ANS2_bit
0x0188       [0]    ANS7_bit
0x0188       [0]    ANS6_bit
0x0188       [0]    ANS5_bit
0x0188       [1]    ANSEL
0x0188       [0]    ANS1_bit
0x0188       [0]    ANS0_bit
0x0189       [0]    ANS13_bit
0x0189       [1]    ANSELH
0x0189       [0]    ANS8_bit
0x0189       [0]    ANS12_bit
0x0189       [0]    ANS11_bit
0x0189       [0]    ANS10_bit
0x0189       [0]    ANS9_bit
0x018C       [0]    RD_bit
0x018C       [0]    WRERR_bit
0x018C       [1]    EECON1
0x018C       [0]    EEPGD_bit
0x018C       [0]    WREN_bit
0x018C       [0]    WR_bit
0x018D       [1]    EECON2
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0868       [2]    ?ICS_tm0st
0x086A       [2]    ?ICS_tm1st
0x086C       [2]    ?ICS_totFront
0x086E       [2]    ?ICS_value
0x0870       [2]    ?ICS_clockEncoder
0x0872       [2]    ?ICS_rotationMode
0x0874       [2]    ?ICS_totBack
0x0876       [2]    ?ICS_speed
0x0878       [2]    ?ICS_noDirection
0x087A       [2]    ?ICS_speed1
0x087C       [2]    ?ICS_speed3
0x087E       [2]    ?ICS_speed2
0x0880       [2]    ?ICS_direction
0x0882       [2]    ?ICS_adcVal
0x0884       [2]    ?ICS_adcVal1
0x0886       [2]    ?ICS_normalization
0x0888       [2]    ?ICS_stat
0x088A       [2]    ?ICS_TMR1_value
0x088C       [2]    ?ICS_TMR0_value
//** Label List: ** 
//----------------------------------------------
  L_sensorRead0
  L_sensorRead1
  L_sensorRead2
  L_sensorRead3
  L_sensorRead4
  L_sensorRead5
  L_sensorRead6
  L_sensorRead7
  L_sensorRead8
  L_sensorRead9
  L_sensorRead10
  L_sensorRead11
  L_sensorRead12
  L_sensorRead13
  L_sensorRead14
  L_sensorRead15
  L_sensorRead16
  L_sensorRead17
  L_sensorRead18
  L_sensorRead19
  L_sensorRead20
  L_sensorRead21
  L_sensorRead22
  L_sensorRead23
  L_sensorRead24
  L_sensorRead25
  L_sensorRead26
  L_sensorRead27
  L_printToLcd28
  L_printToLcd29
  L_printToLcd30
  L_lineFollow31
  L_lineFollow32
  L_lineFollow33
  L_lineFollow34
  L_lineFollow35
  L_lineFollow36
  L_lineFollow37
  L_lineFollow38
  L_lineFollow39
  L_lineFollow40
  L_lineFollow41
  L_lineFollow42
  L_lineFollow43
  L_lineFollow44
  L_lineFollow45
  L_lineFollow46
  L_lineFollow47
  L_lineFollow48
  L_lineFollow49
  L_lineFollow50
  L_lineFollow51
  L_lineFollow52
  L_lineFollow53
  L_lineFollow54
  L_lineFollow55
  L_lineFollow56
  L_lineFollow57
  L_lineFollow58
  L_lineFollow59
  L_lineFollow60
  L_lineFollow61
  L_lineFollow62
  L_lineFollow63
  L_lineFollow64
  L_lineFollow65
  L_lineFollow66
  L_lineFollow67
  L_lineFollow68
  L_lineFollow69
  L_lineFollow70
  L_lineFollow71
  L_lineFollow72
  L_lineFollow73
  L_lineFollow74
  L_lineFollow75
  L_lineFollow76
  L_lineFollow77
  L_lineFollow78
  L_lineFollow79
  L_lineFollow80
  L_lineFollow81
  L_lineFollow82
  L_lineFollow83
  L_lineFollow84
  L_lineFollow85
  L_lineFollow86
  L_lineFollow87
  L_lineFollow88
  L_lineFollow89
  L_lineFollow90
  L_lineFollow91
  L_lineFollow92
  L_lineFollow93
  L_lineFollow94
  L_lineFollow95
  L_lineFollow96
  L_lineFollow97
  L_lineFollow98
  L_lineFollow99
  L_lineFollow100
  L_lineFollow101
  L_lineFollow102
  L_lineFollow103
  L_lineFollow104
  L_lineFollow105
  L_lineFollow106
  L_lineFollow107
  L_lineFollow108
  L_lineFollow109
  L_lineFollow110
  L_lineFollow111
  L_lineFollow112
  L_straight113
  L_straight114
  L_straight115
  L_straight116
  L_straight117
  L_straight118
  L_straight119
  L_straight120
  L_straight121
  L_straight122
  L_straight123
  L_straight_com124
  L_straight_com125
  L_straight_com126
  L_straight_com127
  L_straight_com128
  L_straight_com129
  L_straight_com130
  L_straight_com131
  L_straight_com132
  L_straight_com133
  L_straight_com134
  L_straight_com135
  L_SemSmallFollow136
  L_SemSmallFollow137
  L_SemSmallFollow138
  L_SemSmallFollow139
  L_SemSmallFollow140
  L_SemSmallFollow141
  L_SemSmallFollow142
  L_SemSmallFollow143
  L_SemSmallFollow144
  L_SemSmallFollow145
  L_SemSmallFollow146
  L_SemSmallFollow147
  L_SemSmallFollow148
  L_SemSmallFollow149
  L_SemSmallFollow150
  L_SemSmallFollow151
  L_SemSmallFollow152
  L_SemSmallFollow153
  L_SemSmallFollow154
  L_SemSmallFollow155
  L_SemSmallFollow156
  L_SemSmallFollow157
  L_SemSmallFollow158
  L_SemSmallFollow159
  L_SemSmallFollow160
  L_SemSmallFollow161
  L_SemSmallFollow162
  L_SemSmallFollow163
  L_SemSmallFollow164
  L_SemSmallFollow165
  L_SemSmallFollow166
  L_SemSmallFollow167
  L_SemSmallFollow168
  L_SemSmallFollow169
  L_SemSmallFollow170
  L_SemSmallFollow171
  L_SemSmallFollow172
  L_SemSmallFollow173
  L_SemSmallFollow174
  L_SemSmallFollow175
  L_SemSmallFollow176
  L_SemSmallFollow177
  L_SemSmallFollow178
  L_SemSmallFollow179
  L_SemSmallFollow180
  L_SemSmallFollow181
  L_SemSmallFollow182
  L_SemSmallFollow183
  L_encoder184
  L_encoder185
  L_encoder186
  L_encoder187
  L_encoder188
  L_encoder189
  L_encoder190
  L_encoder191
  L_encoder192
  L_encoder193
  L_encoder194
  L_goStraight195
  L_goStraight196
  L_goStraight197
  L_goStraight198
  L_goStraight199
  L_goStraight200
  L_goStraight201
  L_goStraight202
  L_goStraight203
  L_goStraight204
  L_goStraight205
  L_goStraight206
  L_goStraight207
  L_goStraight2208
  L_goStraight2209
  L_goStraight2210
  L_goStraight2211
  L_goStraight2212
  L_goStraight2213
  L_goStraight2214
  L_goStraight2215
  L_goStraight2216
  L_goStraight2217
  L_tuneToMiddle218
  L_tuneToMiddle219
  L_tuneToMiddle220
  L_tuneToMiddle221
  L_tuneToMiddle222
  L_tuneToMiddle223
  L_tuneToMiddle224
  L_tuneToMiddle225
  L_tuneToMiddle226
  L_tuneToMiddle227
  L_tuneToMiddle228
  L_tuneToMiddle229
  L_tuneToMiddle230
  L_tuneToMiddle231
  L_tuneToMiddle232
  L_tuneToMiddle233
  L_printClockEncoders234
  L_printClockEncoders235
  L_printClockEncoders236
  L_followArrow237
  L_followArrow238
  L_followArrow239
  L_followArrow240
  L_followArrow241
  L_followArrow242
  L_followArrow243
  L_followArrow244
  L_followArrow245
  L_followArrow246
  L_followArrow247
  L_followArrow248
  L_followArrow249
  L_followArrow250
  L_followArrow251
  L_followArrow252
  L_followArrow253
  L_followArrow254
  L_followArrow255
  L_followArrow256
  L_followArrow257
  L_followArrow258
  L_followArrow259
  L_followArrow260
  L_followArrow261
  L_followArrow262
  L_followArrow263
  L_followArrow264
  L_followArrow265
  L_followArrow266
  L_followArrow267
  L_followArrow268
  L_interrupt269
  L_pulseIn1270
  L_pulseIn1271
  L_pulseIn1272
  L_pulseIn1273
  L_pulseIn1274
  L_pulseIn1275
  L_pulseIn1276
  L_pulseIn1277
  L_pulseIn2278
  L_pulseIn2279
  L_pulseIn2280
  L_pulseIn2281
  L_pulseIn2282
  L_pulseIn2283
  L_pulseIn2284
  L_pulseIn2285
  L_pulseIn3286
  L_pulseIn3287
  L_pulseIn3288
  L_pulseIn3289
  L_pulseIn3290
  L_pulseIn3291
  L_pulseIn3292
  L_pulseIn3293
  L_getDis1294
  L_getDis1295
  L_getDis1296
  L_getDis2297
  L_getDis2298
  L_getDis2299
  L_getDis3300
  L_getDis3301
  L_getDis3302
  L_NidegL303
  L_NidegL304
  L_NidegL305
  L_NidegR306
  L_NidegR307
  L_NidegR308
  L_moFEnc309
  L_moFEnc310
  L_moFEnc311
  L_avoidObstacles312
  L_avoidObstacles313
  L_avoidObstacles314
  L_avoidObstacles315
  L_avoidObstacles316
  L_avoidObstacles317
  L_avoidObstacles318
  L_avoidObstacles319
  L_avoidObstacles320
  L_avoidObstacles321
  L_avoidObstacles322
  L_avoidObstacles323
  L_avoidObstacles324
  L_avoidObstacles325
  L_avoidObstacles326
  L_avoidObstacles327
  L_avoidObstacles328
  L_avoidObstacles329
  L_avoidObstacles330
  L_avoidObstacles331
  L_avoidObstacles332
  L_avoidObstacles333
  L_avoidObstacles334
  L_avoidObstacles335
  L_avoidObstacles336
  L_avoidObstacles337
  L_avoidObstacles338
  L_avoidObstacles339
  L_avoidObstacles340
  L_avoidObstacles341
  L_avoidObstacles342
  L_avoidObstacles343
  L_avoidObstacles344
  L_avoidObstacles345
  L_avoidObstacles346
  L_avoidObstacles347
  L_avoidObstacles348
  L_avoidObstacles349
  L_avoidObstacles350
  L_avoidObstacles351
  L_avoidObstacles352
  L_avoidObstacles353
  L_avoidObstacles354
  L_avoidObstacles355
  L_avoidObstacles356
  L_avoidObstacles357
  L_avoidObstacles358
  L_avoidObstacles359
  L_avoidObstacles360
  L_avoidObstacles361
  L_avoidObstacles362
  L_avoidObstacles363
  L_avoidObstacles364
  L_avoidObstacles365
  L_main366
  L_main367
  L_main368
  L_main369
  L_main370
  L_main371
  L__lineFollow372
  L__lineFollow373
  L__lineFollow374
  L__lineFollow375
  L__lineFollow376
  L__lineFollow377
  L__lineFollow378
  L__lineFollow379
  L__lineFollow380
  L__lineFollow381
  L__lineFollow382
  L__lineFollow383
  L__lineFollow384
  L__lineFollow385
  L__lineFollow386
  L__lineFollow387
  L__lineFollow388
  L__lineFollow389
  L__lineFollow390
  L__lineFollow391
  L__lineFollow392
  L__lineFollow393
  L__straight394
  L__straight395
  L__straight_com396
  L__straight_com397
  L__straight_com398
  L__SemSmallFollow399
  L__SemSmallFollow400
  L__SemSmallFollow401
  L__SemSmallFollow402
  L__SemSmallFollow403
  L__SemSmallFollow404
  L__SemSmallFollow405
  L__SemSmallFollow406
  L__SemSmallFollow407
  L__SemSmallFollow408
  L__SemSmallFollow409
  L__SemSmallFollow410
  L__encoder411
  L__encoder412
  L__goStraight413
  L__goStraight2414
  L__goStraight2415
  L__tuneToMiddle416
  L__avoidObstacles417
  L__avoidObstacles418
  L__avoidObstacles419
  L__avoidObstacles420
  L__avoidObstacles421
  L__avoidObstacles422
  L__avoidObstacles423
  _fullSpeed
  _mediumSpeed
  _rotateLeft
  _rotateRight
  _moveF
  _moveB
  _forward
  _backward
  _leftHardTurn
  _RightHardTurn
  _leftTurn
  _RightTurn
  _leftSoftTurn
  _rightSoftTurn
  _stopAll
  _leftT
  _rightT
  _sensorRead
  L__sensorRead424
  L__sensorRead425
  L__sensorRead426
  L__sensorRead427
  L__sensorRead428
  L__sensorRead429
  L__sensorRead430
  L__sensorRead431
  L__sensorRead432
  L__sensorRead433
  L__sensorRead434
  L__sensorRead435
  L__sensorRead436
  L__sensorRead437
  _printToLcd
  L__printToLcd438
  _bin_deci
  L__bin_deci439
  L__bin_deci440
  L__bin_deci441
  L__bin_deci442
  L__bin_deci443
  L__bin_deci444
  L__bin_deci445
  L__bin_deci446
  L__bin_deci447
  L__bin_deci448
  _lineFollow
  L__lineFollow449
  L__lineFollow450
  L__lineFollow451
  L__lineFollow452
  L__lineFollow453
  L__lineFollow454
  L__lineFollow455
  L__lineFollow456
  L__lineFollow457
  L__lineFollow458
  L__lineFollow459
  L__lineFollow460
  L__lineFollow461
  L__lineFollow462
  L__lineFollow463
  L__lineFollow464
  L__lineFollow465
  L__lineFollow466
  L__lineFollow467
  L__lineFollow468
  L__lineFollow469
  L__lineFollow470
  L__lineFollow471
  L__lineFollow472
  L__lineFollow473
  L__lineFollow474
  L__lineFollow475
  L__lineFollow476
  L__lineFollow477
  L__lineFollow478
  L__lineFollow479
  L__lineFollow480
  L__lineFollow481
  L__lineFollow482
  L__lineFollow483
  L__lineFollow484
  L__lineFollow485
  L__lineFollow486
  L__lineFollow487
  L__lineFollow488
  L__lineFollow489
  L__lineFollow490
  L__lineFollow491
  L__lineFollow492
  L__lineFollow493
  L__lineFollow494
  L__lineFollow495
  L__lineFollow496
  L__lineFollow497
  L__lineFollow498
  _straight
  L__straight499
  L__straight500
  L__straight501
  L__straight502
  L__straight503
  L__straight504
  _straight_com
  _SemSmallFollow
  L__SemSmallFollow505
  L__SemSmallFollow506
  L__SemSmallFollow507
  L__SemSmallFollow508
  L__SemSmallFollow509
  L__SemSmallFollow510
  L__SemSmallFollow511
  L__SemSmallFollow512
  L__SemSmallFollow513
  L__SemSmallFollow514
  L__SemSmallFollow515
  L__SemSmallFollow516
  L__SemSmallFollow517
  L__SemSmallFollow518
  L__SemSmallFollow519
  L__SemSmallFollow520
  L__SemSmallFollow521
  L__SemSmallFollow522
  L__SemSmallFollow523
  L__SemSmallFollow524
  L__SemSmallFollow525
  L__SemSmallFollow526
  L__SemSmallFollow527
  L__SemSmallFollow528
  L__SemSmallFollow529
  L__SemSmallFollow530
  L__SemSmallFollow531
  L__SemSmallFollow532
  L__SemSmallFollow533
  L__SemSmallFollow534
  L__SemSmallFollow535
  L__SemSmallFollow536
  L__SemSmallFollow537
  L__SemSmallFollow538
  L__SemSmallFollow539
  L__SemSmallFollow540
  L__SemSmallFollow541
  L__SemSmallFollow542
  L__SemSmallFollow543
  L__SemSmallFollow544
  L__SemSmallFollow545
  L__SemSmallFollow546
  L__SemSmallFollow547
  L__SemSmallFollow548
  L__SemSmallFollow549
  L__SemSmallFollow550
  L__SemSmallFollow551
  L__SemSmallFollow552
  L__SemSmallFollow553
  L__SemSmallFollow554
  L__SemSmallFollow555
  L__SemSmallFollow556
  L__SemSmallFollow557
  L__SemSmallFollow558
  L__SemSmallFollow559
  L__SemSmallFollow560
  L__SemSmallFollow561
  L__SemSmallFollow562
  L__SemSmallFollow563
  L__SemSmallFollow564
  _encoder
  L__encoder565
  L__encoder566
  L__encoder567
  L__encoder568
  _initEncoder
  _goStraight
  L__goStraight569
  L__goStraight570
  L__goStraight571
  L__goStraight572
  L__goStraight573
  L__goStraight574
  L__goStraight575
  _goStraight2
  L__goStraight2576
  L__goStraight2577
  L__goStraight2578
  L__goStraight2579
  L__goStraight2580
  L__goStraight2581
  _tuneToMiddle
  L__tuneToMiddle582
  L__tuneToMiddle583
  L__tuneToMiddle584
  L__tuneToMiddle585
  L__tuneToMiddle586
  L__tuneToMiddle587
  L__tuneToMiddle588
  L__tuneToMiddle589
  L__tuneToMiddle590
  L__tuneToMiddle591
  _printClockEncoders
  L__printClockEncoders592
  L__printClockEncoders593
  _getFrontDecimal
  L__getFrontDecimal594
  L__getFrontDecimal595
  L__getFrontDecimal596
  L__getFrontDecimal597
  L__getFrontDecimal598
  L__getFrontDecimal599
  L__getFrontDecimal600
  L__getFrontDecimal601
  L__getFrontDecimal602
  L__getFrontDecimal603
  _getBackDecimal
  L__getBackDecimal604
  L__getBackDecimal605
  L__getBackDecimal606
  L__getBackDecimal607
  _followArrow
  L__followArrow608
  L__followArrow609
  L__followArrow610
  L__followArrow611
  L__followArrow612
  L__followArrow613
  L__followArrow614
  L__followArrow615
  L__followArrow616
  L__followArrow617
  L__followArrow618
  L__followArrow619
  L__followArrow620
  L__followArrow621
  L__followArrow622
  L__followArrow623
  L__followArrow624
  _interrupt
  L__interrupt625
  _init_timer
  _pulseIn1
  L__pulseIn1626
  L__pulseIn1627
  _pulseIn2
  L__pulseIn2628
  L__pulseIn2629
  _pulseIn3
  L__pulseIn3630
  L__pulseIn3631
  _getDis1
  _getDis2
  _getDis3
  _NidegL
  L__NidegL632
  _NidegR
  L__NidegR633
  _moFEnc
  L__moFEnc634
  _getCompass
  _avoidObstacles
  L__avoidObstacles635
  L__avoidObstacles636
  L__avoidObstacles637
  L__avoidObstacles638
  L__avoidObstacles639
  L__avoidObstacles640
  L__avoidObstacles641
  L__avoidObstacles642
  L__avoidObstacles643
  L__avoidObstacles644
  L__avoidObstacles645
  L__avoidObstacles646
  L__avoidObstacles647
  L__avoidObstacles648
  L__avoidObstacles649
  L__avoidObstacles650
  L__avoidObstacles651
  L__avoidObstacles652
  L__avoidObstacles653
  L__avoidObstacles654
  L__avoidObstacles655
  L__avoidObstacles656
  L__avoidObstacles657
  L__avoidObstacles658
  L__avoidObstacles659
  L__avoidObstacles660
  L__avoidObstacles661
  L__avoidObstacles662
  L__avoidObstacles663
  L__avoidObstacles664
  _main
  L__main665
  L_ADC_Read0
  L_ADC_Read1
  _ADC_Read
  L_Delay_10us0
  L_Delay_22us1
  L_Delay_50us2
  L_Delay_80us3
  L_Delay_500us4
  L_Delay_5500us5
  L_Delay_8ms6
  L_Delay_5ms7
  L_Delay_100ms8
  L_Delay_1sec9
  L_boot16_Delay_5ms10
  L_Delay_Cyc11
  L_Delay_Cyc12
  L_VDelay_ms13
  L_VDelay_ms14
  L_VDelay_ms15
  L_VDelay_Advanced_ms16
  L_VDelay_Advanced_ms17
  L_VDelay_Advanced_ms18
  _Get_Fosc_kHz
  _Delay_1us
  _Delay_10us
  _Delay_22us
  _Delay_50us
  _Delay_80us
  _Delay_500us
  _Delay_5500us
  _Delay_8ms
  _Delay_5ms
  _Delay_100ms
  _Delay_1sec
  _boot16_Delay_5ms
  _Delay_Cyc
  _VDelay_ms
  L__VDelay_ms19
  L__VDelay_ms20
  L__VDelay_ms21
  _VDelay_Advanced_ms
  L__VDelay_Advanced_ms22
  L__VDelay_Advanced_ms23
  L__VDelay_Advanced_ms24
  L_Div_16x16_S0
  L_Div_16x16_S1
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  L_Div_32x32_S6
  L_Div_32x32_S7
  L_Div_32x32_S8
  L_Div_32x32_S9
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  _Mul_8x8_U
  _Mul_16x16_U
  _Div_8x8_U
  _Div_16x16_U
  _Mul_8x8_S
  _Mul_16x16_S
  _Div_16x16_S_L
  _Div_16x16_S
  _Div_8x8_S
  _SDIV3232L
  _COMFREM
  _Div_32x32_S
  _Div_32x32_U
  _Mul_32x32_U
  _Mul_32x32_S
  _PWM2_Init
  _PWM2_Set_Duty
  L__PWM2_Set_Duty0
  L__PWM2_Set_Duty1
  L__PWM2_Set_Duty2
  L__PWM2_Set_Duty3
  _PWM2_Start
  _PWM2_Stop
  _PWM1_Init
  _PWM1_Set_Duty
  L__PWM1_Set_Duty4
  L__PWM1_Set_Duty5
  L__PWM1_Set_Duty6
  L__PWM1_Set_Duty7
  _PWM1_Start
  _PWM1_Stop
  _CC2D_Loop1
  _____DoICP
  _____DoIFC
  ___CC2DW
  _Swap
  L_sensorRead0
  L_sensorRead1
  L_sensorRead2
  L_sensorRead3
  L_sensorRead4
  L_sensorRead5
  L_sensorRead6
  L_sensorRead7
  L_sensorRead8
  L_sensorRead9
  L_sensorRead10
  L_sensorRead11
  L_sensorRead12
  L_sensorRead13
  L_sensorRead14
  L_sensorRead15
  L_sensorRead16
  L_sensorRead17
  L_sensorRead18
  L_sensorRead19
  L_sensorRead20
  L_sensorRead21
  L_sensorRead22
  L_sensorRead23
  L_sensorRead24
  L_sensorRead25
  L_sensorRead26
  L_sensorRead27
  L_printToLcd28
  L_printToLcd29
  L_printToLcd30
  L_lineFollow31
  L_lineFollow32
  L_lineFollow33
  L_lineFollow34
  L_lineFollow35
  L_lineFollow36
  L_lineFollow37
  L_lineFollow38
  L_lineFollow39
  L_lineFollow40
  L_lineFollow41
  L_lineFollow42
  L_lineFollow43
  L_lineFollow44
  L_lineFollow45
  L_lineFollow46
  L_lineFollow47
  L_lineFollow48
  L_lineFollow49
  L_lineFollow50
  L_lineFollow51
  L_lineFollow52
  L_lineFollow53
  L_lineFollow54
  L_lineFollow55
  L_lineFollow56
  L_lineFollow57
  L_lineFollow58
  L_lineFollow59
  L_lineFollow60
  L_lineFollow61
  L_lineFollow62
  L_lineFollow63
  L_lineFollow64
  L_lineFollow65
  L_lineFollow66
  L_lineFollow67
  L_lineFollow68
  L_lineFollow69
  L_lineFollow70
  L_lineFollow71
  L_lineFollow72
  L_lineFollow73
  L_lineFollow74
  L_lineFollow75
  L_lineFollow76
  L_lineFollow77
  L_lineFollow78
  L_lineFollow79
  L_lineFollow80
  L_lineFollow81
  L_lineFollow82
  L_lineFollow83
  L_lineFollow84
  L_lineFollow85
  L_lineFollow86
  L_lineFollow87
  L_lineFollow88
  L_lineFollow89
  L_lineFollow90
  L_lineFollow91
  L_lineFollow92
  L_lineFollow93
  L_lineFollow94
  L_lineFollow95
  L_lineFollow96
  L_lineFollow97
  L_lineFollow98
  L_lineFollow99
  L_lineFollow100
  L_lineFollow101
  L_lineFollow102
  L_lineFollow103
  L_lineFollow104
  L_lineFollow105
  L_lineFollow106
  L_lineFollow107
  L_lineFollow108
  L_lineFollow109
  L_lineFollow110
  L_lineFollow111
  L_lineFollow112
  L_straight113
  L_straight114
  L_straight115
  L_straight116
  L_straight117
  L_straight118
  L_straight119
  L_straight120
  L_straight121
  L_straight122
  L_straight123
  L_straight_com124
  L_straight_com125
  L_straight_com126
  L_straight_com127
  L_straight_com128
  L_straight_com129
  L_straight_com130
  L_straight_com131
  L_straight_com132
  L_straight_com133
  L_straight_com134
  L_straight_com135
  L_SemSmallFollow136
  L_SemSmallFollow137
  L_SemSmallFollow138
  L_SemSmallFollow139
  L_SemSmallFollow140
  L_SemSmallFollow141
  L_SemSmallFollow142
  L_SemSmallFollow143
  L_SemSmallFollow144
  L_SemSmallFollow145
  L_SemSmallFollow146
  L_SemSmallFollow147
  L_SemSmallFollow148
  L_SemSmallFollow149
  L_SemSmallFollow150
  L_SemSmallFollow151
  L_SemSmallFollow152
  L_SemSmallFollow153
  L_SemSmallFollow154
  L_SemSmallFollow155
  L_SemSmallFollow156
  L_SemSmallFollow157
  L_SemSmallFollow158
  L_SemSmallFollow159
  L_SemSmallFollow160
  L_SemSmallFollow161
  L_SemSmallFollow162
  L_SemSmallFollow163
  L_SemSmallFollow164
  L_SemSmallFollow165
  L_SemSmallFollow166
  L_SemSmallFollow167
  L_SemSmallFollow168
  L_SemSmallFollow169
  L_SemSmallFollow170
  L_SemSmallFollow171
  L_SemSmallFollow172
  L_SemSmallFollow173
  L_SemSmallFollow174
  L_SemSmallFollow175
  L_SemSmallFollow176
  L_SemSmallFollow177
  L_SemSmallFollow178
  L_SemSmallFollow179
  L_SemSmallFollow180
  L_SemSmallFollow181
  L_SemSmallFollow182
  L_SemSmallFollow183
  L_encoder184
  L_encoder185
  L_encoder186
  L_encoder187
  L_encoder188
  L_encoder189
  L_encoder190
  L_encoder191
  L_encoder192
  L_encoder193
  L_encoder194
  L_goStraight195
  L_goStraight196
  L_goStraight197
  L_goStraight198
  L_goStraight199
  L_goStraight200
  L_goStraight201
  L_goStraight202
  L_goStraight203
  L_goStraight204
  L_goStraight205
  L_goStraight206
  L_goStraight207
  L_goStraight2208
  L_goStraight2209
  L_goStraight2210
  L_goStraight2211
  L_goStraight2212
  L_goStraight2213
  L_goStraight2214
  L_goStraight2215
  L_goStraight2216
  L_goStraight2217
  L_tuneToMiddle218
  L_tuneToMiddle219
  L_tuneToMiddle220
  L_tuneToMiddle221
  L_tuneToMiddle222
  L_tuneToMiddle223
  L_tuneToMiddle224
  L_tuneToMiddle225
  L_tuneToMiddle226
  L_tuneToMiddle227
  L_tuneToMiddle228
  L_tuneToMiddle229
  L_tuneToMiddle230
  L_tuneToMiddle231
  L_tuneToMiddle232
  L_tuneToMiddle233
  L_printClockEncoders234
  L_printClockEncoders235
  L_printClockEncoders236
  L_followArrow237
  L_followArrow238
  L_followArrow239
  L_followArrow240
  L_followArrow241
  L_followArrow242
  L_followArrow243
  L_followArrow244
  L_followArrow245
  L_followArrow246
  L_followArrow247
  L_followArrow248
  L_followArrow249
  L_followArrow250
  L_followArrow251
  L_followArrow252
  L_followArrow253
  L_followArrow254
  L_followArrow255
  L_followArrow256
  L_followArrow257
  L_followArrow258
  L_followArrow259
  L_followArrow260
  L_followArrow261
  L_followArrow262
  L_followArrow263
  L_followArrow264
  L_followArrow265
  L_followArrow266
  L_followArrow267
  L_followArrow268
  L_interrupt269
  L_pulseIn1270
  L_pulseIn1271
  L_pulseIn1272
  L_pulseIn1273
  L_pulseIn1274
  L_pulseIn1275
  L_pulseIn1276
  L_pulseIn1277
  L_pulseIn2278
  L_pulseIn2279
  L_pulseIn2280
  L_pulseIn2281
  L_pulseIn2282
  L_pulseIn2283
  L_pulseIn2284
  L_pulseIn2285
  L_pulseIn3286
  L_pulseIn3287
  L_pulseIn3288
  L_pulseIn3289
  L_pulseIn3290
  L_pulseIn3291
  L_pulseIn3292
  L_pulseIn3293
  L_getDis1294
  L_getDis1295
  L_getDis1296
  L_getDis2297
  L_getDis2298
  L_getDis2299
  L_getDis3300
  L_getDis3301
  L_getDis3302
  L_NidegL303
  L_NidegL304
  L_NidegL305
  L_NidegR306
  L_NidegR307
  L_NidegR308
  L_moFEnc309
  L_moFEnc310
  L_moFEnc311
  L_avoidObstacles312
  L_avoidObstacles313
  L_avoidObstacles314
  L_avoidObstacles315
  L_avoidObstacles316
  L_avoidObstacles317
  L_avoidObstacles318
  L_avoidObstacles319
  L_avoidObstacles320
  L_avoidObstacles321
  L_avoidObstacles322
  L_avoidObstacles323
  L_avoidObstacles324
  L_avoidObstacles325
  L_avoidObstacles326
  L_avoidObstacles327
  L_avoidObstacles328
  L_avoidObstacles329
  L_avoidObstacles330
  L_avoidObstacles331
  L_avoidObstacles332
  L_avoidObstacles333
  L_avoidObstacles334
  L_avoidObstacles335
  L_avoidObstacles336
  L_avoidObstacles337
  L_avoidObstacles338
  L_avoidObstacles339
  L_avoidObstacles340
  L_avoidObstacles341
  L_avoidObstacles342
  L_avoidObstacles343
  L_avoidObstacles344
  L_avoidObstacles345
  L_avoidObstacles346
  L_avoidObstacles347
  L_avoidObstacles348
  L_avoidObstacles349
  L_avoidObstacles350
  L_avoidObstacles351
  L_avoidObstacles352
  L_avoidObstacles353
  L_avoidObstacles354
  L_avoidObstacles355
  L_avoidObstacles356
  L_avoidObstacles357
  L_avoidObstacles358
  L_avoidObstacles359
  L_avoidObstacles360
  L_avoidObstacles361
  L_avoidObstacles362
  L_avoidObstacles363
  L_avoidObstacles364
  L_avoidObstacles365
  L_main366
  L_main367
  L_main368
  L_main369
  L_main370
  L_main371
  L__lineFollow372
  L__lineFollow373
  L__lineFollow374
  L__lineFollow375
  L__lineFollow376
  L__lineFollow377
  L__lineFollow378
  L__lineFollow379
  L__lineFollow380
  L__lineFollow381
  L__lineFollow382
  L__lineFollow383
  L__lineFollow384
  L__lineFollow385
  L__lineFollow386
  L__lineFollow387
  L__lineFollow388
  L__lineFollow389
  L__lineFollow390
  L__lineFollow391
  L__lineFollow392
  L__lineFollow393
  L__straight394
  L__straight395
  L__straight_com396
  L__straight_com397
  L__straight_com398
  L__SemSmallFollow399
  L__SemSmallFollow400
  L__SemSmallFollow401
  L__SemSmallFollow402
  L__SemSmallFollow403
  L__SemSmallFollow404
  L__SemSmallFollow405
  L__SemSmallFollow406
  L__SemSmallFollow407
  L__SemSmallFollow408
  L__SemSmallFollow409
  L__SemSmallFollow410
  L__encoder411
  L__encoder412
  L__goStraight413
  L__goStraight2414
  L__goStraight2415
  L__tuneToMiddle416
  L__avoidObstacles417
  L__avoidObstacles418
  L__avoidObstacles419
  L__avoidObstacles420
  L__avoidObstacles421
  L__avoidObstacles422
  L__avoidObstacles423
  _fullSpeed
  _mediumSpeed
  _rotateLeft
  _rotateRight
  _moveF
  _moveB
  _forward
  _backward
  _leftHardTurn
  _RightHardTurn
  _leftTurn
  _RightTurn
  _leftSoftTurn
  _rightSoftTurn
  _stopAll
  _leftT
  _rightT
  _sensorRead
  L__sensorRead424
  L__sensorRead425
  L__sensorRead426
  L__sensorRead427
  L__sensorRead428
  L__sensorRead429
  L__sensorRead430
  L__sensorRead431
  L__sensorRead432
  L__sensorRead433
  L__sensorRead434
  L__sensorRead435
  L__sensorRead436
  L__sensorRead437
  _printToLcd
  L__printToLcd438
  _bin_deci
  L__bin_deci439
  L__bin_deci440
  L__bin_deci441
  L__bin_deci442
  L__bin_deci443
  L__bin_deci444
  L__bin_deci445
  L__bin_deci446
  L__bin_deci447
  L__bin_deci448
  _lineFollow
  L__lineFollow449
  L__lineFollow450
  L__lineFollow451
  L__lineFollow452
  L__lineFollow453
  L__lineFollow454
  L__lineFollow455
  L__lineFollow456
  L__lineFollow457
  L__lineFollow458
  L__lineFollow459
  L__lineFollow460
  L__lineFollow461
  L__lineFollow462
  L__lineFollow463
  L__lineFollow464
  L__lineFollow465
  L__lineFollow466
  L__lineFollow467
  L__lineFollow468
  L__lineFollow469
  L__lineFollow470
  L__lineFollow471
  L__lineFollow472
  L__lineFollow473
  L__lineFollow474
  L__lineFollow475
  L__lineFollow476
  L__lineFollow477
  L__lineFollow478
  L__lineFollow479
  L__lineFollow480
  L__lineFollow481
  L__lineFollow482
  L__lineFollow483
  L__lineFollow484
  L__lineFollow485
  L__lineFollow486
  L__lineFollow487
  L__lineFollow488
  L__lineFollow489
  L__lineFollow490
  L__lineFollow491
  L__lineFollow492
  L__lineFollow493
  L__lineFollow494
  L__lineFollow495
  L__lineFollow496
  L__lineFollow497
  L__lineFollow498
  _straight
  L__straight499
  L__straight500
  L__straight501
  L__straight502
  L__straight503
  L__straight504
  _straight_com
  _SemSmallFollow
  L__SemSmallFollow505
  L__SemSmallFollow506
  L__SemSmallFollow507
  L__SemSmallFollow508
  L__SemSmallFollow509
  L__SemSmallFollow510
  L__SemSmallFollow511
  L__SemSmallFollow512
  L__SemSmallFollow513
  L__SemSmallFollow514
  L__SemSmallFollow515
  L__SemSmallFollow516
  L__SemSmallFollow517
  L__SemSmallFollow518
  L__SemSmallFollow519
  L__SemSmallFollow520
  L__SemSmallFollow521
  L__SemSmallFollow522
  L__SemSmallFollow523
  L__SemSmallFollow524
  L__SemSmallFollow525
  L__SemSmallFollow526
  L__SemSmallFollow527
  L__SemSmallFollow528
  L__SemSmallFollow529
  L__SemSmallFollow530
  L__SemSmallFollow531
  L__SemSmallFollow532
  L__SemSmallFollow533
  L__SemSmallFollow534
  L__SemSmallFollow535
  L__SemSmallFollow536
  L__SemSmallFollow537
  L__SemSmallFollow538
  L__SemSmallFollow539
  L__SemSmallFollow540
  L__SemSmallFollow541
  L__SemSmallFollow542
  L__SemSmallFollow543
  L__SemSmallFollow544
  L__SemSmallFollow545
  L__SemSmallFollow546
  L__SemSmallFollow547
  L__SemSmallFollow548
  L__SemSmallFollow549
  L__SemSmallFollow550
  L__SemSmallFollow551
  L__SemSmallFollow552
  L__SemSmallFollow553
  L__SemSmallFollow554
  L__SemSmallFollow555
  L__SemSmallFollow556
  L__SemSmallFollow557
  L__SemSmallFollow558
  L__SemSmallFollow559
  L__SemSmallFollow560
  L__SemSmallFollow561
  L__SemSmallFollow562
  L__SemSmallFollow563
  L__SemSmallFollow564
  _encoder
  L__encoder565
  L__encoder566
  L__encoder567
  L__encoder568
  _initEncoder
  _goStraight
  L__goStraight569
  L__goStraight570
  L__goStraight571
  L__goStraight572
  L__goStraight573
  L__goStraight574
  L__goStraight575
  _goStraight2
  L__goStraight2576
  L__goStraight2577
  L__goStraight2578
  L__goStraight2579
  L__goStraight2580
  L__goStraight2581
  _tuneToMiddle
  L__tuneToMiddle582
  L__tuneToMiddle583
  L__tuneToMiddle584
  L__tuneToMiddle585
  L__tuneToMiddle586
  L__tuneToMiddle587
  L__tuneToMiddle588
  L__tuneToMiddle589
  L__tuneToMiddle590
  L__tuneToMiddle591
  _printClockEncoders
  L__printClockEncoders592
  L__printClockEncoders593
  _getFrontDecimal
  L__getFrontDecimal594
  L__getFrontDecimal595
  L__getFrontDecimal596
  L__getFrontDecimal597
  L__getFrontDecimal598
  L__getFrontDecimal599
  L__getFrontDecimal600
  L__getFrontDecimal601
  L__getFrontDecimal602
  L__getFrontDecimal603
  _getBackDecimal
  L__getBackDecimal604
  L__getBackDecimal605
  L__getBackDecimal606
  L__getBackDecimal607
  _followArrow
  L__followArrow608
  L__followArrow609
  L__followArrow610
  L__followArrow611
  L__followArrow612
  L__followArrow613
  L__followArrow614
  L__followArrow615
  L__followArrow616
  L__followArrow617
  L__followArrow618
  L__followArrow619
  L__followArrow620
  L__followArrow621
  L__followArrow622
  L__followArrow623
  L__followArrow624
  _interrupt
  L__interrupt625
  _init_timer
  _pulseIn1
  L__pulseIn1626
  L__pulseIn1627
  _pulseIn2
  L__pulseIn2628
  L__pulseIn2629
  _pulseIn3
  L__pulseIn3630
  L__pulseIn3631
  _getDis1
  _getDis2
  _getDis3
  _NidegL
  L__NidegL632
  _NidegR
  L__NidegR633
  _moFEnc
  L__moFEnc634
  _getCompass
  _avoidObstacles
  L__avoidObstacles635
  L__avoidObstacles636
  L__avoidObstacles637
  L__avoidObstacles638
  L__avoidObstacles639
  L__avoidObstacles640
  L__avoidObstacles641
  L__avoidObstacles642
  L__avoidObstacles643
  L__avoidObstacles644
  L__avoidObstacles645
  L__avoidObstacles646
  L__avoidObstacles647
  L__avoidObstacles648
  L__avoidObstacles649
  L__avoidObstacles650
  L__avoidObstacles651
  L__avoidObstacles652
  L__avoidObstacles653
  L__avoidObstacles654
  L__avoidObstacles655
  L__avoidObstacles656
  L__avoidObstacles657
  L__avoidObstacles658
  L__avoidObstacles659
  L__avoidObstacles660
  L__avoidObstacles661
  L__avoidObstacles662
  L__avoidObstacles663
  L__avoidObstacles664
  _main
  L__main665
